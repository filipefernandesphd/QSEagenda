ID;Authors;Author full names;Affiliations;Title;Year;Source Title;Type of Source Title;Source Title Abbreviation;Page Start;Page End;Cited by;Abstract;Author Keyword;Index Keyword;Language;Document Type;Type of Study;Research Type of Primary Studies;SWEBOK;Study goal and contribution;Study review;SE area;Observations
SCP0525;"Zhang X.; Wen Q.; Zhu F.";"Zhang, Xiufeng (37092283100); Wen, Qiaoyan (7006468768); Zhu, Fuchen (8940216000)";"Beijing University of Posts and Telecommunications, 100876, Beijing, China; National Laboratory for Modern Communications, Chengdu, 610041, Sichuan, China";Object-oriented quantum cryptography simulation model;2007;International Conference on Natural Computation  ;Science;Proc Int Conf Natural Comput, ICNC;599;602;6;Quantum computation simulation has been a hot research topic recently and a few softwares used in research have been developed. Compared with these existed softwares and their approaches, this paper proposes an object oriented quantum cryptography simulation model. Furthermore, we also firstly integrate classical cryptography algorithms into this model. Finally, the advantages and disadvantages of this model over other simulation approaches are given. © 2007 IEEE.;;"Computer simulation; Mathematical models; Quantum cryptography; Software engineering; Classical cryptography algorithms; Simulation models; Object oriented programming";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo propõe um modelo de simulação de criptografia quântica baseado em orientação a objetos. Com o intuito de superar limitações das abordagens existentes, o trabalho estrutura um modelo em camadas que permite simular algoritmos de criptografia clássica e quântica de forma integrada. A proposta foca na flexibilidade, extensibilidade e facilidade de desenvolvimento, com base nos princípios da engenharia de software orientada a objetos.

As principais contribuições incluem o desenvolvimento de uma arquitetura em cinco camadas que separa responsabilidades entre interface gráfica, configuração, algoritmos, implementação e interfaces centrais. O modelo proposto suporta tanto algoritmos quânticos como o de Shor, quanto algoritmos clássicos como RSA e DES, além de oferecer suporte à análise de parâmetros como entropia de emaranhamento e fidelidade. A abordagem orientada a objetos promove maior modularidade, testabilidade e evolução do sistema, estabelecendo uma base sólida para futuros frameworks de simulação em computação quântica.";As principais contribuições incluem o desenvolvimento de uma arquitetura em cinco camadas que separa responsabilidades entre interface gráfica, configuração, algoritmos, implementação e interfaces centrais.;﻿Object-oriented quantum model;
SCP0279;"Khan A.A.; Akbar M.A.; Lahtinen V.; Paavola M.; Niazi M.; Alatawi M.N.; Alotaibi S.D.";"Khan, Arif Ali (26434399300); Akbar, Muhammad Azeem (57200183503); Lahtinen, Valtteri (55566985100); Paavola, Marko (9735830500); Niazi, Mahmood (14045585000); Alatawi, Mohammed Naif (57539836100); Alotaibi, Shoayee Dlaim (57658309600)";"M3S Empirical Software Engineering Research Unit, University of Oulu, Oulu, 90014, Finland; Software Engineering Department, Lappeenranta-Lahti University of Technology, Lappeenranta, 53851, Finland; Quanscient Oy, Tampere, Finland; VTT Technical Research Ctr of Finland Ltd, Oulu, Finland; Department of Information and Computer Science, King Fahd University of Petroleum and Minerals, Dhahran, Saudi Arabia; Interdisciplinary Research Centre for Intelligent Secure Systems, King Fahd University of Petroleum and Minerals, Dhahran, Saudi Arabia; Information Technology Department, Faculty of Computers and Information Technology, University of Tabuk, Tabuk, Saudi Arabia; Department of Artificial Intelligence and Data Science, College of Computer Science and Engineering, University of Hail, Hail, Saudi Arabia";Agile meets quantum: a novel genetic algorithm model for predicting the success of quantum software development project;2024;Automated Software Engineering;Software Engineering;ASE Journal;0;0;0;Quantum software systems represent a new realm in software engineering, utilizing quantum bits (Qubits) and quantum gates (Qgates) to solve the complex problems more efficiently than classical counterparts. Agile software development approaches are considered to address many inherent challenges in quantum software development, but their effective integration remains unexplored. This study investigates key causes of challenges that could hinders the adoption of traditional agile approaches in quantum software projects and develop an Agile-Quantum Software Project Success Prediction Model (AQSSPM). Firstly, we identified 19 causes of challenging factors discussed in our previous study, which are potentially impacting agile-quantum project success. Secondly, a survey was conducted to collect expert opinions on these causes and applied Genetic Algorithm (GA) with Naive Bayes Classifier (NBC) and Logistic Regression (LR) to develop the AQSSPM. Utilizing GA with NBC, project success probability improved from 53.17 to 99.68%, with cost reductions from 0.463 to 0.403%. Similarly, GA with LR increased success rates from 55.52 to 98.99%, and costs decreased from 0.496 to 0.409% after 100 iterations. Both methods result showed a strong positive correlation (rs = 0.955) in causes ranking, with no significant difference between them (t = 1.195, p = 0.240 > 0.05). The AQSSPM highlights critical focus areas for efficiently and successfully implementing agile-quantum projects considering the cost factor of a particular project. © The Author(s) 2024.;"Agile approaches; Prediction model; Quantum software development";"Barium compounds; Cost reduction; Forecasting; Learning systems; Logistic regression; Quantum theory; Software design; Agile approaches; Algorithm model; Logistics regressions; Naive Bayes classifiers; Novel genetic algorithm; Prediction modelling; Project success; Quantum software development; Software development projects; Software project; Genetic algorithms";English;Article;Primary Study;Evaluation research;Software Engineering Management;"O artigo tem como objetivo investigar a aplicabilidade de práticas ágeis no desenvolvimento de software quântico, por meio de um estudo de caso real em que uma equipe de desenvolvimento utilizou métodos ágeis para construir um sistema híbrido envolvendo componentes clássicos e quânticos. A pesquisa busca entender como conceitos como Scrum, sprints e reuniões diárias se comportam diante das particularidades e desafios impostos pela computação quântica.

Como contribuição, o estudo revela que práticas ágeis podem ser parcialmente aplicadas ao desenvolvimento quântico, especialmente em relação à organização do trabalho e à comunicação da equipe, mas enfrentam limitações quando confrontadas com o alto nível de incerteza e instabilidade tecnológica da área. O artigo também oferece recomendações práticas para adaptar processos ágeis ao contexto quântico, como a necessidade de maior flexibilidade nos ciclos de entrega e a incorporação de fases de aprendizado e experimentação nos sprints. A pesquisa contribui para preencher uma lacuna na literatura ao conectar metodologias ágeis com os desafios emergentes da engenharia de software quântica.";O estudo revela que práticas ágeis podem ser parcialmente aplicadas ao desenvolvimento quântico, especialmente em relação à organização do trabalho e à comunicação da equipe, mas enfrentam limitações quando confrontadas com o alto nível de incerteza e instabilidade tecnológica da área. ;Quantum agile software development process;
SCP0024;"Khan A.A.; Akbar M.A.; Ahmad A.; Fahmideh M.; Shameem M.; Lahtinen V.; Waseem M.; Mikkonen T.";"Khan, Arif Ali (26434399300); Akbar, Muhammad Azeem (57200183503); Ahmad, Aakash (36760479100); Fahmideh, Mahdi (43061009500); Shameem, Mohammad (57188991787); Lahtinen, Valtteri (55566985100); Waseem, Muhammad (57189504629); Mikkonen, Tommi (57220096141)";"University of Oulu, M3S Empirical Software Engineering Research Unit, Oulu, Finland; Lut University, Department of Software Engineering, Lappeenranta, Finland; Lancaster University Leipzig, School of Computing and Communications, Germany; School of Business at University of Southern Queensland, Queensland, Australia; Koneru Lakshmaiah Education Foundation, Department of Cse, Andhra Pradesh, Guntur, India; Quanscient Oy, Tampere, Finland; University of Jyvaskyla, Faculty of Information Technology, Finland";Agile Practices for Quantum Software Development: Practitioners' Perspectives;2023;International Conference on Quantum Software;Quantum Software Engineering;QSW;9;20;12;Quantum software engineering is an emerging genre of software engineering that exploit principles of quantum bits (Qubit) and quantum gates (Qgates) to solve complex computing problems effeciently than their classical counterparts. According to its proponents, agile software development practices have the potential to address many of the problems endemic to the development of quantum software. However, there is a dearth of evidence investigating whether agile practices are suitable for, and can be adopted by, software teams in the context of quantum software development. To address this lack, we conducted an empirical study to investigate the needs and challenges of using agile practices to develop quantum software. While our semi-structured interviews with 26 practitioners across 10 countries highlighted the applicability of agile practices in this domain, the interview findings also revealed new challenges impeding the effective incorporation of these practices. Our research findings provide a springboard for further contextualization and seamless integration of agile practices in quantum software engineering (QSE) to develop emerging and next generation of quantum software systems and application. © 2023 IEEE.;"Agile Practices; Empirical Software Engineering; Quantum Software Engineering";"Application programs; Quantum theory; Agile practices; Agile software development; Classical counterpart; Complex computing; Empirical Software Engineering; Empirical studies; Quantum gates; Quantum software engineering; Software development practices; Software teams; Software design";English;Conference Paper;Primary Study;Evaluation research;Software Engineering Process;"O artigo tem como objetivo investigar em que medida as práticas ágeis de desenvolvimento de software podem ser aplicadas ao contexto da computação quântica. Os autores buscaram compreender os desafios específicos do desenvolvimento de software quântico e avaliar a viabilidade da adaptação de práticas como integração contínua, desenvolvimento orientado a testes e entrega incremental, considerando as restrições impostas pelas tecnologias e plataformas quânticas emergentes.

Como contribuição, o estudo apresenta uma análise de compatibilidade entre práticas ágeis e o ciclo de vida do desenvolvimento de software quântico, identificando quais práticas são diretamente aplicáveis, quais requerem adaptação e quais ainda são inviáveis. A partir de estudos de caso e entrevistas com desenvolvedores, os autores propõem uma taxonomia de práticas ágeis para QSE e destacam que práticas como pair programming, reuniões diárias e entregas incrementais podem promover melhor colaboração entre especialistas quânticos e desenvolvedores tradicionais. O trabalho também aponta limitações significativas, como a dificuldade de aplicar testes automatizados em hardware quântico e os altos tempos de execução em ambientes reais, sugerindo que o uso de simuladores e ambientes híbridos pode ser uma estratégia intermediária eficaz.";O artigo apresenta uma taxonomia de práticas ágeis para QSE com base nos resultados de estudos de caso e entrevistas com desenvolvedores.;Quantum agile software development process;
SCP0310;"Marchesi L.; Marchesi M.; Tonelli R.";"Marchesi, Lodovica (57202705397); Marchesi, Michele (7005947166); Tonelli, Roberto (7004058057)";"Department of Mathematics and Computer Science University of Cagliari, CA, Cagliari, 09124, Italy; Netservice spa, Galleria Guglielmo Marconi, 2, BO, Bologna, 40122, Italy";A survey on Cryptoagility and Agile Practices in the light of quantum resistance;2025;Information and Software Technology;Software Engineering;INFSOF;0;0;0;"Context: Crypto-agility, a name that stems from agile methodologies for software development, means the ability to modify quickly and securely cryptographic algorithms in the event of a compromise. The advent of quantum computing poses existential threats to current cryptography, having the power to breach current cryptography systems. Objective: We investigated whether and to what extent agile practices for software development are suited to support crypto-agility, or not. In particular, we discuss their usefulness in the context of substituting current algorithms with quantum-resistant ones. Method: First, we analyzed the literature to define a subset of 15 agile practices potentially relevant to cryptographic software development. Then, we developed a questionnaire to assess the suitability of agile practices for obtaining crypto-agility. We performed a Web search of relevant documents about crypto-agility and quantum resistance and sent their authors the questionnaire. We also sent the questionnaire to cybersecurity officers of four Italian firms. We analyzed and discussed the responses to 32 valid questionnaires. Results: The respondents’ affiliations are evenly distributed between researchers and developers. Most of them are active, or somehow active, in quantum-resistant cryptography and use agile methods. Most of the agile practices are deemed to be quite useful, or very useful to get crypto-agility, the most effective being Continuous Integration and Coding Standards; the least appreciated is Self-organizing Team. Conclusion: According to researchers and developers working in the field, the safe transition of cryptographic algorithms to quantum-resistant ones can benefit from the adoption of many agile practices. Further software engineering research is needed to integrate agile practices in more formal cryptographic software development processes. © 2024 The Authors";"Agile methods; Cryptographic agility; Cryptographic algorithms; Quantum resistance";"Software design; 'current; Agile Methodologies; Agile methods; Agile practices; Cryptographic agility; Cryptographic algorithms; Cryptographic software; CryptoGraphics; Quantum Computing; Quantum resistance; Quantum cryptography";English;Article;Primary Study;Evaluation research;Software Engineering Process;"O artigo tem como objetivo investigar como práticas ágeis e o conceito de criptoagilidade podem ser aplicados para fortalecer sistemas de software frente às ameaças impostas pela computação quântica. A pesquisa se propõe a compreender a interseção entre métodos ágeis e resistência quântica, analisando como organizações podem adaptar seus processos para integrar mecanismos criptográficos pós-quânticos de maneira rápida, segura e contínua ao longo do ciclo de vida do software.

Como principais contribuições, o estudo oferece uma revisão sistemática da literatura sobre criptoagilidade e práticas ágeis no contexto de segurança quântica, além de propor uma estrutura conceitual que conecta os dois domínios. Os autores destacam a importância de práticas iterativas e de resposta rápida para lidar com a rápida evolução das ameaças quânticas e apresentam diretrizes que ajudam organizações a incorporar algoritmos resistentes a ataques quânticos de forma incremental. A pesquisa também identifica lacunas e oportunidades para futuras investigações sobre integração entre segurança quântica e desenvolvimento ágil.";O artigo tem como objetivo investigar como práticas ágeis e o conceito de criptoagilidade podem ser aplicados para fortalecer sistemas de software frente às ameaças impostas pela computação quântica. ;Quantum agile software development process;
SCP0390;"De Vincentiis M.; Cassano F.; Pagano A.; Piccinno A.";"De Vincentiis, Mirko (57991605400); Cassano, Fabio (56913127100); Pagano, Alessandro (57196796641); Piccinno, Antonio (36476592000)";University of Bari, Italy;QAI4ASE: Quantum artificial intelligence for automotive software engineering;2022;International Workshop on Quantum Programming for Software Engineering;Quantum Software Engineering;QP4SE;19;21;10;Nowadays, the size and complexity of the automotive development life-cycle increase the possibility of cyber-attacks. In this context, team developers play a primary role in managing cyber security, risk assessment, and all phases of software application development (concept phases, product development, cyber security validation, production, operations, and maintenance). Currently, only generic standards exist and they are difficult to put into operation due to the lack of the required skills and knowledge. Therefore, this paper presents a vision model based on Quantum Artificial Intelligence that supports developers' decisions to integrate concrete design methods in the automotive development life-cycle. Organizations need to develop their process for developing vehicle components that comply with the new automotive standards. We suggest the usage of existing data sources (e.g., existing taxonomies) on Quantum Artificial Intelligence algorithms to suggest the best way, or the correct steps, to follow time by time to achieve user solutions.  © 2022 ACM.;"Artificial Intelligence; Quantum Computing; Software Engineering";"Application programs; Artificial intelligence; Life cycle; Network security; Quantum computers; Risk assessment; All phase; Application development; Assessment phase; Automotive development; Automotive software; Cyber security; Cyber-attacks; Quantum Computing; Security risk assessments; Software applications; Cybersecurity";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo tem como objetivo apresentar um modelo de visão chamado QAI4ASE (Quantum Artificial Intelligence for Automotive Software Engineering), cuja finalidade é apoiar o desenvolvimento de software automotivo em conformidade com padrões de segurança como o ISO/SAE 21434. A proposta busca integrar inteligência artificial quântica ao ciclo de vida do desenvolvimento de software automotivo para auxiliar desenvolvedores na tomada de decisão e na verificação de conformidade com normas de cibersegurança, enfrentando a complexidade e a ausência de diretrizes práticas presentes nesses padrões.

A principal contribuição do artigo é a proposição do modelo QAI4ASE, que utiliza algoritmos de aprendizado de máquina quântica para recomendar, em tempo real, os passos mais adequados no processo de desenvolvimento de software automotivo seguro. O modelo é baseado no treinamento de IA quântica com dados extraídos de taxonomias e regras derivadas das normas de segurança, oferecendo sugestões contextuais aos desenvolvedores por meio de interfaces gráficas e sobreposições de sugestões. O trabalho também discute possíveis abordagens para o treinamento desses modelos e sugere futuras aplicações práticas e extensões para outros padrões como o Automotive SPICE.";O artigo tem como objetivo apresentar um modelo de visão chamado QAI4ASE (Quantum Artificial Intelligence for Automotive Software Engineering), cuja finalidade é apoiar o desenvolvimento de software automotivo em conformidade com padrões de segurança como o ISO/SAE 21434.;Quantum Artificial Intelligence for Automotive Software Engineering;
SCP0054;"Usaola M.P.; De Guzmán I.G.-R.; Serrano M.Á.; Piattini M.";"Usaola, Macario Polo (58291448600); De Guzmán, Ignacio García-Rodríguez (6602985950); Serrano, Manuel Ángel (7201394131); Piattini, Mario (7004203473)";Institute of Technologies and Information Systems, University of Castilla-La Mancha, Ciudad Real, Spain;Generating Quantum Software from Truth Tables;2024;International Conference on Quantum Computing and Engineering;Quantum Computing and/or Information;QCE;223;227;0;Quantum computing promises significant advancements over classical computing by enabling exponential speedups for specific problems. Despite its potential, quantum software development remains challenging due to its complexity, cost, and susceptibility to errors. Aligned with the novel paradigm of Quantum Software Engineering (QSE), this paper introduces a tool designed to automate the generation of quantum software components from truth tables. The tool simplifies the development process by allowing users to specify expected output values for given inputs, which the tool then translates into the corresponding quantum code. This approach reduces the manual effort required and helps ensure accuracy in quantum program development. Our method not only streamlines quantum software generation but also optimizes the resulting quantum circuits by minimizing unnecessary computations. The paper provides a detailed overview of the algorithm, tool implementation, and potential applications, highlighting the tool's efficacy in facilitating more efficient quantum software development. © 2024 IEEE.;"Automatic Software Generation; Quantum Computing; Quantum Software Engineering; Quantum Software Generation; Truth Tables";"Application programs; Computer aided software engineering; Cost engineering; Quantum efficiency; Quantum electronics; Quantum optics; Software design; Automatic software generation; Classical computing; Exponentials; Quantum Computing; Quantum software engineering; Quantum software generation; Software generation; Specific problems; Truth tables; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;Software Construction;"O artigo tem como objetivo propor uma abordagem automatizada para a geração de componentes de software quântico a partir de tabelas verdade. Visando reduzir a complexidade e o esforço manual envolvidos na codificação de programas quânticos, os autores apresentam uma ferramenta que permite aos desenvolvedores especificar comportamentos esperados por meio de tabelas verdade, as quais são automaticamente transformadas em circuitos quânticos otimizados. A proposta se alinha à disciplina emergente da Engenharia de Software Quântica, promovendo o aumento do nível de abstração e a independência de linguagem.

Como contribuição, o estudo desenvolve uma ferramenta web que gera circuitos quânticos reversíveis baseados em portas lógicas como Toffoli e CNOT, aplicando algoritmos que minimizam o número de operações e a complexidade do circuito. A ferramenta aceita expressões em JavaScript para descrever saídas, suporta estratégias de otimização por redução da tabela verdade e oferece flexibilidade na definição de relações entre qubits de entrada e saída. Além de facilitar o desenvolvimento seguro e eficiente de software quântico, o trabalho reforça princípios fundamentais da Engenharia de Software Quântica, como abstração, agnosticismo tecnológico e suporte à geração automatizada de código.";O artigo tem como objetivo propor uma abordagem automatizada para a geração de componentes de software quântico a partir de tabelas verdade. ;Quantum circuit generation;
SCP0067;"Gemeinhardt F.; Eisenberg M.; Klikovits S.; Wimmer M.";"Gemeinhardt, Felix (57226305018); Eisenberg, Martin (57425527800); Klikovits, Stefan (56938716700); Wimmer, Manuel (14030698000)";Institute of Business Informatics - Software Engineering, Johannes Kepler University Linz, Christian Doppler Laboratory for Model-Integrated Smart Production (CDL-MINT), Austria;Model-Driven Optimization for Quantum Program Synthesis with MOMoT;2023;International Conference on Model Driven Engineering Languages and Systems Companion  ;Software Engineering;Proc. - ACM/IEEE Int. Conf. Model Driven Eng. Lang. Syst. Companion, MODELS-C;614;621;2;In the realm of classical software engineering, model-driven optimization has been widely used for different problems such as (re)modularization of software systems. In this paper, we investigate how techniques from model-driven optimization can be applied in the context of quantum software engineering. In quantum computing, creating executable quantum programs is a highly non-trivial task which requires significant expert knowledge in quantum information theory and linear algebra. Although different approaches for automated quantum program synthesis exist - e.g., based on reinforcement learning and genetic programming - these approaches represent tailor-made solutions requiring dedicated encodings for quantum programs. This paper applies the existing model-driven optimization approach MOMoT to the problem of quantum program synthesis. We present the resulting platform for experimenting with quantum program synthesis and present a concrete demonstration for a well-known Quantum algorithm.  © 2023 IEEE.;"Model-Driven Optimization; Quantum Circuit Synthesis; Quantum Software Engineering";"Computation theory; Genetic algorithms; Information theory; Linear algebra; Modular construction; Quantum computers; Quantum optics; Reinforcement learning; Software engineering; Timing circuits; Circuit synthesis; Model-driven optimization; Modularizations; Program synthesis; Quantum circuit; Quantum circuit synthesis; Quantum Computing; Quantum software engineering; Software engineering model; Software-systems; Genetic programming";English;Conference Paper;Primary Study;Proposal of solution;Software Design;Focar na otimização de circuitos quânticos através da aplicação e melhoria de um programa genético multi-objetivo. O trabalho futuro visa explorar regras de transformação e algoritmos de busca, além de definir transformações de SDKs quânticos para a representação genérica do modelo.;Focar na otimização de circuitos quânticos através da aplicação e melhoria de um programa genético multi-objetivo. O trabalho futuro visa explorar regras de transformação e algoritmos de busca, além de definir transformações de SDKs quânticos para a representação genérica do modelo.;Quantum circuit optimization;
SCP0072;"Gemeinhardt F.; Klikovits S.; Wimmer M.";"Gemeinhardt, Felix (57226305018); Klikovits, Stefan (56938716700); Wimmer, Manuel (14030698000)";Johannes Kepler University Linz, Institute for Business Informatics – Software Engineering, Altenberger Strasse 69, Linz, 4040, Austria;GeQuPI: Quantum Program Improvement with Multi-Objective Genetic Programming;2025;Journal of Systems and Software;Software Engineering;JSS;0;0;0;Processing quantum information poses novel challenges regarding the debugging of faulty quantum programs. Notably, the lack of accessible information on intermediate states during quantum processing, renders traditional debugging techniques infeasible. Moreover, even correct quantum programs might not be processable, as current quantum computers are limited in computation capacity. Thus, quantum program developers have to consider trade-offs between accuracy (i.e., probabilistically correct functionality) and computational cost of the proposed solutions. Manually finding sufficiently accurate and efficient solutions is a challenging task, even for quantum computing experts. To tackle these challenges, we propose a quantum program improvement framework for an automated generation of accurate and efficient solutions, coined Genetic Quantum Program Improver (GeQuPI). In particular, we focus on the tasks of debugging and optimization of quantum programs. Our framework uses techniques from quantum information theory and applies multi-objective genetic programming, which can be further hybridized with quantum-aware optimizers. To demonstrate the benefits of GeQuPI, it is applied to 47 quantum programs reused from literature and openly published libraries. The results show that our approach is capable of correcting faulty programs and optimize inefficient ones for the majority of the studied cases, showing average optimizations of 35% with respect to computational cost. © 2024 The Authors;"Evolutionary algorithms; Quantum circuit optimization; Quantum computing; Quantum software engineering";"Computer debugging; Genetic programming; Program debugging; Quantum efficiency; Quantum electronics; Quantum optics; Accessible information; Circuit optimization; Computational costs; Multi objective; Optimisations; Quantum circuit; Quantum circuit optimization; Quantum Computing; Quantum Information; Quantum software engineering; Quantum computers";English;Article;Primary Study;Evaluation research;Software Design;Apresentar o GeQuPI e focar na Melhoria e otimização de Programas Quânticos, especialmente no reparo de falhas no processamento de informações quânticas. O trabalho busca responder a RQs sobre como as configurações de busca e considerações específicas de hardware afetam os resultados.;Otimização de circuitos quânticos;Quantum circuit optimization;
SCP0068;"Häner T.; Steiger D.S.; Svore K.; Troyer M.";"Häner, Thomas (57193862888); Steiger, Damian S. (57000172600); Svore, Krysta (55898617400); Troyer, Matthias (7004750165)";"Theoretische Physik, ETH Zurich, Zurich, 8093, Switzerland; Quantum Architectures and Computation Group, Microsoft Research, Redmond, WA, United States; Microsoft Research Station Q, Santa Barbara, CA, United States";A software methodology for compiling quantum programs;2018;Quantum Science and Technology;Quantum Computing and/or Information;QST;0;0;106;Quantum computers promise to transform our notions of computation by offering a completely new paradigm. To achieve scalable quantum computation, optimizing compilers and a corresponding software design flow will be essential. We present a software architecture for compiling quantum programs from a high-level language program to hardware-specific instructions. We describe the necessary layers of abstraction and their differences and similarities to classical layers of a computer-aided design flow. For each layer of the stack, we discuss the underlying methods for compilation and optimization. Our software methodology facilitates more rapid innovation among quantum algorithm designers, quantum hardware engineers, and experimentalists. It enables scalable compilation of complex quantum algorithms and can be targeted to any specific quantum hardware implementation. © 2018 IOP Publishing Ltd.;"quantum compiler; quantum computing; quantum programming language";"Computer aided design; Computer hardware; High level languages; Quantum computers; Quantum theory; Software design; Hardware implementations; Optimizing compilers; Quantum algorithms; quantum compiler; Quantum Computing; Quantum programming languages; Software methodologies; Specific instruction; Program compilers";English;Article;Primary Study;Proposal of solution;Software Construction;"O artigo tem como objetivo apresentar uma metodologia de software para a compilação de programas quânticos que integra abstrações de alto nível, análise formal e transformações de código, visando facilitar o desenvolvimento de software confiável e eficiente para computadores quânticos. A proposta parte da necessidade de criar fluxos de trabalho estruturados que separem claramente as fases de desenvolvimento, otimização e compilação, com suporte a verificações formais desde os níveis mais abstratos até a geração do código final.

Como contribuição, o estudo introduz um compilador quântico estruturado em múltiplas camadas, que transforma programas descritos em uma linguagem funcional de alto nível em circuitos quânticos otimizados e verificáveis. A metodologia inclui a definição de representações intermediárias, aplicação de regras formais de transformação e geração de código compatível com plataformas como IBM Qiskit. Além disso, o trabalho demonstra a viabilidade da abordagem por meio de exemplos práticos e reforça a importância da integração entre engenharia de software, linguagens formais e compilação no avanço da computação quântica.";O artigo tem como objetivo apresentar uma metodologia de software para a compilação de programas quânticos que integra abstrações de alto nível, análise formal e transformações de código, visando facilitar o desenvolvimento de software confiável e eficiente para computadores quânticos. ;Quantum code abstraction;
SCP0065;"Bisicchia G.; García-Alonso J.; Murillo J.M.; Brogi A.";"Bisicchia, Giuseppe (57225906269); García-Alonso, Jose (55892225800); Murillo, Juan M. (8687210000); Brogi, Antonio (57193752782)";"Department of Computer Science, University of Pisa, Pisa, Italy; Quercus Software Engineering Group, University of Extremadura, Cáceres, Spain";From Quantum Software Handcrafting to Quantum Software Engineering;2024;International Conference on Software Analysis, Evolution and Reengineering ;Software Engineering;SANER;149;150;0;Quantum Computing holds the potential to change our world. Following the quantum wave, software engineers have recognised the opportunity to establish a new discipline of Quantum Software Engineering. Despite the significant progress achieved, Quantum Computing’s widespread adoption still faces critical hurdles. In this paper, we outline two of these challenges. (1) Quantum programming continues to be a complex art mastered by a select few experts. We suggest that the primary culprit can be pinpointed in the absence of high-level quantum software abstractions which forces developers to work with low-level quantum concepts and reason in terms of matrix multiplications. (2) The scarce collaboration among quantum software engineers resulted in a lack of platform and software interoperability. While a diversity of research proposals fuels scientific progress, it can hinder the development and adoption of innovative technologies, potentially fragmenting the collective efforts and confining them within isolated research groups. We believe that overcoming these issues is crucial for fostering innovation, advancing Quantum Software Engineering, and Quantum Computing as a whole. ©2024 IEEE.;"Quantum Abstractions; Quantum Computing; Quantum Software Engineering; Software Engineering";"Computer aided software engineering; Quantum electronics; MAtrix multiplication; Quantum abstraction; Quantum Computing; Quantum programming; Quantum software engineering; Quantum waves; Research proposals; Scientific progress; Software abstractions; Software interoperability; Quantum computers";English;Conference Paper;Primary Study;Opinion papers;The Software Engineering in General;"O artigo tem como objetivo discutir os principais entraves que ainda limitam a adoção ampla da computação quântica, defendendo a necessidade urgente de transição da programação artesanal para uma engenharia de software quântica estruturada. Os autores destacam duas barreiras principais: a ausência de abstrações de alto nível que obrigam os desenvolvedores a trabalhar com conceitos de baixo nível, como portas e qubits, e a fragmentação dos esforços de pesquisa, que dificulta a interoperabilidade entre tecnologias quânticas.

Como contribuição, o artigo propõe dois caminhos para superar esses desafios. O primeiro é o desenvolvimento de abstrações verdadeiramente quânticas em linguagens de alto nível que permitam aos desenvolvedores raciocinar diretamente com conceitos como superposição e entrelaçamento, sem depender da manipulação de matrizes. O segundo é a criação de provedores quânticos virtuais (VQPs) e pipelines multi-stack para permitir a interoperabilidade entre diferentes SDKs, compiladores e plataformas de hardware quântico. Essas estratégias visam fomentar a padronização, aumentar a reutilização e tornar a engenharia de software quântica mais acessível, escalável e produtiva.";O artigo tem como objetivo discutir os principais entraves que ainda limitam a adoção ampla da computação quântica, defendendo a necessidade urgente de transição da programação artesanal para uma engenharia de software quântica estruturada. ;Quantum code abstraction;2 páginas apenas
SCP0256;"Jiménez-Navajas L.; Pérez-Castillo R.; Piattini M.";"Jiménez-Navajas, Luis (57219055630); Pérez-Castillo, Ricardo (34977424500); Piattini, Mario (7004203473)";"Faculty of Social Sciences and IT, University of Castilla-La Mancha, Talavera de La Reina, Spain; Information Technology and Systems Institute, University of Castilla-La Mancha, Ciudad Real, Spain";Code generation for classical-quantum software systems modeled in UML;2025;Software and Systems Modeling;Software Engineering;Softw. Syst. Model.;0;0;0;Quantum computing is gaining an increasing interest since it can solve certain problems exponentially faster than classical computing. Thus, many organizations are researching and launching investments for integrating quantum software into their existing systems. Software modernization (as based on Model-Driven Engineering) has been proposed to migrate from/to the so-called hybrid software systems, which integrate classical and quantum software. In that process, both, reverse engineering and restructuring phases, have already been investigated. However, forward engineering phase for generating hybrid source code from high-level design models has not yet been addressed. Thus, this research proposes a quantum code generation technique from extended UML design models. It consists of a set of Model-to-Text transformations (defined through Epsilon Generation Language) to generate both Python and Qiskit code, which, respectively, integrate classical and quantum code. The transformation has been validated through a multi-case study with 7 hybrid software systems modeled in UML, which demonstrated that the transformation is effective and efficient. The implication of this work is that the software modernization process for hybrid software systems can be completed by tackling forward engineering phase, and that Model-Driven Engineering can therefore globally facilitate industry adoption of quantum software. © The Author(s) 2025.;"Code generation; EGL; MDE; Quantum software; UML";"Error correction; Problem oriented languages; Quantum electronics; Software design; Codegeneration; EGL; Engineering phase; Forward engineerings; Hybrid software systems; MDE; Model-driven Engineering; Quantum software; Software modernization; UML; Reverse engineering";English;Article;Primary Study;Evaluation research;Software Engineering Models and Methods;O objetivo principal é validar uma técnica de Geração de Código Combinado (Classical-Quantum) (Python e Qiskit) a partir de designs de alto nível em UML, provando que ela é eficaz, eficiente e escalável, e que o código quântico gerado é funcionalmente correto.;Geração de código a partir de UML;Quantum code generation;
SCP0035;"Chen Q.; Camara R.; Campos J.; Souto A.; Ahmed I.";"Chen, Qihong (57844941000); Camara, Ruben (59427150500); Campos, Jose (35306564600); Souto, Andre (22036474500); Ahmed, Iftekhar (57209289155)";"University of California, Irvine, United States; Universidade de Lisboa, Lasige, Faculdade de Ciências, Lisboa, Portugal; University of Porto, Faculty of Engineering, Porto, Portugal; Instituto de Telecomunicações, Lisboa, Portugal";The Smelly Eight: An Empirical Study on the Prevalence of Code Smells in Quantum Computing;2023;International Conference on Software Engineering;Software Engineering;ICSE;358;370;9;Quantum Computing (QC) is a fast-growing field that has enhanced the emergence of new programming languages and frameworks. Furthermore, the increased availability of computational resources has also contributed to an influx in the development of quantum programs. Given that classical and QC are significantly different due to the intrinsic nature of quantum programs, several aspects of QC (e.g., performance, bugs) have been investigated, and novel approaches have been proposed. However, from a purely quantum perspective, maintenance, one of the major steps in a software development life-cycle, has not been considered by researchers yet. In this paper, we fill this gap and investigate the prevalence of code smells in quantum programs as an indicator of maintenance issues. We defined eight quantum-specific smells and validated them through a survey with 35 quantum developers. Since no tool specifically aims to detect quantum smells, we developed a tool called QSmell that supports the proposed quantum-specific smells. Finally, we conducted an empirical investigation to analyze the prevalence of quantum-specific smells in 15 open-source quantum programs. Our results showed that 11 programs (73.33%) contain at least one smell and, on average, a program has three smells. Furthermore, the long circuit is the most prevalent smell present in 53.33% of the programs. © 2023 IEEE.;"Empirical study; Quantum computing; Quantum software engineering; Quantum-specific code smell";"Life cycle; Odors; Open source software; Program debugging; Quantum computers; Classical computing; Code smell; Computational resources; Empirical studies; Intrinsic nature; Performance bugs; Quantum Computing; Quantum software engineering; Quantum-specific code smell; Software development life-cycle; Software design";English;Conference Paper;Primary Study;Evaluation research;Software Quality;Estudo empírico sobre a prevalência de code smells em software quântico. O objetivo para trabalhos futuros é explorar a evolução dos code smells específicos e seu efeito na qualidade geral dos programas quânticos, além de estender a ferramenta QSMELL para suportar outros frameworks.;Code smells e ferramenta QSMELL;Quantum code smells;
SCP0082;"Stefano M.D.; Nucci D.D.; Palomba F.; Lucia A.D.";"Stefano, Manuel De (57219489857); Nucci, Dario Di (57016777600); Palomba, Fabio (55321369000); Lucia, Andrea De (7003641564)";Software Engineering (SeSa) Lab - University of Salerno, Salerno, Italy;An empirical study into the effects of transpilation on quantum circuit smells;2024;Empirical Software Engineering;Software Engineering;Empir Software Eng;0;0;0;Quantum computing is a promising field that can solve complex problems beyond traditional computers’ capabilities. Developing high-quality quantum software applications, called quantum software engineering, has recently gained attention. However, quantum software development faces challenges related to code quality. A recent study found that many open-source quantum programs are affected by quantum-specific code smells, with long circuit being the most common. While the study provided relevant insights into the prevalence of code smells in quantum circuits, it did not explore the potential effect of transpilation, a necessary step for executing quantum computer programs, on the emergence of code smells. Indeed, transpilation might alter those characteristics employed to detect the presence of a smell on a circuit. To address this limitation, we present a new study investigating the impact of transpilation on quantum-specific code smells and how different target gate sets affect the results. We conducted experiments on 17 open-source quantum programs alongside a set of 100 synthetic circuits. We found that transpilation can significantly alter the metrics that are used to detect code smells, even into previously smell-free circuits, with the long circuit smell being the most susceptible to transpilation. Furthermore, the choice of the gate set significantly influences the presence and severity of code smells in transpiled circuits, highlighting the need for careful gate set selection to mitigate their impact. These findings have implications for circuit optimization and high-quality quantum software development. Further research is needed to understand the consequences of code smells and their potential impact on quantum computations, considering the characteristics and constraints of different gate sets and hardware platforms. © The Author(s) 2024.;"Code smells; Empirical software engineering; Quantum computing; Quantum software engineering Quantum software quality";"Computer circuits; Computer software selection and evaluation; Electric network analysis; Odors; Open source software; Open systems; Quantum computers; Quantum optics; Software design; Timing circuits; Code smell; Empirical Software Engineering; Empirical studies; Gate sets; High quality; Open-source; Quantum circuit; Quantum Computing; Quantum software engineering quantum software quality; Software Quality; Application programs";English;Article;Primary Study;Evaluation research;Software Quality;Caracterizar a influência da transpilação em code smells específicos de quântico, avaliando se a transpilação pode mitigar ou exacerbar a presença desses smells, no contexto do desenvolvimento de software quântico. Os resultados demonstram que houve uma diferença notável entre os tratamentos.;Caracterizar a influência da transpilação em code smells específicos de quântico, avaliando se a transpilação pode mitigar ou exacerbar a presença desses smells, no contexto do desenvolvimento de software quântico. Os resultados demonstram que houve uma diferença notável entre os tratamentos.;Quantum code smells;
SCP0374;"Weber T.; Riebisch M.; Borras K.; Jansen K.; Krucker D.";"Weber, Tom (57221153135); Riebisch, Matthias (6507284600); Borras, Kerstin (35313279200); Jansen, Karl (57203031620); Krucker, Dirk (57204849463)";"Universität Hamburg, Hamburg, Germany; Deutsches Elektronen-Synchrotron DESY, Hamburg, Germany";Modelling for Quantum Error Mitigation;2021;International Conference on Software Architecture Companion;Software Engineering;ICSA;102;105;2;While we expect quantum computers to surpass their classical counterparts in the future, current devices are prone to high error rates and techniques to minimise the impact of these errors are indispensable. There already exists a variety of error mitigation methods addressing this quantum noise that differ in effectiveness, and scalability. But for a more systematic and comprehensible approach we propose the introduction of modelling, in particular for representing cause-effect relations as well as for evaluating methods or combinations thereof with respect to a selection of relevant criteria.  © 2021 IEEE.;"cause-effect relationships; error mitigation; evaluation; metric; modelling; quantum computing; quantum noise";"Quantum computers; Quantum noise; Software architecture; Cause-effect; Classical counterpart; Error mitigation; Error rate; Evaluating method; Quantum error; Errors";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo propõe incorporar técnicas de modelagem computacional ao campo de mitigação de erros em computação quântica. O objetivo é estruturar de forma mais sistemática e compreensível as relações de causa e efeito dos erros quânticos e avaliar diferentes métodos de mitigação com base em critérios padronizados, permitindo decisões mais embasadas na construção de softwares quânticos, especialmente em algoritmos híbridos.

As principais contribuições incluem a introdução de modelos gráficos como o diagrama de Ishikawa para representar relações complexas de erro, sugestões de aprimoramento desses modelos com lógica formal e indicação do grau de relevância dos fatores causais. O artigo também propõe critérios fundamentais — grau de melhoria, custo computacional e escalabilidade — para comparar métodos de mitigação e discute como esses modelos podem apoiar a combinação eficaz de técnicas, promovendo maior controle e clareza na engenharia de software quântico.";O artigo propõe incorporar técnicas de modelagem computacional ao campo de mitigação de erros em computação quântica.;Quantum error modeling;
SCP0071;Cartiere C.R.;Cartiere, Carmelo R. (57351475000);Nextsense Srl, Division of Quantitative Physics and Systems Engineering, Via della Rotonda 36, RM, Rome, 00186, Italy;Formal quantum software engineering introducing the formal methods of software engineering to quantum computing;2021;International Workshop on Quantum Software Engineering and Technology;Quantum Software Engineering;QSET;60;65;0;"Quantum computing (QC) represents the future of computing systems, but the tools for reasoning about the quantum model of computation, in which the laws obeyed are those on the quantum mechanical scale, are still a mix of linear algebra and Dirac notation; two subjects more suitable for physicists, rather than computer scientists and software engineers. On this ground, we believe it is possible to provide a more intuitive approach to thinking and writing about quantum computing systems, in order to simplify the design of quantum algorithms and the development of quantum software. In this paper, we move the first step in such direction, introducing a specification language as the tool to represent the operations of a quantum computer via axiomatic definitions, by adopting the same symbolisms and reasoning principles used by formal methods in software engineering. We name this approach formal quantum software engineering (F-QSE). This work assumes familiarity with the basic principles of quantum mechanics (QM), with the use of Zed (Z) which is a formal language of software engineering (SE), and with the notation and techniques of first-order logic (FOL) and functional programming (FP). © 2021 Copyright for this paper by its authors.";"Formal methods; Functional programming; Quantum computing; Quantum software engineering; Zed";"Computer circuits; Computer software; Formal methods; Functional programming; Linear algebra; Quantum theory; Specification languages; Computer scientists; Computing system; Quanta computers; Quantum algorithms; Quantum Computing; Quantum computing systems; Quantum mechanical; Quantum model of computation; Quantum software engineering; Zed; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo tem como objetivo propor um novo paradigma denominado Engenharia de Software Quântica Formal (F-QSE), que visa representar operações de sistemas quânticos utilizando os mesmos princípios, notações e formalismos utilizados em métodos formais clássicos de engenharia de software. A proposta busca superar as barreiras conceituais e notacionais que dificultam o acesso de engenheiros de software e cientistas da computação ao desenvolvimento quântico, substituindo o uso exclusivo da álgebra linear e da notação de Dirac por especificações formais mais acessíveis.

Como contribuição, o estudo introduz uma linguagem de especificação baseada na notação Z para representar observáveis e operadores quânticos de forma axiomatizada, permitindo a modelagem e a construção de algoritmos quânticos a partir de definições formais. O artigo demonstra a aplicabilidade dessa abordagem com a implementação do algoritmo de Deutsch, detalhado desde a especificação até sua conversão para código executável usando a biblioteca QIO em Haskell. Ao transformar a formulação de algoritmos quânticos em estruturas formais verificáveis, a proposta visa democratizar o desenvolvimento quântico, ampliar a adoção da computação quântica por profissionais de software e estabelecer uma base sólida para a confiabilidade e reutilização de programas quânticos.";O artigo tem como objetivo propor um novo paradigma denominado Engenharia de Software Quântica Formal (F-QSE), que visa representar operações de sistemas quânticos utilizando os mesmos princípios, notações e formalismos utilizados em métodos formais clássicos de engenharia de software.;Quantum formal methods;
SCP0197;"Trinca M.; Ferreira J.F.; Abreu R.";"Trinca, Miguel (57273779100); Ferreira, Joao F. (34769595300); Abreu, Rui (57209112913)";"University of Lisbon, INESC-ID... Ist, Portugal; University of Porto, INESC-ID... Feup, Portugal";A Preliminary Study on Generating Well-Formed Q# Quantum Programs for Fuzz Testing;2022;International Conference on Software Testing;Software Engineering;Proc. - IEEE Int. Conf. Softw. Test., Verif. Valid. Workshops, ICSTW;118;121;2;Generative Sequence-To-Sequence models have been proposed for the task of generating well-formed programs, an important task for fuzz testing tools such as compilers. In this paper, we propose a Sequence-to-Sequence model to generate well-formed Q# Quantum programs. The ratio of syntactically valid programs among 1,000 Q# files generated by our model is 79.6%. In addition, we also contribute with a dataset of 1,723 Q# files taken from publicly available repositories on GitHub, which can be used by the growing community of Quantum Software Engineering.  © 2022 IEEE.;"Fuzz Testing; Machine Learning; Quantum Software Engineering; Sequence-to-Sequence Models";"Machine learning; Program compilers; Software testing; Fuzz Testing; Machine-learning; Quantum software engineering; Sequence models; Sequence-to-sequence model; Testing tools; Well testing";English;Conference Paper;Primary Study;Proposal of solution;Software Testing;"O objetivo deste estudo é aplicar modelos generativos do tipo Sequence-to-Sequence para gerar programas bem formados em Q#, com foco em sua utilização em testes de fuzzing de compiladores quânticos. Para isso, os autores treinaram um modelo baseado em redes recorrentes (RNNs com LSTM) usando um conjunto de dados construído a partir de 1.723 arquivos Q# coletados de repositórios públicos do GitHub, dos quais 244 foram efetivamente utilizados para treino por estarem compiláveis com um projeto .csproj genérico.

Como contribuição, o trabalho apresenta uma abordagem preliminar para geração automática de programas Q# sintaticamente válidos, obtendo uma taxa de sucesso (Pass Rate) de 79,6% em um total de 1.000 arquivos gerados. Os autores também disponibilizaram publicamente o dataset Q# criado para treinar e testar o modelo, visando apoiar a comunidade de Engenharia de Software Quântica. Além disso, o estudo descreve em detalhes o pipeline de treinamento, preparação dos dados e geração dos programas, destacando os desafios e limitações enfrentados, como a escassez de dados e estratégias de predição limitadas, que podem impactar a qualidade dos arquivos gerados.";O trabalho apresenta uma abordagem preliminar para geração automática de programas Q# sintaticamente válidos, obtendo uma taxa de sucesso (Pass Rate) de 79,6% em um total de 1.000 arquivos gerados. ;Quantum fuzz testing;
WOS1192;"Eddin, SK; Salloum, H; Shahin, MN; Salloum, B; Mazzara, M; Bahrami, MR";"Eddin, Suleiman Karim; Salloum, Hadi; Shahin, Mohamad Nour; Salloum, Badee; Mazzara, Manuel; Bahrami, Mohammad Reza";"Innopolis University; Samarkand International University of Technology";Quantum Microservices: Transforming Software Architecture with Quantum Computing;2024;International Conference on Advanced Information Networking and Applications;Computer Science;AINA;227;237;0;This paper conducts an exhaustive exploration of the evolutionary journey of microservices within the domain of software architecture. It meticulously traces the historical trajectory, current status, and potential future pathways of microservices in software design. Additionally, this study introduces a pioneering concept known as Quantum Microservices. Quantum Microservices represent a novel approach aimed at augmenting software design by leveraging concepts from quantum computing. In this paper, we will delve into defining their architecture, core features, challenges, and future prospects. This study envisions their pivotal role in reshaping the landscape of software development by offering enhanced efficiency and innovation opportunities.;"Microservices; Software Architecture; Distributed Systems; Quantum Computing";;English;Conference Paper;Primary Study;Proposal of solution;Software Architecture;O artigo trata de Microsserviços Quânticos (Quantum Microservices): Transformando a Arquitetura de Software com a Computação Quântica.;O artigo trata de Microsserviços Quânticos (Quantum Microservices): Transformando a Arquitetura de Software com a Computação Quântica.;Quantum microsservices;
SCP0172;"Gemeinhardt F.; Garmendia A.; Wimmer M.; Wille R.";"Gemeinhardt, Felix (57226305018); Garmendia, Antonio (55891368600); Wimmer, Manuel (14030698000); Wille, Robert (24587880100)";"Business Informatics - Software Engineering, Johannes Kepler Universität Linz, Linz, Austria; Universidad Autonoma de Madrid, Madrid, Spain; Technical University of Munich, Munich, Germany";A Model-Driven Framework for Composition-Based Quantum Circuit Design;2024;Transactions on Quantum Computing;Quantum Computing and/or Information;TQC;0;0;0;Quantum programming languages support the design of quantum applications. However, to create such programs, one needs to understand the fundamental characteristics of quantum computing and quantum information theory. Furthermore, quantum algorithms frequently make use of abstract operations with a hidden low-level realization (e.g., Quantum Fourier Transform). Thus, turning from elementary quantum operations to a higher-level view of quantum circuit design not only reduces the development effort but also lowers the entry barriers for non-quantum computing experts.To this end, this article proposes a modeling language and design framework for quantum circuits. This allows the definition of composite operators to advocate a higher-level quantum algorithm design, together with automated code generation for the circuit execution. To demonstrate the benefits of the proposed approach, coined Composition-based Quantum Circuit Designer, we applied it for realizing the Quantum Counting algorithm and the Quantum Approximate Optimization Algorithm. Our evaluation results show that, compared to an existing state-of-the-art editor, the proposed approach allows for the realization of both quantum algorithms on a high level with a substantially reduced development effort. In particular, the proposed approach shows constant scaling when increasing the size of the investigated quantum circuits and a lower change criticality when evolving existing quantum circuits.  © 2024 Copyright held by the owner/author(s).;"model-driven engineering; quantum circuits; Quantum computing; quantum software engineering; quantum software languages";"High level languages; Integrated circuit design; Printed circuit design; Quantum electronics; Quantum optics; Systems analysis; Model-driven; Model-driven Engineering; Quantum algorithms; Quantum circuit; Quantum circuit design; Quantum Computing; Quantum programming languages; Quantum software engineering; Quantum software language; Software languages; Quantum computers";English;Article;Primary Study;Evaluation research;Software Design;"O artigo tem como objetivo apresentar um framework orientado a modelos que facilite o desenvolvimento de software quântico baseado em composição. A proposta visa reduzir a complexidade do desenvolvimento quântico ao permitir que os desenvolvedores trabalhem com abstrações de alto nível e modelos reutilizáveis, sem a necessidade de lidar diretamente com os detalhes técnicos de circuitos quânticos.

Como contribuição, o estudo introduz uma arquitetura em camadas que inclui uma linguagem específica de domínio (DSL), um metamodelo para representar funcionalidades quânticas compostas e um mecanismo de geração automática de código compatível com plataformas como Qiskit. O framework permite modelar, compor e transformar blocos de funcionalidades quânticas em implementações executáveis, promovendo reutilização, modularidade e abstração. Os autores validam a abordagem com um estudo de caso baseado na Transformada Quântica de Fourier, demonstrando a viabilidade e os benefícios da composição orientada a modelos no contexto da engenharia de software quântica.";O estudo introduz uma arquitetura em camadas que inclui uma linguagem específica de domínio (DSL), um metamodelo para representar funcionalidades quânticas compostas e um mecanismo de geração automática de código compatível com plataformas como Qiskit.;Quantum model-driven engineering;
SCP0104;"Alonso D.; Sánchez P.; Sánchez-Rubio F.";"Alonso, Diego (7102896234); Sánchez, Pedro (14034637300); Sánchez-Rubio, Francisco (57844756800)";Division of Systems and Electrical Engineering (DSIE), Universidad Politécnica de Cartagena, Spain;Engineering the development of quantum programs: Application to the Boolean satisfiability problem;2022;Advances in Engineering Software;Software Engineering;Adv Eng Software;0;0;10;The development of quantum programs is becoming a reality due to the rapid advancement of quantum computing. Over the past few years, a multitude of hardware platforms, algorithms, and programming languages have emerged to support this paradigm. By the very nature of Quantum Mechanics principles, there is an enormous change of philosophy when building quantum programs, which operate in a probabilistic space, unlike the deterministic behaviour shown by classical programming languages. These conceptual differences can be overcome by using techniques and tools of Software Engineering. In this paper, we apply Model-Driven Engineering techniques in a systematic way to ease the generation of quantum programs and we apply it to solve the satisfiability problem, very important in many engineering domains like verification of discrete systems and test of integrated circuits. To that aim, we contribute with a metamodel for representing quantum circuits and a model-to-text transformation to generate working IBM Qiskit code. This model-driven infrastructure is employed to automatically generate quantum programs from SAT equations through a model-to-model transformation that embeds Grover's algorithm. Besides, we provide formulas for calculating the number of required quantum elements from SAT equations, crucial in the current context of limited quantum resources. The interoperability with other tools and the extensibility to target additional quantum platforms is guaranteed thanks to the use of a model-based toolchain. We cover several usage scenarios to validate the approach, providing exemplary SAT equations, the generated Qiskit code and the results of executing this code in IBM Quantum infrastructure. © 2022 The Author(s);"Boolean satisfiability; Model-driven engineering; Quantum computing";"Application programs; Formal logic; Problem oriented languages; Quantum computers; Boolean satisfiability; Boolean satisfiability problems; Deterministic behavior; Hardware algorithm; Hardware platform; Hardware programming; Model-driven Engineering; Probabilistic space; Program applications; Quantum Computing; Quantum theory";English;Article;Primary Study;Evaluation research;Software Engineering Models and Methods;O trabalho demonstrou a adequação da abordagem de Engenharia Orientada a Modelos (MDE) para a geração automática de programas quânticos. O objetivo é dar um primeiro passo em direção a uma solução concreta que utilize a experiência anterior da engenharia de software clássica e seja compatível com a singularidade do paradigma quântico. O trabalho fornece um metamodelo para representar circuitos quânticos, servindo como entrada para gerar código Qiskit, que é executável em computadores e simuladores quânticos reais.;Geração de código quântico a partir de Engenharia orientada a Modelos (MDE);Quantum model-driven engineering;
SCP0184;"Gemeinhardt F.; Garmendia A.; Wimmer M.";"Gemeinhardt, Felix (57226305018); Garmendia, Antonio (55891368600); Wimmer, Manuel (14030698000)";Johannes Kepler University, Linz, Austria;Towards Model-Driven Quantum Software Engineering;2021;International Workshop on Quantum Software Engineering;Quantum Software Engineering;QSE;13;15;29;Quantum technologies are emerging. Dedicated languages for programming Quantum machines are emerging as well and already used in different settings. Orthogonal to this development, Model-Driven Engineering (MDE) is explored to ease the development of software systems by applying modeling techniques such as Domain-Specific Modeling Languages and generative techniques such as code generation. In this position paper, we argue for a dedicated research line which deals with the exploration of how MDE may be applied for Quantum technologies. This combination would allow to speed-up the development of Quantum software, open the door for domain experts to utilize Quantum technologies, and may provide an additional abstraction layer over existing Quantum hardware architectures and programming languages. We outline several research challenges which we derived from a demonstration case of how to exploit domain-specific modeling for social network analysis on Quantum technologies.  © 2021 IEEE.;"Domain Specific Modeling Languages; Model Driven Engineering; Quantum Computing; Software Engineering";"Modeling languages; Software engineering; Specification languages; Abstraction layer; Domain specific modeling; Domain specific modeling languages; Hardware architecture; Model-driven Engineering; Modeling technique; Quantum technologies; Research challenges; Social sciences computing";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo propõe o estabelecimento de uma linha de pesquisa dedicada à aplicação da Engenharia de Software Dirigida por Modelos (Model-Driven Engineering — MDE) no contexto da Computação Quântica. A intenção é investigar como o uso de linguagens específicas de domínio (DSMLs) e técnicas de geração automática de código podem facilitar o desenvolvimento de aplicações quânticas e híbridas (clássicas e quânticas), oferecendo uma camada de abstração que torne a programação mais acessível para especialistas de domínio e menos dependente da complexidade das arquiteturas de hardware quântico.

O trabalho apresenta um estudo de caso envolvendo análise de redes sociais, no qual diferentes metamodelos são utilizados para modelar dados sociais, algoritmos quânticos e suas execuções híbridas. Através desse exemplo, os autores demonstram a viabilidade da geração automática de aplicações híbridas utilizando MDE e propõem um roteiro de pesquisa com questões abertas relacionadas à modelagem de estruturas de dados e algoritmos quânticos, desenvolvimento de geradores de código inteligentes, integração via computação em nuvem, execução de DSMLs, avaliação de tecnologias quânticas e aplicação da computação quântica para resolver desafios próprios da MDE.";Os autores demonstram a viabilidade da geração automática de aplicações híbridas utilizando MDE e propõem um roteiro de pesquisa com questões abertas relacionadas à modelagem de estruturas de dados e algoritmos quânticos.;Quantum model-driven engineering;
SCP0261;"Jiménez-Navajas L.; Pérez-Del Castillo R.; Piattinia M.";"Jiménez-Navajas, Luis (57219055630); Pérez-Del Castillo, Ricardo (34977424500); Piattinia, Mario (7004203473)";"University of Castilla-La Macha, Paseo de la Universidad 4, Ciudad Real, 13071, Spain; Quantum by Alarcos Research Group, Paseo de la Universidad 4, Ciudad Real, 13071, Spain; Social Sciences and IT Faculty, University of Castilla-La Mancha, Av. Real Fábrica de Seda s/n, Talavera de la Reina, 45600, Spain";A tool for quantum software evolution;2020;International Workshop on Quantum Software Engineering and Technology;Quantum Software Engineering;QSET;38;44;0;Quantum computing has been growing drastically for the last year due to all the possible applications that this new paradigm brings as well as its incomparable computational power. Therefore, the new information systems that will be developed in a future might be influenced by this paradigm. However, discarding the legacy information systems is not an option if those systems embed mission-critical knowledge over time. Furthermore, quantumfy every business process does not make sense because the high cost that it requires. This is why, in a future, organizations will adapt their classical information systems with new quantum applications, evolving their legacy information systems into hybrid information system. To accomplish this evolution, this paper proposes a technique of software modernization using model-driven engineering based on the Knowledge Discovery Metamodel (KDM) standard. © 2020 Copyright for this paper by its authors.;"KDM; Q#; Quantum computing; Reengineering; Reverse engineering";"Information systems; Information use; Quantum computers; Software engineering; Classical information; Computational power; Hybrid information system; Legacy information systems; Model-driven Engineering; Quantum applications; Software Evolution; Software modernization; Legacy systems";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo propõe uma técnica de modernização de software orientada à arquitetura para facilitar a transição de sistemas legados clássicos para sistemas híbridos que integrem computação quântica. A abordagem baseia-se na Engenharia de Software Dirigida por Modelos (MDE) e no padrão Knowledge Discovery Metamodel (KDM), com o intuito de preservar o conhecimento crítico de negócios e permitir a evolução dos sistemas sem a necessidade de substituí-los integralmente.

A principal contribuição do artigo está na definição de um processo de reengenharia quântica que inclui engenharia reversa de sistemas legados (clássicos e quânticos), reestruturação por meio de modelos de alto nível (UML) e geração de código para sistemas híbridos. O estudo também destaca o uso de KDM como elemento central para interoperabilidade entre ferramentas de engenharia reversa e modernização, além de apresentar um fluxo completo de evolução de software que pode ser aplicado na prática para adaptação de sistemas à computação quântica.";A abordagem baseia-se na Engenharia de Software Dirigida por Modelos (MDE) e no padrão Knowledge Discovery Metamodel (KDM), com o intuito de preservar o conhecimento crítico de negócios e permitir a evolução dos sistemas sem a necessidade de substituí-los integralmente.;Quantum model-driven engineering;
WOS0121;"de Guzman, IGR; Monje, MR; Velthuis, MP; Quintana, MTM";"de Guzman, Ignacio Garcia Rodriguez; Monje, Moises Rodriguez; Velthuis, Mario Piattini; Quintana, Maria Teresa Merchan";"Universidad de Castilla-La Mancha; Universidad de Castilla-La Mancha";An Adaptation of the UML Testing Profile for Quantum Software Testing;2024;Memoria Investigaciones en Ingeniería;Engineering;MII;266;284;0;This study explores how Classical Software Engineering, especially model-driven engineering in testing, can contribute to the improvement of Quantum Software Engineering (QSE). Adopting principles of agnosticism, it seeks to develop software engineering processes that are independent of any specific language or platform for quantum software. Currently, quantum software testing is considered an emerging area with multiple proposals focused on particular languages or platforms. This work proposes an extension of the UML Testing Profile 2.0 to model quantum software testing, allowing (i) the exploration of new concepts needed to specify these tests, (ii) the modelling of different types of tests during quantum software design, and (iii) the specification of tests independent of the execution language or platform. This approach aims to establish a more flexible and extensible basis for testing in QSE.;"Quantum Software Engineering; Quantum Software Testing; UML Testing Profile; Software Testing";;Spanish;Article;Primary Study;Proposal of solution;Software Engineering Models and Methods;O objetivo é explorar como a Engenharia de Software Clássica (QSE), especialmente a engenharia dirigida por modelos em testes, pode contribuir para a melhoria da Engenharia de Software Quântico (QSE). Busca-se o agnosticismo do processo de testing, adaptando o Perfil de Teste UML (UMLTP) para cobrir novos conceitos de teste de software quântico baseado em circuitos.;Engenharia dirigida por modelos em testes para a melhoria da Engenharia de Software Quântico (QSE).;Quantum model-driven engineering;
SCP0044;"Jin T.; Zhao J.";"Jin, Tiancheng (58486427900); Zhao, Jianjun (35786932000)";Kyushu University, Fukuoka, Japan;ScaffML: A Quantum Behavioral Interface Specification Language for Scaffold;2023;International Conference on Quantum Software;Quantum Software Engineering;QSW;128;137;1;Ensuring the correctness of quantum programs is crucial for quantum software quality assurance. Although various effective verification methods exist for classical programs, they cannot be applied to quantum programs due to the fundamental differences in their execution logic, such as quantum superposition and entanglement. This calls for new methods to verify the correctness of quantum programs. In this paper, we present a behavioral interface specification language (BISL) called ScaffML for the quantum programming language Scaffold. ScaffML allows the specification of pre- and post-conditions for Scaffold modules and enables the mixing of assertions with Scaffold code, thereby facilitating debugging and verification of quantum programs. This paper discusses the goals and overall approach of ScaffML and describes the basic features of the language through examples. ScaffML provides an easy-to-use specification language for quantum programmers, supporting static analysis, run-time checking, and formal verification of Scaffold programs. Finally, we present several instances to illustrate the workflow and functionalities of ScaffML. © 2023 IEEE.;"quantum computing; ScaffML; Scaffold; Specification languages; testing; verification";"Computation theory; Computer software selection and evaluation; Formal specification; Program debugging; Quality assurance; Quantum entanglement; Specification languages; Static analysis; Behavioral interfaces; Condition; Execution logic; Interface specification languages; Quantum Computing; Quantum programming languages; Quantum superpositions; Scaffml; Software quality assurance; Verification method; Scaffolds";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo tem como objetivo apresentar uma abordagem baseada em Model-Driven Engineering (MDE) para o projeto de programas quânticos, por meio de uma linguagem de modelagem chamada ScaffML. A proposta visa reduzir a complexidade da programação quântica ao permitir que desenvolvedores projetem aplicações em um nível de abstração mais alto, facilitando a transição de modelos para código executável.

Como contribuição, o estudo introduz a ScaffML como uma linguagem de modelagem que abstrai os elementos fundamentais da computação quântica — como qubits, portas lógicas e medidas — e permite a geração automática de código a partir dos modelos criados. A abordagem é aplicada a diferentes casos de uso, demonstrando sua viabilidade na geração de código ScaffCC e sua capacidade de apoiar o desenvolvimento incremental, reutilização e verificação de programas quânticos. O trabalho também destaca o potencial do MDE como estratégia promissora para a engenharia de software quântica, promovendo maior produtividade, modularidade e qualidade no desenvolvimento de sistemas quânticos.";A proposta visa reduzir a complexidade da programação quântica ao permitir que desenvolvedores projetem aplicações em um nível de abstração mais alto, por meio de uma linguagem de modelagem chamada ScaffML, um técnica de Model-Driven Engineering (MDE).;Quantum model-driven engineering;
SCP0156;"Badrike K.; Dalvi A.S.; Mazurek F.; D'Onofrio M.; Whitlow J.; Chen T.; Phiri S.; Riesebos L.; Brown K.R.; Mueller F.";"Badrike, Kaustubh (58769181600); Dalvi, Aniket S. (57998011200); Mazurek, Filip (57209730218); D'Onofrio, Marissa (57219638498); Whitlow, Jacob (57327506600); Chen, Tianyi (57326943200); Phiri, Samuel (57327797500); Riesebos, Leon (57190227731); Brown, Kenneth R. (55842150800); Mueller, Frank (7202423683)";"North Carolina State University, Department of Computer Science, Raleigh, NC, United States; Duke University, Department of Electrical and Computer Engineering, Durham, NC, United States; Duke University, Department of Physics, Durham, NC, United States";QisDAX: An Open Source Bridge from Qiskit to Trapped-Ion Quantum Devices;2023;International Conference on Quantum Computing and Engineering;Quantum Computing and/or Information;QCE;825;836;0;Quantum computing has become widely available to researchers via cloud-hosted devices with different technologies using a multitude of software development frameworks. The vertical stack behind such solutions typically features quantum language abstraction and high-level translation frameworks that tend to be open source, down to pulse-level programming. However, the lower-level mapping to the control electronics, such as controls for laser and microwave pulse generators, remains closed source for contemporary commercial cloud-hosted quantum devices. One exception is the ARTIQ (Advanced Real-Time Infrastructure for Quantum physics) open-source library for trapped-ion control electronics. This stack has been complemented by the Duke ARTIQ Extensions (DAX) to provide modularity and better abstraction. It, however, remains disconnected from the wealth of features provided by popular quantum computing languages. This paper contributes QisDAX, a bridge between Qiskit and DAX that fills this gap. QisDAX provides interfaces for Python programs written using IBM's Qiskit and transpiles them to the DAX abstraction. This allows users to generically interface to the ARTIQ control systems accessing trapped-ion quantum devices. Consequently, the algorithms expressed in Qiskit become available to an open-source quantum software stack. This provides the first open-source, end-to-end, full-stack pipeline for remote submission of quantum programs for trapped-ion quantum systems in a non-commercial setting. © 2023 IEEE.;"open source quantum software stack; Quantum computing; transpilation";"Abstracting; High level languages; Open source software; Open systems; Program translators; Quantum optics; Software design; Translation (languages); Control electronics; Open source quantum software stack; Open-source; Quantum Computing; Quantum device; Quantum physics; Real time infrastructure; Software stacks; Transpilation; Trapped ion; Trapped ions";English;Conference Paper;Primary Study;Evaluation research;Software Engineering Models and Methods;"O artigo tem como objetivo apresentar o QisDAX, um framework orientado a modelos que visa apoiar o processo de implantação de software quântico, desde a modelagem até a execução. O trabalho busca enfrentar os desafios associados à implantação de aplicações híbridas quântico-clássicas, propondo uma abordagem que automatize tarefas complexas e reduza os erros manuais durante o provisionamento e execução de workflows em ambientes reais de computação quântica.

Como contribuição, o artigo propõe uma arquitetura baseada em três componentes principais: um metamodelo para descrever requisitos e configurações de implantação; uma linguagem de modelagem para representar graficamente fluxos de trabalho híbridos; e uma infraestrutura de execução baseada em containers para orquestrar os processos. O QisDAX permite mapear os requisitos funcionais e não funcionais do software para ambientes físicos compatíveis, como backends quânticos reais ou simulados. A ferramenta é validada com um estudo de caso envolvendo um algoritmo de otimização, demonstrando como o framework facilita o desenvolvimento reprodutível, portátil e gerenciável de aplicações quânticas, promovendo boas práticas da engenharia de software no contexto da computação quântica.";O artigo tem como objetivo apresentar o QisDAX, um framework orientado a modelos que visa apoiar o processo de implantação de software quântico, desde a modelagem até a execução.;Quantum model-driven engineering;
SCP0056;"Fortunato D.; Campos J.; Abreu R.";"Fortunato, Daniel (57219898042); Campos, Jose (35306564600); Abreu, Rui (57209112913)";"Faculty of Engineering, University of Porto & INESC-ID, Portugal; Portugal and Lasige, Faculdade de Ciências, Universidade de Lisboa, Faculty of Engineering of University of Porto, Portugal";Mutation Testing of Quantum Programs Written in QISKit;2022;International Conference on Software Engineering;Software Engineering;ICSE;358;359;16;There is an inherent lack of knowledge and technology to test a quantum program properly. In this paper, building on the definition of syntactically equivalent quantum operations, we investigated a novel set of mutation operators to generate mutants based on qubit measurements and quantum gates. To ease the adoption of quantum mutation testing, we further discuss QMutPy, an extension of the well-known and fully automated open-source mutation tool MutPy. To evaluate QMutPy's performance we conducted a case study on 11 real quantum programs written in the IBM's QISKit library. QMutPy has proven to be an effective quantum mutation tool, providing insight on the current state of quantum tests. © 2022 IEEE.;"Quantum computing; Quantum mutation testing; Quantum software engineering; Quantum software testing";"Open source software; Quantum theory; Qubits; Well testing; Mutation operators; Mutation testing; Quantum Computing; Quantum gates; Quantum mutation testing; Quantum operations; Quantum software engineering; Quantum software testing; Qubit measurement; Software testings; Software testing";English;Conference Paper;Primary Study;Evaluation research;Software Testing;"O artigo tem como objetivo investigar a aplicabilidade da técnica de teste por mutação no contexto da programação quântica, propondo um conjunto de operadores específicos e uma ferramenta chamada QMutPy, desenvolvida como extensão do MutPy. O trabalho visa avaliar a eficácia dessa abordagem na detecção de falhas em programas quânticos reais escritos com a biblioteca QISKit, enfrentando os desafios impostos pela natureza probabilística e contraintuitiva da computação quântica.

Como contribuição, os autores propõem cinco operadores de mutação voltados para gates e medições quânticas e implementam o QMutPy, que automatiza o processo de geração e avaliação de mutantes. Um estudo empírico com 11 programas quânticos reais resultou na criação de 696 mutantes, dos quais 46,7% foram detectados pelas suítes de teste. Os resultados revelaram limitações significativas na cobertura de testes dos programas analisados, reforçando o potencial do teste por mutação como técnica de avaliação da qualidade de software quântico. O artigo ainda sugere caminhos futuros, como a ampliação da ferramenta para outras bibliotecas quânticas e a execução em computadores quânticos reais.";O artigo tem como objetivo investigar a aplicabilidade da técnica de teste por mutação no contexto da programação quântica, propondo um conjunto de operadores específicos e uma ferramenta chamada QMutPy, desenvolvida como extensão do MutPy.;Quantum mutation testing;
SCP0053;"Saraiva L.; Haeusler E.H.; Costa V.; Kalinowski M.";"Saraiva, Lorenzo (57363118400); Haeusler, Edward Hermann (6603717884); Costa, Vaston (16023786000); Kalinowski, Marcos (8288075800)";"Pontificia Universidade Católica do Rio de Janeiro, R. Marquês de São Vicente, 225 - Gávea, Rio de Janeiro - RJ, Brazil; Universidade Federal de Catalão, Av. Dr. Lamartine Pinto de Avelar 1120, Catalão - GO, Brazil";Non-functional requirements for quantum programs;2021;International Workshop on Quantum Software Engineering and Technology;Quantum Software Engineering;QSET;89;100;4;Quantum computing is moving from a purely theoretical area to an area with practical applications, allowing considerable performance efficiency improvements. The goal of this paper is to discuss nonfunctional requirements for quantum programs. Based on experiences developing quantum software for real quantum hardware we analyze hardware-related constraints and derive a set of generic nonfunctional requirements for this type of program. We identified a set of five performance efficiency and reliability related non-functional requirements that should considered when implementing a quantum program for a quantum device. We also discuss available solution options to address the requirements. There are high level solutions to deal with the hardware-related constraints described in our identified requirements. While many of the them are specific to quantum programming languages and technologies, the scientific community is engaging to integrate these kind of solutions into the quantum software engineering life cycle in an agnostic way regarding quantum programming languages and technologies. © 2021 Copyright for this paper by its authors.;"Non-functional requirements; Quantum software engineering";"Efficiency; Life cycle; Software engineering; Efficiency and reliability; Efficiency improvement; Non-functional requirements; Performance efficiency; Performance reliability; Programming technology; Quantum Computing; Quantum device; Quantum programming languages; Quantum software engineering; Quantum computers";English;Conference Paper;Primary Study;Opinion papers;Software Requirements;Discutir requisitos não funcionais para programas quânticos, reconhecendo que a computação quântica está se movendo para uma área com aplicações práticas que oferecem melhorias na eficiência de desempenho.;Requisitos não funcionais;Quantum non-functional requirements;
SCP0081;"Nagarajan S.; Malarvel M.; Thangakumar J.";"Nagarajan, Sathishkumar (59156651500); Malarvel, Muthukumaran (57194420877); Thangakumar, J. (37051358300)";Hindustan Institute Of Technology And Sciences, Department Of Computer Science And Engineering, Tamil Nadu, Chennai, India;A Framework for Quantum based Software Development Process;2024;International Conference on Advances in Data Engineering and Intelligent Computing Systems;Computer Science;Int. Conf. Adv. Data Eng. Intell. Comput. Syst., ADICS;0;0;0;Quantum software is essential for fully harnessing the capabilities of quantum computing systems. Consequently, it has been garnering growing interest in recent times. This document provides a precise definition of the concept of 'quantum software engineering' and presents a comprehensive framework for the life cycle of quantum software. Given the interdisciplinary nature of quantum computing, it is essential to establish a shared understanding of the process for developing and implementing a quantum software application. At present, there isn't a complete methodology or lifecycle that covers every significant stage that could come up along the process of development and execution. That's why we provide the quantum software lifecycle in this document. With this paradigm, practitioners, developers, and scholars have a clear path forward for quantum computing. The provision of a methodical development roadmap for quantum- principles-based software encourages creativity in this quickly expanding subject.  © 2024 IEEE.;"Classical computing; Error correction; Machine learning; Optimization; Quantum computing";"Application programs; Life cycle; Machine learning; Quantum computers; Quantum optics; Software design; Classical computing; Errors correction; Machine-learning; Optimisations; Precise definition; Quantum Computing; Quantum computing systems; Shared understanding; Software applications; Software development process; Error correction";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Process;Abordar a falta de uma visão abrangente das muitas etapas pelas quais uma aplicação típica de software quântico passa.;Lacuna no processo de desenvolvimento de software quântico;Quantum process development;
SCP0033;"O'Meara C.; Fernández-Campoamor M.; Cortiana G.; Bernabé-Moreno J.";"O'Meara, Corey (57948062900); Fernández-Campoamor, Marina (57205347548); Cortiana, Giorgio (57383383800); Bernabé-Moreno, Juan (56201964600)";"E.ON Digital Technology GmbH, Essen, Germany; University of Granada, Department of Computer Science and A.I., Granada, Spain";Quantum Software Architecture Blueprints for the Cloud: Overview and Application to Peer-2-Peer Energy Trading;2023;Conference on Technologies for Sustainability;Computer Science;IEEE Conf. Technol. Sustain., SusTech;191;198;6;Applied quantum computing research has often focused on determining business-driven use-cases and applications of quantum algorithms which may provide advantage, either runtime or solution quality, over their classical counterparts. Often missed, yet equally important, is the discussion on how to actually run quantum software applications or models in a production environment where they run in an event-based or scheduled manner thereby providing the results to the enterprise which has spent time upskilling their development team and developing the quantum software solution.In this paper, we introduce a hybrid classical-quantum cloud architecture blueprint which starts from the code-level software development level, and extends to the production-ready quantum software application level. We then, for the first time, introduce a novel sample optimization application used in the energy industry for Peer-2-Peer energy trading and deploy it using the proposed cloud architecture blueprint. We demonstrate sample output of the live-running application where trading optimizations occurs on an hourly basis via remote connection to a quantum computing cloud backend.  © 2023 IEEE.;"cloud environment; Hyrbid quantum-classical application; quantum algorithm; QUBO; software architecture";"Application programs; Cloud computing architecture; Commerce; Quantum computers; Quantum theory; Software architecture; Software design; Cloud architectures; Cloud environments; Energy trading; Hyrbid quantum-classical application; Peer 2 peer; Quantum algorithms; Quantum Computing; Quantum-classical; QUBO; Software applications; Blueprints";English;Conference Paper;Primary Study;Evaluation research;Software Architecture;"O artigo tem como objetivo propor uma arquitetura de referência para aplicações de software quântico implantadas na nuvem, com foco na integração de componentes clássicos e quânticos em fluxos de trabalho contínuos e automatizados. A proposta visa preencher uma lacuna existente na literatura ao fornecer diretrizes práticas sobre como estruturar, implantar e operar aplicações híbridas em ambientes de produção, utilizando recursos de computação quântica disponíveis via serviços em nuvem.

Como contribuição, o estudo apresenta um blueprint arquitetural que combina práticas consolidadas de DevOps — como integração contínua, conteinerização e orquestração — com a execução de algoritmos quânticos, aplicando a proposta a um caso real de leilão de energia ponto a ponto. A arquitetura demonstrada permite que serviços quânticos sejam acionados periodicamente, com gerenciamento estruturado de resultados, logs e desempenho, mostrando sua adaptabilidade a diferentes provedores de nuvem. O trabalho oferece evidências práticas de viabilidade para a execução regular de aplicações quânticas em ambientes híbridos, promovendo a aproximação entre engenharia de software clássica e paradigmas emergentes da computação quântica.";O trabalho propôs uma arquitetura de referência para aplicações de software quântico implantadas na nuvem, com foco na integração de componentes clássicos e quânticos em fluxos de trabalho contínuos e automatizados. ;Quantum reference architecture;
WOS1314;"Jiménez-Navajas, L; Pérez-Castillo, R; Piattini, M";"Jimenez-Navajas, Luis; Perez-Castillo, Ricardo; Piattini, Mario";"aQuantum, Faculty of Social Sciences & IT, University of Castilla-La Mancha Talavera de la Reina, Spain ; aQuantum, Information Technology and Systems Institute, University of Castilla-La Mancha Talavera de la Reina, Spain";Reverse Engineering of OpenQASM3 Quantum Programs to KDM Models;2023;International Conference on Evaluation of Novel Approaches to Software Engineering  ;Software Engineering;ENASE;513;520;0;The development of quantum computing is following a substantial growth. This leads us closer to the implementation of practical solutions based on quantum software that address problems that are not computable by classical software in a practical timeframe. Hence, some companies will need to adapt their development practices and, so, their information systems to take advantage of quantum computing. Unfortunately, there is still a lack of tools, frameworks, and processes to support the evolution of current systems towards the combination of the quantum and classical paradigms into information systems. Hence, this paper presents a reverse engineering technique to generate abstract models based on the Knowledge Discovery Metamodel (KDM) by analyzing quantum software written in OpenQASM3. The main implication is that KDM models represent, in a technology-agnostic way, the different components and interrelationships of quantum software. These models then can be used to restructure and redesign the target hybrid information system.;"Reverse Engineering; Quantum Computing; OpenQASM3; KDM";;English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;Apresentar uma técnica de engenharia reversa para gerar modelos abstratos baseados no Metamodelo de Descoberta de Conhecimento (KDM) a partir da análise de software quântico escrito em OpenQASM3. Isso permite a representação agnóstica de componentes e inter-relacionamentos de software quântico, que podem ser usados no processo de modernização para sistemas de informação híbridos.;Apresentar uma técnica de engenharia reversa para gerar modelos abstratos baseados no Metamodelo de Descoberta de Conhecimento (KDM) a partir da análise de software quântico escrito em OpenQASM3.;Quantum reverse engineering;
SCP0047;"Jiménez-Navajas L.; Pérez-Castillo R.; Piattini M.";"Jiménez-Navajas, Luis (57219055630); Pérez-Castillo, Ricardo (34977424500); Piattini, Mario (7004203473)";"aQuantum, Faculty of Social Sciences and IT, University of Castilla-La Mancha Talavera de la Reina, Spain; aQuantum, Information Technology and Systems Institute, University of Castilla-La Mancha Ciudad Real, Spain";Reverse Engineering of Classical-Quantum Programs;2024;International Conference on Evaluation of Novel Approaches to Software Engineering  ;Software Engineering;ENASE;275;282;0;Quantum computing has emerged as a crucial technology, which is expected to be progressively integrated into current, traditional information systems. Society could be benefited from several potential, promising applications based on quantum computing. To achieve such advantages, this new paradigm will require integrating the quantum software into the new hybrid (classical-quantum) information systems. Thus, it is necessary to adapt well-known and validated software engineering methods and techniques, such as software evolution methods based on Model-Driven Engineering principles. In particular, the proposal of this paper is framed in the Quantum Software Modernization process, and, in particular, it addresses the reverse engineering phase. The main contribution is a reverse engineering technique that analyses quantum (Qiskit) and classical (Python) code and builds a common, abstract model that combines both classical and quantum elements. The models are built in a technology-agnostic manner through the Knowledge Discovery Metamodel. Within this technique, relationships have been established between classical and quantum elements which can help to preserve knowledge and provide meaningful insights during the evolution toward hybrid information systems. The functioning of this technique is demonstrated through a running example with a program from the Qiskit Github repository. © 2024 by SCITEPRESS – Science and Technology Publications, Lda.;"Knowledge Discovery Metamodel; Qiskit; Quantum Computing; Reverse Engineering; Software Modernization";"Data mining; Information systems; Information use; Quantum computers; Software design; 'current; Classical-quantum; Crucial technology; Knowledge discovery metamodel; Meta model; Qiskit; Quantum Computing; Quantum-information systems; Software modernization; Validated softwares; Reverse engineering";English;Conference Paper;Primary Study;Proposal of solution;Software Maintenance;Propor uma técnica de engenharia reversa para a fase de Modernização de Software Quântico, que analisa código quântico (Qiskit) e clássico (Python) e constrói um modelo abstrato comum (KDM), combinando elementos de ambos para preservar o conhecimento durante a evolução para sistemas de informação híbridos (clássico-quânticos).;Técnica de engenharia reversa;Quantum reverse engineering;
SCP0251;"Weder B.; Barzen J.; Leymann F.; Zimmermann M.";"Weder, Benjamin (57215318521); Barzen, Johanna (55650592400); Leymann, Frank (6603379902); Zimmermann, Michael (7201478503)";University of Stuttgart, Institute of Architecture of Application Systems, Universitätsstraße 38, Stuttgart, Germany;Hybrid Quantum Applications Need Two Orchestrations in Superposition: A Software Architecture Perspective;2021;International Conference on Web Services;Software Engineering;Proc. - IEEE Int. Conf. Web Serv., ICWS;1;13;18;Quantum applications are most often hybrid, i.e., they are not only made of implementations of pure quantum algorithms but also of classical programs as well as workflows and topologies as key artifacts, and data they process. Since workflows and topologies are referred to as 'orchestrations' in modern terminology (but with very different meanings), two orchestrations that go hand-in-hand are required to realize quantum applications. We motivate this by means of a nontrivial example, sketch these orchestration technologies, and reveal the overall structure of non-trivial quantum applications. Furthermore, we discuss the implied architecture of a runtime environment for such quantum applications. To validate the introduced architecture, we present a prototypical implementation based on the Camunda workflow engine, its associated modeling tool, as well as the OpenTOSCA ecosystem. © 2021 IEEE.;"Hybrid Quantum-Classical Applications; NISQ; Quantum Computing; Runtime for Quantum Applications; Software Engineering of Quantum Applications";"Application programs; Quantum computers; Quantum theory; Hybrid quantum-classical application; NISQ; Quantum applications; Quantum Computing; Quantum-classical; Runtime for quantum application; Runtimes; Software engineering of quantum application; Work-flows; Topology";English;Conference Paper;Primary Study;Proposal of solution;Software Architecture;"O artigo tem como objetivo propor uma perspectiva arquitetural para aplicações híbridas quânticas que requerem dois tipos distintos de orquestração: a orquestração clássica de fluxos de trabalho e a orquestração quântica dos circuitos. A proposta surge da observação de que, para alcançar um desempenho eficaz e escalável, essas aplicações precisam integrar e coordenar esses dois níveis de controle de forma simultânea e harmônica.

Como contribuição, o artigo introduz a ideia de uma “superposição de orquestrações”, onde a arquitetura de software deve lidar com a execução coordenada de tarefas clássicas e quânticas, levando em conta características como latência, paralelismo, variabilidade de hardware e dependências entre tarefas. Os autores analisam cenários reais de uso, como workflows em bioinformática e química computacional, e destacam a necessidade de plataformas que consigam abstrair e orquestrar as complexidades envolvidas. A pesquisa reforça a importância de desenvolver arquiteturas especializadas e ferramentas de apoio para aplicações quânticas híbridas com múltiplos requisitos de orquestração.";O artigo tem como objetivo propor uma perspectiva arquitetural para aplicações híbridas quânticas que requerem dois tipos distintos de orquestração: a orquestração clássica de fluxos de trabalho e a orquestração quântica dos circuitos. ;Quantum software architectural orchestration;
SCP0122;"Aktar M.S.; Liang P.; Waseem M.; Tahir A.; Ahmad A.; Zhang B.; Li Z.";"Aktar, Mst Shamima (58146654300); Liang, Peng (24923262400); Waseem, Muhammad (57189504629); Tahir, Amjed (36198634600); Ahmad, Aakash (36760479100); Zhang, Beiqi (57573108600); Li, Zengyang (46061313300)";"School of Computer Science, Wuhan University, Wuhan, 430072, China; Faculty of Information Technology, University of Jyväskylä, Jyväskylä, FI 40014, Finland; School of Mathematical and Computational Sciences, Massey University, Palmerston North, 4442, New Zealand; School of Computing and Communications, Lancaster University Leipzig, Leipzig, 04109, Germany; School of Computer Science, Central China Normal University, Wuhan, China";Architecture decisions in quantum software systems: An empirical study on Stack Exchange and GitHub;2025;Information and Software Technology;Software Engineering;INFSOF;0;0;1;Context: Quantum computing provides a new dimension in computation, utilizing the principles of quantum mechanics to potentially solve complex problems that are currently intractable for classical computers. However, little research has been conducted about the architecture decisions made in quantum software development, which have a significant influence on the functionality, performance, scalability, and reliability of these systems. Objective: The study aims to empirically investigate and analyze architecture decisions made during the development of quantum software systems, identifying prevalent challenges and limitations by using the posts and issues from Stack Exchange and GitHub. Methods: We used a qualitative approach to analyze the obtained data from Stack Exchange Sites and GitHub projects — two prominent platforms in the software development community. Specifically, we collected data from 385 issues (from 87 GitHub projects) and 70 posts (from 3 Stack Exchange sites) related to architecture decisions in quantum software development. Results: The results show that in quantum software development (1) architecture decisions are articulated in six linguistic patterns, the most common of which are Solution Proposal and Information Giving, (2) the two major categories of architectural decisions are Implementation Decision and Technology Decision, (3) Software Development Tools are the most common application domain among the twenty application domains identified, (4) Maintainability is the most frequently considered quality attribute, and (5) Design Issues and High Error Rates are the major limitations and challenges that practitioners face when making architecture decisions in quantum software development. Conclusions: Our results show that the limitations and challenges encountered in architecture decision-making during the development of quantum software systems are strongly linked to the particular features (e.g., quantum entanglement, superposition, and decoherence) of those systems. These issues mostly pertain to technical aspects and need appropriate measures to address them effectively. © 2024 Elsevier B.V.;"Architecture decision; Empirical study; GitHub; Quantum software system; Stack Exchange";"Application programs; Quantum electronics; Software architecture; Software design; Software reliability; Applications domains; Architecture decisions; Complex problems; Empirical studies; Github; New dimensions; Quantum Computing; Quantum software system; Software-systems; Stack exchange; Quantum entanglement";English;Article;Primary Study;Evaluation research;Software Architecture;O objetivo do estudo é analisar as decisões de arquitetura tomadas durante o desenvolvimento de software quântico. Os resultados incluem a identificação de padrões linguísticos, a categorização de decisões, domínios de aplicação, atributos de qualidade e desafios/limitações.;Decisões arquiteturais em software quânticos;Quantum software architectural patterns;
SCP0052;"Baczyk M.; Pérez-Castillo R.; Piattini M.";"Baczyk, Michal (57373014100); Pérez-Castillo, Ricardo (34977424500); Piattini, Mario (7004203473)";"Alarcos Research Group, University of Castilla-La Mancha, Ciudad Real, Spain; Alarcos Research Group, University of Castilla-La Mancha, Talavera de la Reina, Spain";Towards a Framework of Architectural Patterns for Quantum Software Engineering;2024;International Conference on Quantum Computing and Engineering;Quantum Computing and/or Information;QCE;228;233;0;Quantum software engineering (QSE) has emerged as a discipline to address the challenges associated with developing software systems in the context of advancing quantum computing technology. This paper explores architectural design patterns specific to QSE. Building on previous work highlighting the need for high-level patterns, we analyze emerging architectural approaches in quantum computing. We identify key challenges unique to hybrid quantum-classical systems and propose a preliminary taxonomy of QSE architectural patterns. These patterns address recurring design problems in areas such as quantum resource management and classical-quantum integration. We describe several potential patterns and discuss their theoretical applications in hybrid software systems. This work aims to provide a foundation for further research into standardizing QSE architectural practices, with the goal of enhancing various quality characteristics of hybrid software (e.g., modularity or maintainability) in the NISQ era and beyond. © 2024 IEEE.;"architectural patterns; maintainability; quantum software engineering; software patterns";"Architectural design; Computer software selection and evaluation; Maintainability; Quantum electronics; Resource allocation; Software architecture; Software quality; Architectural approach; Architectural pattern; Computing technology; Design Patterns; Design problems; Quantum Computing; Quantum software engineering; Quantum-classical systems; Software patterns; Software-systems; Application programs";English;Conference Paper;Primary Study;Philosophical papers;Software Architecture;"O artigo  tem como objetivo propor um framework multidimensional para a organização e descrição de padrões arquiteturais voltados à engenharia de software quântica. Diante dos desafios impostos pela computação híbrida quântico-clássica, os autores reconhecem a ausência de práticas arquiteturais sistematizadas e propõem um modelo que categoriza os padrões segundo cinco dimensões: nível de abstração, colaboração quântico-clássica, abordagem de escalabilidade, dinâmica temporal e estratégia de gerenciamento de recursos.

Como contribuição, o estudo apresenta e analisa cinco conceitos arquiteturais que ilustram a aplicação do framework proposto: Microserviços Híbridos Quântico-Clássicos, Pool de Recursos Quânticos, Pipeline Assíncrono Quântico-Clássico, Tecido de Computação Quântica Distribuída e Framework de Autoajuste Quântico-Clássico. Cada conceito é descrito com base em sua motivação, estrutura, benefícios e limitações, oferecendo um ponto de partida para padronização de práticas em QSE. Apesar de reconhecer que alguns padrões ainda carecem de evidência empírica, o artigo fornece uma base conceitual sólida para futuras pesquisas e aplicações práticas, sinalizando a importância de guiar decisões arquiteturais com abordagens específicas ao domínio quântico.";O artigo  tem como objetivo propor um framework multidimensional para a organização e descrição de padrões arquiteturais voltados à engenharia de software quântica. ;Quantum software architectural patterns;
SCP0001;"Ahmad A.; Khan A.A.; Waseem M.; Fahmideh M.; Mikkonen T.";"Ahmad, Aakash (36760479100); Khan, Arif Ali (26434399300); Waseem, Muhammad (57189504629); Fahmideh, Mahdi (43061009500); Mikkonen, Tommi (57220096141)";"University of ha'Il, College of Computer Science and Engineering, Saudi Arabia; University of Oulu, M3S Empirical Software Engineering Research Unit, Oulu, 90570, Finland; Wuhan University, School of Computer Science, Wuhan, China; School of Business at University of Southern Queensland, Queensland, Australia; University of Jyväskylä, Faculty of Information Technology, Jyväskylä, FI-40014, Finland";Towards Process Centered Architecting for Quantum Software Systems;2022;International Conference on Quantum Software;Quantum Software Engineering;QSW;26;31;17;Quantum Software Engineering (QSE) is a recent trend-focused on unifying the principles of quantum mechanics and practices of software engineering-to design, develop, validate, and evolve quantum age software systems and applications. Software architecture for quantum computing (a.k. a. quantum software architectures (QSA)) supports the design, development, and maintenance etc. phases of quantum software systems using architectural components and connectors. QSA can enable quantum software designers and developers to map the operations of Qubits to architectural components and connectors for implementing quantum software. This research aims to explore the role of QSAs by investigating (i) architectural process having architecting activities, and (ii) human roles that can exploit available tools to automate and customise architecture-centric implementation of quantum software. Results of this research can facilitate knowledge transfer, enabling researchers and practitioners, to address challenges of architecture-centric implementation of quantum software systems.  © 2022 IEEE.;"Architecture Process; Quantum Software Architecture; Quantum Software Engineering; Reference Architecture";"Application programs; Knowledge management; Quantum computers; Quantum theory; Software design; Architectural components; Architectural connectors; Architecture process; Architecture-centric; Quantum software architecture; Quantum software engineering; Recent trends; Reference architecture; Software applications; Software-systems; Software architecture";English;Conference Paper;Primary Study;Evaluation research;Software Engineering Process;"O artigo tem como objetivo propor um processo centrado em arquitetura para o desenvolvimento de sistemas de software quântico. A proposta busca preencher uma lacuna identificada na literatura, que carece de diretrizes sistemáticas e estruturadas para conduzir as atividades arquiteturais nesse domínio emergente. A pesquisa visa integrar práticas de engenharia de software com as especificidades da computação quântica, por meio de um modelo que articula atividades, papéis humanos e ferramentas de suporte.

Como contribuição, os autores apresentam um processo arquitetural composto por cinco atividades principais: levantamento de requisitos, modelagem, implementação, validação e implantação da arquitetura. O estudo também identifica os papéis humanos envolvidos no desenvolvimento, como o arquiteto de software quântico e o engenheiro de simulação quântica, além de mapear ferramentas que podem apoiar essas etapas. A proposta é validada por meio de um estudo de caso baseado em uma arquitetura de distribuição de chave quântica (QKD), demonstrando a aplicabilidade do processo. O artigo contribui ainda com a construção de um modelo de referência que pode orientar tanto pesquisadores quanto profissionais no desenvolvimento arquitetural de software quântico.";Definir um processo centrado em arquitetura para o desenvolvimento de sistemas de software quântico;Quantum software architecture;
SCP0112;"Lee D.; Kwon Y.; Kim K.; Lee J.; Choi B.-S.";"Lee, Duwon (58769086400); Kwon, Yong (57573875400); Kim, Kanghyeon (58769434800); Lee, Jaehyeok (58769010900); Choi, Byung-Soo (7402755228)";"Pukyong National University, Dept. of Physics, South Korea; Pukyong National University, Dept. of Computer Engineering, South Korea; Pukyong National University, Dept. of Scientific Computing, South Korea";A Design of Software Architecture for Validate and Verification of Linear-Optical Quantum Computing Platform;2023;International Conference on Quantum Computing and Engineering;Quantum Computing and/or Information;QCE;359;360;0;Compared to other semiconductor quantum computing platform, it is relatively untouched about the verification of linear-optical quantum computing (LOQC) platform. To overcome this problem, we propose a universal and versatile software platform which can support any variation of LOQC layout structure. It also supports the user-friendly interface for smooth experiment.  © 2023 IEEE.;;"Computing platform; Design of softwares; Layout structure; Linear optical quantum computing; Quantum Computing; Software platforms; User friendly interface; Verification";English;Conference Paper;Primary Study;Proposal of solution;Software Architecture;"O artigo tem como objetivo propor uma arquitetura de software universal e modular para validação e verificação de plataformas de computação quântica óptica linear (LOQC). A motivação central reside na dificuldade crescente de validar experimentalmente essas plataformas à medida que aumenta o número de qubits, sendo proposta uma solução que oferece uma interface amigável ao usuário e suporte a diferentes variações de estruturas LOQC, automatizando o processo de verificação por meio de protocolos como a Tomografia de Processos Quânticos (QPT).

Como contribuição, o trabalho apresenta uma arquitetura em camadas composta por módulos como Verificador, Decompositor, Mapeador e Controlador, capazes de transformar circuitos fornecidos em QASM em sequências de controle compatíveis com o hardware óptico. A plataforma permite mapear circuitos ideais para implementações reais, gerar matrizes χ como métrica de desempenho e executar experimentos com múltiplas configurações. Um estudo de caso com geração de estados de Bell demonstra a aplicabilidade da solução. O sistema proposto oferece flexibilidade para diferentes protocolos e promete integração futura com hardware real, contribuindo para a confiabilidade e reprodutibilidade da verificação de sistemas quânticos ópticos.";O artigo tem como objetivo propor uma arquitetura de software universal e modular para validação e verificação de plataformas de computação quântica óptica linear (LOQC).;Quantum software architecture;
SCP0136;Zhao J.;Zhao, Jianjun (35786932000);Kyushu University, Japan;Towards An Architecture Description Language for Hybrid Quantum-Classical Systems;2024;International Conference on Quantum Software;Quantum Software Engineering;QSW;19;23;0;The rapid development of quantum computing technology has opened new possibilities for solving complex problems beyond the capabilities of classical computing paradigms. However, combining quantum computing with classical systems to create Hybrid Quantum-Classical (HQC) software systems presents unique challenges that require novel approaches in software architecture. This paper proposes a foundation for developing Architecture Description Languages (ADLs) specifically for HQC systems. We aim to provide a robust framework for coherently describing, integrating, and analyzing quantum and classical computing elements. The paper discusses the design principles, methodology, and structural components of the architecture description languages and outlines future research directions.  © 2024 IEEE.;"architecture description language; hybrid quantum-classical system; Quantum computing; software architecture";"Computer architecture; Computer hardware description languages; Quantum electronics; Quantum optics; Architecture description languages; Classical computing; Classical systems; Complex problems; Computing paradigm; Computing technology; Hybrid quantum-classical system; Quantum Computing; Quantum-classical; Quantum-classical systems; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;Software Architecture;"O artigo propõe uma base para o desenvolvimento de Linguagens de Descrição de Arquitetura (ADLs) voltadas para sistemas híbridos quântico-clássicos (HQC). O objetivo é fornecer um framework formal que permita descrever, integrar e analisar de forma coerente os componentes quânticos e clássicos desses sistemas, enfrentando os desafios técnicos relacionados à sincronização, representação de estados, otimização de recursos e precisão na modelagem de características quânticas como superposição e emaranhamento.

As principais contribuições do estudo incluem a identificação das limitações das ADLs tradicionais frente aos requisitos de sistemas HQC e a proposição de princípios de design, metodologia de desenvolvimento e estrutura de linguagem para uma nova ADL capaz de integrar eficazmente os paradigmas quântico e clássico. O artigo também apresenta uma abordagem para representar características quânticas, definir interfaces de interação entre componentes e desenvolver ferramentas de apoio, estabelecendo uma base para futuras implementações e estudos de caso em engenharia de software para sistemas híbridos.";O objetivo é fornecer um framework formal que permita descrever, integrar e analisar de forma coerente os componentes quânticos e clássicos desses sistemas por meio de Architecture Description Language.;Quantum software architecture;
SCP0259;"Svore K.M.; Aho A.V.; Cross A.W.; Chuang I.; Markov I.L.";"Svore, Krysta M. (55898617400); Aho, Alfred V. (56914007400); Cross, Andrew W. (7202736359); Chuang, Isaac (7007024509); Markov, Igor L. (7102467660)";"Department of Computer Science, Columbia University, Columbia, NY, United States; Department of Electrical Engineering and Computer Science, Massachussetts Institute of Technology, Boston, MA, United States; Quanta Group, MIT Media Lab's Center for Bits and Atoms, United States; Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, United States";A layered software architecture for quantum computing design tools;2006;Computer;Computer Science;Computer;74;83;112;Compilers and computer-aided design tools are essential for fine-grained control of nanoscale quantum-mechanical systems. A proposed four-phase design flow assists with computations by transforming a quantum algorithm from a high-level language program into precisely scheduled physical actions. © 2006 IEEE.;;"Algorithms; Computer aided design; Error correction; Optimization; Program assemblers; Program compilers; Computer-aided design tools; Design flow; Nanoscale quantum-mechanical systems; Quantum algorithms; Quantum assembly programs; Software architecture; Computer architecture";English;Article;Primary Study;Proposal of solution;Software Architecture;"O artigo tem como objetivo propor uma arquitetura de software em camadas para ferramentas de projeto em computação quântica, com o intuito de organizar e modularizar os diferentes componentes envolvidos na modelagem, simulação e execução de circuitos quânticos. A proposta busca facilitar o desenvolvimento e a manutenção de ferramentas de software voltadas à computação quântica, promovendo reutilização, extensibilidade e interoperabilidade entre diferentes tecnologias.

Como contribuição, os autores apresentam uma arquitetura dividida em cinco camadas principais: interface do usuário, interface de design, representação intermediária, back-end quântico e hardware. Essa estrutura permite que diferentes ferramentas compartilhem componentes comuns e sejam facilmente adaptadas a novos requisitos ou plataformas de hardware. Além disso, o artigo exemplifica a aplicação da arquitetura em um ambiente de design real, destacando como ela permite uma integração mais eficiente entre linguagens de descrição de hardware quântico, simuladores e ferramentas de compilação. A abordagem propõe uma padronização conceitual para o desenvolvimento de software de apoio ao design quântico.";O artigo tem como objetivo propor uma arquitetura de software em camadas para ferramentas de projeto em computação quântica, com o intuito de organizar e modularizar os diferentes componentes envolvidos na modelagem, simulação e execução de circuitos quânticos.;Quantum software architecture;
SCP0355;"Aparicio-Morales Á.M.; Haghparast M.; Mäkitalo N.; Garcia-Alonso J.; Berrocal J.; Stirbu V.; Mikkonen T.; Murillo J.M.";"Aparicio-Morales, Álvaro M. (58769376000); Haghparast, Majid (23094283500); Mäkitalo, Niko (54420686000); Garcia-Alonso, Jose (55892225800); Berrocal, Javier (32667521200); Stirbu, Vlad (57249175700); Mikkonen, Tommi (57220096141); Murillo, Juan Manuel (8687210000)";"Quercus Software Engineering Group, University of Extremadura, Cáceres, Spain; Faculty of Information Technology, University of Jyväskylä, Jyväskylä, Finland";Liquifying Quantum-Classical Software-Intensive System of Systems;2024;International Conference on Software Analysis, Evolution and Reengineering ;Software Engineering;SANER;159;166;0;Software-Intensive Systems are applications that use a high amount of computational resources for the execution of complex tasks in which a constant flow of information is needed. In the current conception of the computing continuum, such computational resources are spread in the infrastructure from the Cloud to the Edge and the tasks are mapped on resources following placing and replacing strategies. In this scope, this paper puts together two emergent paradigms. On the one hand, the emergence of the Quantum Computation paradigm will allow these intensive systems to incorporate specific tasks that are unaffordable by classic computers. On the other hand, the liquid software model proposes a fluid movement of the software and information from one device to another. Therefore, in this paper, we present a broad overview of software-intensive systems from a liquid software perspective and support quantum functionalities in their processes. To provide a better understanding of how these systems can take form, we explore a case study based on weather forecasts. ©2024 IEEE.;"Computing Continuum; Liquid software; Quantum computing; Quantum Software Engineering; Software-Intensive Systems of Systems";"Application programs; Computer software selection and evaluation; Quantum electronics; Complex task; Computational resources; Computing continuum; Liquid software; Quantum Computing; Quantum software engineering; Quantum-classical; Software intensive systems; Software-intensive system of system; System-of-systems; Quantum computers";English;Conference Paper;Primary Study;Opinion papers;Software Architecture;"O artigo tem como objetivo explorar os desafios e propor uma abordagem para a integração fluida de sistemas de software intensivos compostos por componentes clássicos e quânticos. O foco está em como arquitetar e orquestrar esses sistemas de forma adaptável e resiliente, levando em consideração a natureza dinâmica e incerta da computação quântica, bem como os requisitos específicos de interoperabilidade entre paradigmas distintos.

Como principais contribuições, o estudo propõe uma visão de “liquefação” de sistemas ciberfísicos, onde componentes quânticos e clássicos podem ser integrados de forma flexível, adaptando-se a mudanças em tempo de execução. Os autores introduzem conceitos arquiteturais e estratégias de orquestração para lidar com incertezas e flutuações na disponibilidade ou precisão de recursos quânticos. A abordagem é ilustrada com exemplos aplicados ao domínio de previsão de tráfego aéreo, demonstrando a viabilidade do modelo proposto para cenários reais. O trabalho amplia a discussão sobre engenharia de software para sistemas quânticos complexos, destacando a necessidade de soluções adaptativas para ambientes híbridos.";O artigo tem como objetivo explorar os desafios e propor uma abordagem para a integração fluida de sistemas de software intensivos compostos por componentes clássicos e quânticos.;Quantum software architecture;
SCP0369;"Barletta V.S.; Caivano D.; Lako A.; Pal A.";"Barletta, Vita Santa (57205505690); Caivano, Danilo (6603243250); Lako, Alfred (58197952500); Pal, Anibrata (57991725600)";"University of Bari Aldo Moro, Bari, Italy; Polytechnic University of Tirana, Tirana, Albania";Quantum as a Service Architecture for Security in a Smart City;2023;Communications in Computer and Information Science;Quantum Computing and/or Information;Commun. Comput. Info. Sci.;76;89;6;Smart Cities are becoming a reality now with ample interest and investment from both government and private entities. As the number of Smart Cities increases, so does the sheer size and variety of data, the major part of which comes from Internet of Things (IoT) sensors embedded in devices. Millions of intelligent devices may be vulnerable to cyberattacks or threats, potentially harming one or more connected devices or exposing sensitive data. Therefore, Smart Cities have Intelligent Operations Centers (IOC), using different machine learning (ML) algorithms to monitor the data and take necessary actions to protect or contain any security incident. The advent of Quantum Computing (QC) has led to many initiatives for using QC in various applications of a Smart City but using Quantum Computing as a service is not yet fully contemplated in this context. In this work, we propose an architecture for Smart City security using Quantum as a Service (QaaS) for analyzing and classifying Smart City data. The proposed architecture uses two different Quantum Classifiers, implemented in the D-Wave Leap Quantum Cloud (QBoost) and IBM Quantum Services (Variational Quantum Classifier), for real-time classification of data and displays security incidents on a conveniently designed dashboard for further actions by the Security Operations Center (SOC) specialist. Further experiments have shown that D-Wave Leap Quantum Cloud-based QBoost performed the best among the quantum classifiers both regarding quality and time. © 2023, The Author(s), under exclusive license to Springer Nature Switzerland AG.;"Quantum as a service; Quantum Computing; Smart City; Software Engineering";"Internet of things; Machine learning; Sensitive data; Smart city; Software engineering; Cyber-attacks; Intelligent devices; Intelligent operations; Operation center; Quantum as a service; Quantum Computing; Security incident; Sensitive datas; Services Architectures; Sheer size; Classification (of information)";English;Conference Paper;Primary Study;Proposal of solution;Software Architecture;"Os objetivos principais são definidos por duas questões de pesquisa: RQ1, determinar qual arquitetura é adequada para QaaS (Quantum as a Service) para Segurança em Cidades Inteligentes; e RQ2, analisar os resultados de testes exemplares na arquitetura proposta.";Determinar qual arquitetura é adequada para QaaS para Segurança em Cidades Inteligentes ;Quantum software architecture;
WOS1152;"Sabzevari, MT; Esposito, M; Taibi, D; Khan, AA";"Sabzevari, Maryam Tavassoli; Esposito, Matteo; Taibi, Davide; Khan, Arif Ali";"University of Oulu; University of Rome Tor Vergata";QCSHQD: Quantum Computing as a Service for Hybrid Classical-Quantum Software Development: A Vision;2024;International Workshop on Quantum Software Engineering: The Next Evolution;Quantum Software Engineering;QSE-NE;7;10;1;Quantum Computing (QC) is transitioning from theoretical frameworks to an indispensable powerhouse of computational capability, resulting in extensive adoption across both industrial and academic domains. QC presents exceptional advantages, including unparalleled processing speed and the potential to solve complex problems beyond the capabilities of classical computers. Nevertheless, academic researchers and industry practitioners encounter various challenges in harnessing the benefits of this technology. The limited accessibility of QC resources for classical developers, and a general lack of domain knowledge and expertise, represent insurmountable barrier, hence to address these challenges, we introduce a framework-Quantum Computing as a Service for Hybrid Classical-Quantum Software Development (QCSHQD), which leverages service-oriented strategies. Our framework comprises three principal components: an Integrated Development Environment (IDE) for user interaction, an abstraction layer dedicated to orchestrating quantum services, and a service provider responsible for executing services on quantum computer. This study presents a blueprint for QCSHQD, designed to democratize access to QC resources for classical developers who want to seamless harness QC power. The vision of QCSHQD paves the way for groundbreaking innovations by addressing key challenges of hybridization between classical and quantum computers.;"Quantum Computing; Quantum Services; Hybrid Quantum Computing; Framework";;English;Conference Paper;Primary Study;Proposal of solution;Software Architecture;Apresentar a visão de um Serviço de Computação Quântica (Quantum Computing as a Service) para Desenvolvimento de Software Híbrido Clássico-Quântico (QCSHQD). O principal objetivo é diminuir a lacuna entre desenvolvedores clássicos e recursos de Computação Quântica (QC), utilizando estratégias de computação orientada a serviços.;Apresentar a visão de um Serviço de Computação Quântica para Desenvolvimento de Software Híbrido Clássico-Quântico;Quantum software architecture;
SCP0031;"Garcia-Alonso J.; Rojo J.; Valencia D.; Moguel E.; Berrocal J.; Murillo J.M.";"Garcia-Alonso, Jose (55892225800); Rojo, Javier (57215898404); Valencia, David (8982355200); Moguel, Enrique (56586255900); Berrocal, Javier (32667521200); Murillo, Juan Manuel (8687210000)";University of Extremadura, Cáceres, 10003, Spain;Quantum Software as a Service Through a Quantum API Gateway;2022;Internet Computing;Computer Science;IEEE Internet Comput;34;41;42;As quantum computers mature, the complexity of quantum software increases. As we move from the initial standalone quantum algorithms toward complex solutions combining quantum algorithms with traditional software, new software engineering methods and abstractions are needed. Nowadays, quantum computers are usually offered in the cloud, under a pay-per-use model, leading to the adoption of the service-oriented good practices that dominate the cloud today. However, specific adaptations are needed to reap the benefits of service-oriented computing while dealing with quantum hardware limitations. In this article, we propose the Quantum API Gateway-an adaptation of the API Gateway pattern that takes into account the fact that quantum services cannot be deployed as traditional services. Instead, the Quantum API Gateway recommends the best quantum computer to run a specific quantum service at run time. As proof of concept, we provide an implementation of the Quantum API Gateway for the Amazon Braket platform. © 1997-2012 IEEE.;;"Computer software; Logic gates; Quantum computers; Software as a service (SaaS); Web services; Cloud-computing; Complex solution; Computational modelling; Hardware; Pay-per-use model; Quanta computers; Quantum algorithms; Quantum Computing; Software; Software engineering methods; Computer hardware";English;Article;Primary Study;Evaluation research;Software Architecture;"O artigo tem como objetivo investigar o paradigma emergente de Quantum Software como Serviço (QSaaS), analisando sua viabilidade, estrutura e os desafios envolvidos na oferta de soluções quânticas por meio da computação em nuvem. Os autores propõem uma sistematização do conceito de QSaaS, abordando sua relação com modelos tradicionais como SaaS, PaaS e IaaS, e destacando seu papel no acesso remoto a recursos de computação quântica para desenvolvedores e usuários finais.

Como contribuição, o estudo apresenta um mapeamento do ecossistema atual de QSaaS, identificando fornecedores, arquiteturas, tipos de serviço e tecnologias empregadas. Os autores discutem os principais desafios técnicos, como segurança, latência, compatibilidade entre plataformas clássicas e quânticas, e a necessidade de abstrações eficientes para esconder a complexidade subjacente da programação quântica. Além disso, propõem uma agenda de pesquisa baseada em sete eixos, incluindo orquestração de serviços, qualidade de software, métricas específicas para QSaaS e novos modelos de negócio, contribuindo com diretrizes para o avanço da pesquisa e a consolidação desse novo paradigma de entrega de software quântico.";O trabalho investigou o paradigma emergente de Quantum Software como Serviço (QSaaS), analisando sua viabilidade, estrutura e os desafios envolvidos na oferta de soluções quânticas por meio da computação em nuvem. ;Quantum software as a service;
SCP0086;"Nguyen H.T.; Usman M.; Buyya R.";"Nguyen, Hoa T. (58127170500); Usman, Muhammad (56559567800); Buyya, Rajkumar (57194845546)";"Cloud Computing and Distributed Systems (CLOUDS) Laboratory, School of Computing and Information Systems, The University of Melbourne, Parkville, 3052, VIC, Australia; School of Physics, The University of Melbourne, Parkville, 3052, VIC, Australia; Data61, CSIRO, Clayton, 3168, VIC, Australia";QFaaS: A Serverless Function-as-a-Service framework for Quantum computing;2024;Future Generation Computer Systems;Computer Science;Future Gener Comput Syst;281;300;9;Quantum computing is rapidly reaching a point in which its application design and engineering aspects must be seriously considered. However, quantum software engineering is still in its infancy, with numerous challenges, especially in dealing with the diversity of quantum programming languages and noisy intermediate-scale quantum (NISQ) systems. To alleviate these challenges, we propose QFaaS, a holistic Quantum Function-as-a-Service framework, which leverages the advantages of the serverless model, DevOps lifecycle, and the state-of-the-art software techniques to advance practical quantum computing for next-generation application development in the NISQ era. Our framework provides essential elements of a serverless quantum system to streamline service-oriented quantum application development in cloud environments, such as combining hybrid quantum–classical computation, automating the backend selection, cold start mitigation, and adapting DevOps techniques. QFaaS offers a full-stack and unified quantum serverless platform by integrating multiple well-known quantum software development kits (Qiskit, Q#, Cirq, and Braket), quantum simulators, and cloud providers (IBM Quantum and Amazon Braket). This paper proposes the concept of quantum function-as-a-service, system design, operation workflows, implementation of QFaaS, and lessons learned on the benefits and limitations of quantum serverless computing. We also present practical use cases with various quantum applications on today's quantum computers and simulators to demonstrate our framework capability to facilitate the ongoing quantum software transition. © 2024 The Author(s);"Hybrid quantum-classical computing; Quantum cloud computing; Quantum DevOps; Quantum function-as-a-service; Quantum serverless; Quantum software engineering";"Application programs; Computer software reusability; Quantum computers; Quantum optics; Software design; Classical computing; Cloud-computing; Hybrid quantum-classical computing; Quantum cloud computing; Quantum devops; Quantum function-as-a-service; Quantum functions; Quantum serverless; Quantum software engineering; Quantum-classical; Life cycle";English;Article;Primary Study;Evaluation research;Software Architecture;Apresentar e detalhar o QFaaS, um framework serverless function-as-a-service para computação quântica, que utiliza um classical driver para compilar circuitos quânticos adaptados ao Quantum Processing Unit (QPU).;Um framework de compilação de circuitos quânticos via software as service.;Quantum software as a service;
SCP0158;"De Stefano M.; Di Nucci D.; Palomba F.; Taibi D.; De Lucia A.";"De Stefano, Manuel (57219489857); Di Nucci, Dario (57016777600); Palomba, Fabio (55321369000); Taibi, Davide (55920884000); De Lucia, Andrea (7003641564)";"University of Salerno, Italy; Tampere University of Technology, Finland";Towards Quantum-algorithms-as-a-service;2022;International Workshop on Quantum Programming for Software Engineering;Quantum Software Engineering;QP4SE;7;10;1;Quantum computing is an emerging field of high interest. Many companies have started to work on developing more powerful and stable quantum computers. However, developers still struggle to master the art of programming with a quantum computer. One of the major challenges faced is the integration of quantum parts of a system with the classical one. This paper proposes a novel development model called Quantum-Algorithms-as-a-Service (QAaaS). This new model aims to allow developers to abstract the quantum components away from the design of the software they are building. The model leverages Software-as-a-Service and Function-as-a-Service to support multiple quantum cloud providers and run their algorithms regardless of the underlying hardware.  © 2022 ACM.;"QaaS; Quantum Computing; Quantum Software Engineering; XaaS";"Arts computing; Computer programming; Quantum computers; Software engineering; Web services; Cloud providers; Development model; Qaas; Quanta computers; Quantum algorithms; Quantum Computing; Quantum software engineering; Software-as-a- Service (SaaS); Xaas; Software as a service (SaaS)";English;Conference Paper;Primary Study;Proposal of solution;Software Architecture;"O objetivo deste artigo é propor um novo modelo de desenvolvimento chamado Quantum-Algorithms-as-a-Service (QAaaS), com o intuito de abstrair os componentes quânticos da fase de design dos sistemas híbridos e permitir que desenvolvedores utilizem algoritmos quânticos como serviços. Inspirado nos modelos SaaS e FaaS, o QAaaS busca facilitar a integração entre partes clássicas e quânticas de aplicações, oferecendo uma camada de orquestração que seleciona o provedor quântico mais adequado, traduz os metamodelos para a plataforma correspondente e retorna os resultados via chamadas API tradicionais.

Como contribuição, o artigo apresenta um modelo conceitual composto por quatro componentes principais — gateway de API, orquestrador, tradutor de metamodelo e provedor quântico — e um roadmap detalhado para a implementação de um protótipo funcional. Além disso, os autores discutem estratégias de adaptação e reutilização de ferramentas existentes, como o Quantum Programming Studio, e destacam os benefícios esperados em termos de portabilidade, redução do vendor lock-in e maior acessibilidade ao uso de computação quântica por desenvolvedores de software tradicional.";O objetivo deste artigo é propor um novo modelo de desenvolvimento chamado Quantum-Algorithms-as-a-Service (QAaaS), com o intuito de abstrair os componentes quânticos da fase de design dos sistemas híbridos e permitir que desenvolvedores utilizem algoritmos quânticos como serviços.;Quantum software as a service;
SCP0350;"Romero-Álvarez J.; Alvarado-Valiente J.; Moguel E.; Garcia-Alonso J.; Murillo J.M.";"Romero-Álvarez, Javier (57567571000); Alvarado-Valiente, Jaime (57567776400); Moguel, Enrique (56586255900); Garcia-Alonso, José (55892225800); Murillo, Juan M. (8687210000)";Quercus Software Engineering Group, Universidad de Extremadura, Cáceres, Spain;Quantum Services: A Tutorial on the Technology and the Process;2024;International Conference on Service-Oriented Computing;Software Engineering;ICSOC;335;342;1;The emergence of quantum computing has introduced a new paradigm in the realm of computer science and software engineering, expanding the frontiers of computer applications designed for problem-solving. The transformation of quantum algorithms into services is a promising avenue to address this new paradigm, as it allows them to be integrated into conventional distributed applications. This tutorial provides an overview of the process of transforming quantum algorithms into quantum services. It explains how these quantum services can be effectively deployed, specifically using the Amazon Braket platform for quantum computing, and how they can be invoked through classical service endpoints. This tutorial not only presents the step-by-step methodology but also provides insight into best practices for successful implementation through a development process. It highlights the use of an extended version of the OpenAPI Specification and the automation capabilities offered by GitHub Actions, which play a key role in improving efficiency throughout the development and deployment phases. © The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2024.;"Continuous Deployment; OpenAPI; Quantum Computing; Quantum Programming; Service-Oriented Computing";"Problem solving; Quantum computers; Quantum theory; Best practices; Computer science and software engineerings; Continuous deployment; Distributed applications; OpenAPI; Problem-solving; Quantum algorithms; Quantum Computing; Quantum programming; Service oriented computing; Application programs";English;Conference Paper;Primary Study;Opinion papers;Software Architecture;"O artigo tem como objetivo apresentar um tutorial prático e abrangente sobre o processo de transformação de algoritmos quânticos em serviços, com foco na integração desses serviços em arquiteturas híbridas clássico-quânticas. A proposta detalha a implementação, implantação e automação desses serviços usando tecnologias como Amazon Braket, OpenAPI estendida e GitHub Actions, promovendo a incorporação eficiente da computação quântica em fluxos de desenvolvimento de software distribuído.

O trabalho contribui ao fornecer uma metodologia passo a passo para a criação de serviços quânticos, desde a adaptação de algoritmos até sua exposição como endpoints clássicos. A proposta destaca a viabilidade da servitização de algoritmos quânticos, oferece exemplos práticos usando Shor e o Problema do Caixeiro Viajante, e propõe a extensão da especificação OpenAPI para serviços quânticos, juntamente com estratégias de deployment contínuo baseadas em GitHub Actions, promovendo reprodutibilidade, automação e integração transparente entre paradigmas computacionais.";O trabalho contribui ao fornecer uma metodologia passo a passo para a criação de serviços quânticos, desde a adaptação de algoritmos até sua exposição como endpoints clássicos. ;Quantum software as a service;
WOS1207;"Moguel, E; Rojo, J; Valencia, D; Berrocal, J; Garcia-Alonso, J; Murillo, JM";"Moguel, Enrique; Rojo, Javier; Valencia, David; Berrocal, Javier; Garcia-Alonso, Jose; Murillo, Juan M.";Universidad de Extremadura;Quantum service-oriented computing: current landscape and challenges;2022;Software Quality Journal;Software Engineering;Software Quality Journal;983;1002;28;The development that quantum computing technologies are achieving is beginning to attract the interest of companies that could potentially be users of quantum software. Thus, it is perfectly feasible that during the next few years hybrid systems will start to appear integrating both the classical software systems of companies and new quantum ones providing solutions to problems that still remain unmanageable today. A natural way to support such integration is Service-Oriented Computing. While conceptually the invocation of a quantum software service is similar to that of a classical one, technically there are many differences and technological limitations, which refer to platform independence, decoupling, scalability, etc. To highlight these differences and the difficulties to develop quality quantum services, this paper takes a well-known problem to which a quantum solution can be provided, integer factorization, making use of the Amazon Braket quantum service platform. The exercise of trying to provide the factorization as a quantum service is carried out following the best practices, design patterns and standards existing in the implementation of classical services. This case study is used to highlight the rough edges and limitations that arise in the integration of classical-quantum hybrid systems using service-oriented computing. The conclusion of the study allows us to point out directions in which to focus research efforts in order to achieve effective quantum service-oriented computing.;"Quantum services; Classical services; Hybrid classical-quantum software; Quality";;English;Article;Primary Study;Proposal of solution;Software Architecture;Apresentar uma análise do software quântico atual do ponto de vista da computação orientada a serviços, utilizando o problema de fatoração de inteiros como estudo de caso na plataforma Amazon Braket. O objetivo é destacar as dificuldades na criação de serviços quânticos de qualidade e apontar direções para futuras pesquisas em computação orientada a serviços quânticos eficaz.;O objetivo é destacar as dificuldades na criação de serviços quânticos de qualidade e apontar direções para futuras pesquisas em computação orientada a serviços quânticos eficaz.;Quantum software as a service;
SCP0482;"Berganza Gomez R.; O'Meara C.; Cortiana G.; Mendl C.B.; Bernabe-Moreno J.";"Berganza Gomez, Raul (57649774600); O'Meara, Corey (57948062900); Cortiana, Giorgio (57383383800); Mendl, Christian B. (26634070400); Bernabe-Moreno, Juan (56201964600)";"Technical University of Munich, Data & Analytics, E.ON Digital Technology GmbH, Hannover, Germany; E.ON Digital Technology GmbH, Data & Analytics, Hannover, Germany; University of Munich, TUM Institute of Advanced Study Garching, Department of Informatics Technical, Germany";Towards AutoQML: A Cloud-Based Automated Circuit Architecture Search Framework;2022;International Conference on Software Architecture Companion;Software Engineering;ICSA;129;136;4;The learning process of classical machine learning algorithms is tuned by hyperparameters that need to be customized to best learn and generalize from an input dataset. In recent years, Quantum Machine Learning (QML) has been gaining traction as a possible application of quantum computing which may provide quantum advantage in the future. However, quantum versions of classical machine learning algorithms introduce a plethora of additional parameters and circuit variations that have their own intricacies in being tuned.In this work, we take the first steps towards Automated Quantum Machine Learning (AutoQML). We propose a concrete description of the problem, and then develop a classical-quantum hybrid cloud architecture that allows for parallelized hyperparameter exploration and model training.As an application use-case, we train a quantum Generative Adversarial neural Network (qGAN) to generate energy prices that follow a known historic data distribution. Such a QML model can be used for various applications in the energy economics sector.  © 2022 IEEE.;"cloud computing; parametrized quantum circuit; quantum machine learning; quantum neural network; software architecture";"Cloud computing architecture; Computer architecture; Economics; Generative adversarial networks; Learning algorithms; Learning systems; Network architecture; Quantum computers; Cloud-based; Cloud-computing; Hyper-parameter; Machine learning algorithms; Machine-learning; Parametrized quantum circuit; Quantum circuit; Quantum machine learning; Quantum machines; Quantum neural networks; Timing circuits";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O objetivo do artigo é propor o AutoQML, um framework automatizado baseado em nuvem para a geração de circuitos quânticos otimizados voltados a tarefas de aprendizado de máquina quântico (QML). A proposta visa reduzir a necessidade de conhecimento especializado por parte do desenvolvedor, automatizando a seleção de arquiteturas quânticas eficientes com base em requisitos do problema, utilizando recursos de cloud computing para facilitar a execução e escalabilidade.

As principais contribuições incluem o desenvolvimento de uma arquitetura modular para o AutoQML, composta por componentes responsáveis por definição de tarefas, seleção e otimização de circuitos e execução em ambientes de computação em nuvem. O framework adota abordagens de meta-aprendizado e otimização de hiperparâmetros para encontrar circuitos quânticos eficazes sem intervenção humana direta. O artigo também apresenta uma avaliação empírica preliminar que demonstra a viabilidade do AutoQML na construção de modelos QML com desempenho competitivo em tarefas de classificação, evidenciando o potencial da abordagem para democratizar o acesso à computação quântica em aplicações de aprendizado de máquina.";O objetivo do artigo é propor o AutoQML, um framework automatizado baseado em nuvem para a geração de circuitos quânticos otimizados voltados a tarefas de aprendizado de máquina quântico (QML).;Quantum software as a service;
SCP0032;"Moguel E.; Garcia-Alonso J.; Terres-Escudero E.B.; Arias D.; Bringas P.G.; Muñoz A.D.; Monje M.R.; Lama J.R.O.; Murillo J.M.";"Moguel, Enrique (56586255900); Garcia-Alonso, Jose (55892225800); Terres-Escudero, Erik B. (58171241300); Arias, Danel (58171241200); Bringas, Pablo García (35316900500); Muñoz, Ana Díaz (58859309300); Monje, Moisés Rodríguez (59297184300); Lama, Jesús Ramón Oviedo (59296582900); Murillo, Juan M. (8687210000)";"Quercus Software Engineering Group, Universidad de Extremadura, Cáceres, Spain; Universidad de Deusto, Bilbao, Spain; Instituto de Tecnologías y Sistemas de Información (UCLM), C/de Moledores s/n, Ciudad Real, 13071, Spain";Quantum Services Engineering: development, quality, testing, and security (Q-SERV Project);2024;Ibero-American Conference on Software Engineering;Software Engineering;CIbSE;421;424;0;The new and revolutionary quantum computation aims to advance in important fields such as AI, cybersecurity, and medicine. The development of this technology has encouraged several research centers and companies such as Amazon, IBM, Google or Microsoft to devote considerable efforts to the development of new technologies that bring quantum computing to the market. Currently, access to this technology is provided through the Infrastructure as a Service paradigm and with hybrid systems that combine classical and quantum computing. In order to create these systems, significant advances in service-oriented quantum computing are required to enable developers to create and operate quantum services with the same level of quality and security as their classical counterparts. Therefore, the project presented in this paper is primarily aimed at providing techniques and methodologies for quantum software development by applying the lessons learned from classical software engineering. © 2024 27th Ibero-American Conference on Software Engineering, CIbSE 2024. All rights reserved.;;"Infrastructure as a service (IaaS); Quantum electronics; Software design; Software quality; Software testing; Classical computing; Cyber security; Engineering development; Google+; MicroSoft; Quality testing; Quantum Computing; Research center; Service paradigm; Services engineering; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;The Software Engineering in General;"O artigo tem como objetivo apresentar o projeto Q-SERV, que busca aplicar fundamentos da engenharia de software clássica para o desenvolvimento de serviços quânticos, abordando aspectos como desenvolvimento, qualidade, teste e segurança. O trabalho parte da constatação de que, embora o acesso à computação quântica já esteja disponível via nuvem, a criação de serviços quânticos ainda carece de técnicas, ferramentas e metodologias consolidadas que garantam confiabilidade, segurança e qualidade comparáveis às do paradigma clássico.

Como contribuição, o artigo apresenta os avanços obtidos em três frentes: o desenvolvimento e operação de microsserviços quânticos (Universidade da Extremadura), a garantia de qualidade e testabilidade do software quântico (Universidade de Castilla-La Mancha), e a segurança desde o projeto até a execução dos serviços quânticos (Universidade de Deusto). Entre os resultados práticos, destacam-se ferramentas para orquestração de serviços quânticos com DevOps, geração de APIs quânticas, avaliação de atributos de qualidade com base na ISO 25010, e técnicas para detecção de padrões de erro e controle de ruído em circuitos NISQ. O artigo também evidencia a colaboração entre os grupos para propor processos integrados que considerem qualidade, segurança e confiabilidade no ciclo de vida dos serviços quânticos.";O trabalho apresentou o projeto Q-SERV, que busca aplicar fundamentos da engenharia de software clássica para o desenvolvimento de serviços quânticos, abordando aspectos como desenvolvimento, qualidade, teste e segurança.;Quantum software as a service;Artigo que relata um projeto em colaboração com outras instituições
SCP0107;"Esposito M.; Sabzevari M.T.; Ye B.; Falessi D.; Khan A.A.; Taibi D.";"Esposito, Matteo (57833979900); Sabzevari, Maryam Tavassoli (58959915300); Ye, Boshuai (59212745500); Falessi, Davide (13103911200); Khan, Arif Ali (26434399300); Taibi, Davide (55920884000)";"University of Rome Tor Vergata, Rome, Italy; University of Oulu, Oulu, Finland; Aalto University, Espoo, Finland";Classi|Q〉: Towards a Translation Framework to Bridge the Classical-Quantum Programming Gap;2024;International Workshop on Quantum Software Engineering: The Next Evolution;Quantum Software Engineering;QSE-NE;11;14;1;Quantum computing, albeit readily available as hardware or emulated on the cloud, is still far from being available in general regarding complex programming paradigms and learning curves. This vision paper introduces Classi|Q〉, a translation framework idea to bridge Classical and Quantum Computing by translating high-level programming languages, e.g., Python or C++, into a low-level language, e.g., Quantum Assembly. Our idea paper serves as a blueprint for ongoing efforts in quantum software engineering, offering a roadmap for further Classi|Q〉 development to meet the diverse needs of researchers and practitioners. Classi|Q〉 is designed to empower researchers and practitioners with no prior quantum experience to harness the potential of hybrid quantum computation. We also discuss future enhancements to Classi|Q〉, including support for additional quantum languages, improved optimization strategies, and integration with emerging quantum computing platforms. © 2024 Copyright held by the owner/author(s).;"Programming Languages; Python; QASM; Quantum Computing; Quantum Programming Language; Translation";"Photons; Program translators; Python; Quantum electronics; Classical computing; Classical-quantum; Learning curves; Programming learning; Programming paradigms; QASM; Quantum Computing; Quantum programming; Quantum programming languages; Translation; C++ (programming language)";English;Conference Paper;Primary Study;Proposal of solution;Software Construction;"O artigo tem como objetivo apresentar a visão e o design inicial do framework Classi|Q⟩, uma ferramenta de tradução voltada para facilitar a transição entre programação clássica e programação quântica. A proposta visa permitir que pesquisadores e desenvolvedores sem experiência prévia em computação quântica possam explorar seu potencial por meio da tradução automática de algoritmos escritos em linguagens de alto nível, como Python e C++, para linguagens quânticas de baixo nível, como OpenQASM 3.0. O framework se baseia no uso de árvores de sintaxe abstrata (ASTs) e tem como meta final possibilitar soluções híbridas eficientes, integrando componentes clássicos e quânticos de forma fluida.

As contribuições do trabalho incluem a concepção do framework Classi|Q⟩ como primeiro tradutor PyC para QASM, a introdução do conceito de Quantum Programming Language Patterns (QPLPs), e o delineamento de um processo de otimização por blocos que substitui trechos inteiros de código clássico por sub-rotinas quânticas otimizadas. Além disso, os autores detalham o design modular do framework, abordando tanto o módulo de tradução quanto o de otimização, e apresentam uma proposta de roadmap para o desenvolvimento futuro da ferramenta. A iniciativa representa um passo significativo para tornar a computação quântica mais acessível e interoperável, ao mesmo tempo em que incentiva a colaboração interdisciplinar entre áreas clássicas e quânticas da computação.";O artigo tem como objetivo apresentar a visão e o design inicial do framework Classi|Q⟩, uma ferramenta de tradução voltada para facilitar a transição entre programação clássica e programação quântica. ;Quantum software construction;
SCP0354;"Nguyen T.; McCaskey A.J.";"Nguyen, Thien (57219545150); McCaskey, Alexander J. (56470748900)";Computer Science and Mathematics Division, Oak Ridge National Laboratory, Oak Ridge, 37831-6164, TN, United States;Extending Python for Quantum-classical Computing via Quantum Just-in-time Compilation;2022;Transactions on Quantum Computing;Quantum Computing and/or Information;TQC;0;0;1;Python is a popular programming language known for its flexibility, usability, readability, and focus on developer productivity. The quantum software community has adopted Python on a number of large-scale efforts due to these characteristics, as well as the remote nature of near-term quantum processors. The use of Python has enabled quick prototyping for quantum code that directly benefits pertinent research and development efforts in quantum scientific computing. However, this rapid prototyping ability comes at the cost of future performant integration for tightly coupled CPU-QPU architectures with fast-feedback. Here, we present a language extension to Python that enables heterogeneous quantum-classical computing via a robust C++ infrastructure for quantum just-in-time (QJIT) compilation. Our work builds off the QCOR C++ language extension and compiler infrastructure to enable a single-source, quantum hardware-agnostic approach to quantum-classical computing that retains the performance required for tightly coupled CPU-QPU compute models. We detail this Python extension, its programming model and underlying software architecture, and provide a robust set of examples to demonstrate the utility of our approach. © 2022 Association for Computing Machinery.;"compilers; domain specific languages; Quantum computing; quantum programming";"C++ (programming language); Closed loop control systems; Problem oriented languages; Program compilers; Quantum computers; Quantum optics; Classical computing; Compiler; Domains specific languages; Just-in-time compilation; Language extensions; Quantum Computing; Quantum programming; Quantum-classical; Software community; Tightly-coupled; Python";English;Article;Primary Study;Proposal of solution;Software Construction;"O artigo tem como objetivo estender a linguagem Python para suportar a programação híbrida entre computação clássica e quântica, por meio de uma abordagem de compilação just-in-time (JIT) voltada a ambientes quânticos. A proposta busca reduzir a barreira entre linguagens de propósito geral e linguagens quânticas, possibilitando que programadores utilizem Python para definir, compilar e executar algoritmos quânticos de forma integrada e eficiente.

Entre as principais contribuições, os autores apresentam o QJIT, um compilador JIT que traduz código Python em operações quânticas compatíveis com circuitos e simulações quânticas, preservando a semântica da linguagem original. O QJIT oferece interoperabilidade entre estruturas de controle clássicas e instruções quânticas, otimizando a execução por meio de técnicas de especialização em tempo de execução. O artigo também demonstra a viabilidade da abordagem com experimentos que integram Python e QIR (Quantum Intermediate Representation), apontando para uma solução promissora na construção de pipelines híbridos clássicos-quânticos mais naturais e acessíveis.";Os autores apresentam o QJIT, um compilador JIT que traduz código Python em operações quânticas compatíveis com circuitos e simulações quânticas, preservando a semântica da linguagem original.;Quantum software construction;
WOS0888;"Evans, A; Omonije, S; Soulé, R; Rand, R";"Evans, Aidan; Omonije, Seun; Soule, Robert; Rand, Robert";"Yale University; University of Chicago";MCBeth: A Measurement-based Quantum Programming Language;2023;International Workshop on Quantum Software Engineering;Quantum Software Engineering;QSE;1;8;0;This work introduces MCBeth, a quantum programming language that bridges the gap between near-term and nonnear-term languages. MCBeth allows users to directly program and simulate measurement-based computation by building upon the measurement calculus. While MCBeth programs are meant to be executed directly on hardware, to take advantage of current machines we also provide a compiler to gate-based instruction sets. We argue that MCBeth is more natural to use than common low-level languages, which are based upon the quantum circuit model, but still easily runnable in practice.;"quantum computing; programming languages; measurement-based quantum computing; one-way quantum computer; distributed computing";;English;Conference Paper;Primary Study;Proposal of solution;Software Construction;"O artigo tem como objetivo introduzir a MCBeth, uma linguagem de programação quântica baseada em medições, desenhada especificamente para facilitar o desenvolvimento de algoritmos quânticos no modelo de computação baseado em medição (MBQC). A proposta busca oferecer uma linguagem de mais alto nível e estruturada, que permita representar circuitos quânticos de maneira mais compreensível e modular, explorando a natureza das medições como elemento central da computação.

As contribuições principais incluem a definição formal da sintaxe e semântica da linguagem MCBeth, sua implementação prática em Python e a demonstração da linguagem por meio da codificação de algoritmos quânticos conhecidos, como o algoritmo de Deutsch-Jozsa. O artigo mostra como a MCBeth permite a separação entre a preparação de estados, medições e controle clássico, facilitando a reutilização de componentes e promovendo maior clareza na modelagem de programas quânticos. Além disso, a linguagem apoia a prototipação de sistemas quânticos com maior abstração, contribuindo para a engenharia de software no paradigma MBQC.";O artigo tem como objetivo introduzir a MCBeth, uma linguagem de programação quântica baseada em medições, desenhada especificamente para facilitar o desenvolvimento de algoritmos quânticos no modelo de computação baseado em medição (MBQC). ;Quantum software construction;
WOS1388;"Guo, JZ; Ying, MS";"Guo, Jingzhe; Ying, Mingsheng";"Tsinghua University; Chinese Academy of Sciences; Institute of Software, CAS";Software Pipelining for Quantum Loop Programs;2023;Transactions on Software Engineering;Software Engineering;TOSE;2815;2828;2;We propose a method for performing software pipelining on quantum for-loop programs to exploit parallelism in and across iterations. We redefined concepts useful in program optimization, including array aliasing, instruction dependency, and resource conflict required in optimizing quantum programs. Using these concepts, we present a software pipelining framework exploiting instruction-level parallelism in quantum loop programs. This method is further enhanced with several improvements to reduce total gate count and program depth. The optimization method is then evaluated on some popular quantum algorithms like Grover and QAOA, and compared under different configurations and with several baseline compilers. The evaluation results show that our approach can schedule loop programs with depth close to the depth of the entire loop unrolling while generating smaller code sizes and consuming much less time. This is the first step towards optimization of a quantum program with such loop control flow, as far as we know.;"Quantum program scheduling; quantum program compilation";;English;Article;Primary Study;Evaluation research;Software Construction;Propor um método para executar software pipelining em programas de for-loop quânticos, explorando o paralelismo dentro e entre iterações. O objetivo é otimizar programas quânticos com fluxo de controle de loops, redefinindo conceitos como aliasing de arrays e dependência de instruções para expor mais oportunidades de otimização.;Otimização de circuitos quânticos;Quantum software construction;
SCP0169;"Ali S.; Yue T.";"Ali, Shaukat (56962801700); Yue, Tao (25651096400)";"Simula Research Laboratory, Oslo Metropolitan University, Oslo, Norway; Simula Research Laboratory, Oslo, Norway";On the Need of Quantum-Oriented Paradigm;2023;International Workshop on Quantum Programming for Software Engineering;Quantum Software Engineering;QP4SE;17;20;3;Since the invention of Quantum Computing (QC) in the 1980s, substantial claims about QC's ability to solve computational problems of unparalleled complexity have emerged. However, forty years later, no significant real-world QC applications exist. Indeed, the availability of small-scale noisy quantum computers is to blame. Still, simultaneously, the programming of quantum computers is too close to quantum hardware, requiring software engineers with specialized backgrounds to build QC applications and limiting the maximum exploitation of QC's potential. Thus, there is a need for an abstract yet intuitive quantum-oriented paradigm (QOP) for building QC applications, similar to the object-oriented paradigm established in the 1960s for classical computers that laid the foundations of modern programming and modeling languages for classical computers. Unfortunately, such a QC paradigm doesn't exist. Thus, we foresee the need to build a novel QOP based on which future quantum programming and modeling languages shall be developed. Such QOP shall enable users with diverse backgrounds (e.g., computer scientists, software engineers, and physicists) to build QC applications cost-effectively, intuitively, and independently of low-level quantum mechanics characteristics (e.g., superposition and entanglement). This paper discusses the emerging work of QOP and presents research directions that the software engineering and programming communities can follow to build a successful QOP.  © 2023 ACM.;"modeling solutions; programming paradigms; quantum software; quantum software development";"Application programs; Computer systems programming; Object oriented programming; Quantum computers; Quantum entanglement; Software design; Computational problem; Computing applications; Model solution; Programming paradigms; Quanta computers; Quantum Computing; Quantum software; Quantum software development; Real-world; Small scale; Modeling languages";English;Conference Paper;Primary Study;Opinion papers;Software Engineering Models and Methods;"O objetivo do artigo é propor e justificar a necessidade de um novo paradigma orientado à computação quântica, denominado Quantum-Oriented Paradigm (QOP), que permita o desenvolvimento de aplicações quânticas de forma mais abstrata, intuitiva e independente das limitações do hardware atual e dos conceitos complexos da mecânica quântica. Inspirado nos paradigmas de programação clássicos, como o orientado a objetos, os autores defendem que um novo paradigma é essencial para que engenheiros de software e programadores sem formação específica em física quântica possam contribuir de forma significativa para a criação de software quântico, superando a atual abordagem baseada em circuitos de baixo nível.

Como contribuição, o artigo apresenta uma visão inicial para o desenvolvimento do QOP, destacando quatro pilares fundamentais para investigação futura: encapsulamento, abstração, modularidade e independência de plataforma. Os autores discutem como esses conceitos clássicos podem ser adaptados ou reinventados no contexto quântico, propondo direções de pesquisa teórica e prática para viabilizar a criação de linguagens e modelos de programação baseados nesse paradigma. A proposta também está alinhada ao Talavera Manifesto, reforçando o compromisso com uma engenharia de software quântica independente de plataforma e favorável à reutilização de componentes.";O objetivo do artigo é propor e justificar a necessidade de um novo paradigma orientado à computação quântica, denominado Quantum-Oriented Paradigm (QOP), que permita o desenvolvimento de aplicações quânticas de forma mais abstrata, intuitiva e independente das limitações do hardware atual e dos conceitos complexos da mecânica quântica. ;Quantum software construction;
SCP0005;"Stirbu V.; Haghparast M.; Waseem M.; Dayama N.; Mikkonen T.";"Stirbu, Vlad (57249175700); Haghparast, Majid (23094283500); Waseem, Muhammad (57189504629); Dayama, Niraj (55538820500); Mikkonen, Tommi (57220096141)";University of Jyväskylä, Jyväskylä, Finland;Full-Stack Quantum Software in Practice: Ecosystem, Stakeholders and Challenges;2023;International Conference on Quantum Computing and Engineering;Quantum Computing and/or Information;QCE;177;180;5;The emergence of quantum computing has introduced a revolutionary paradigm capable of transforming numerous scientific and industrial sectors. Nevertheless, realizing the practical utilization of quantum software in real-world applications presents significant challenges. Factors such as variations in hardware implementations, the intricacy of quantum algorithms, the integration of quantum and traditional software, and the absence of standardized software and communication interfaces hinder the development of a skilled workforce in this domain. This paper explores tangible approaches to establishing quantum computing software development process and addresses the concerns of various stakeholders. By addressing these challenges, we aim to pave the way for the effective utilization of quantum computing in diverse fields.  © 2023 IEEE.;"operations; quantum computing; quantum software engineering; software development process";"Application programs; Quantum computers; Quantum theory; Hardware implementations; Industrial sector; Operation; Quantum algorithms; Quantum Computing; Quantum software engineering; Real-world; Scientific sectors; Software development process; Software interfaces; Software design";English;Conference Paper;Primary Study;Opinion papers;Software Construction;"O artigo tem como objetivo investigar os desafios do desenvolvimento de software quântico a partir de uma perspectiva full-stack, abordando tanto os processos quanto a composição arquitetural de aplicações híbridas (clássicas e quânticas). Os autores buscam compreender como práticas consolidadas da engenharia de software, especialmente as ligadas ao desenvolvimento contínuo, podem ser adaptadas para melhorar a experiência de desenvolvimento e operação de software quântico em ambientes reais.

Como contribuição, o estudo propõe uma análise detalhada do ciclo de vida do desenvolvimento de software quântico, considerando aspectos como depuração, integração com software clássico, virtualização, stakeholders envolvidos e camadas da arquitetura. Os autores destacam a importância de técnicas como modularização, verificação intermediária e interfaces abertas para lidar com os desafios técnicos e organizacionais do ecossistema. Além disso, argumentam que a adoção de boas práticas do DevOps e a definição de fronteiras de confiança são fundamentais para promover um ambiente de desenvolvimento robusto e sustentável para aplicações quânticas.";Investiga os desafios do desenvolvimento de software quântico a partir de uma perspectiva full-stack.;Quantum software construction challenges;
SCP0179;"Gallardo J.Z.; Moguel E.; Canal C.; Garcia-Alonso J.";"Gallardo, Javier Zayas (59305563900); Moguel, Enrique (56586255900); Canal, Carlos (57193752751); Garcia-Alonso, Jose (55892225800)";"Universidad de Málaga, ITIS Software, Málaga, Spain; Universidad de Extremadura, Quercus Software Engineering Group, Cáceres, Spain";Quirk+: A Tool for Quantum Software Development Based on Quirk;2024;International Conference on Software Analysis, Evolution and Reengineering ;Software Engineering;SANER;151;158;0;Quantum computing is becoming increasingly relevant. Numerous research efforts are being carried out to improve quantum computers by increasing the number of qubits in their processors, mitigating noise, etc. However, the tools that exist to program these computers are not advancing at the same speed. Therefore, in this work, we propose Quirk+, a quantum circuit development tool based on Quirk. We have implemented improvements over Quirk such as the inclusion of a custom gate importer/exporter, a running circuit inspector, a translator to qasm and vice-versa, as well as other interface usability improvements. Tools such as the one we propose in this paper will facilitate the work of quantum software developers, as well as break down the barriers to access to this type of programming for classical software developers. ©2024 IEEE.;"Circuit simulators; Quantum Composer; Quantum computing; Quirk";"Integrated circuit design; Program translators; Quantum electronics; Quantum optics; Software design; Circuit development; Circuit simulators; Development tools; Quanta computers; Quantum circuit; Quantum composer; Quantum Computing; Quirk; Research efforts; Software developer; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;Software Construction;O trabalho apresenta melhorias para a ferramenta Quirk, incluindo novas funcionalidades como um debugger (inspetor) e um tradutor para converter circuitos Quirk de e para a linguagem de programação QASM da IBM.;Melhoria da ferramenta Quirk;Quantum software debugger;
SCP0202;"Miranskyy A.; Zhang L.; Doliskani J.";"Miranskyy, Andriy (9041935500); Zhang, Lei (57204464829); Doliskani, Javad (55825358700)";Ryerson University, Department of Computer Science, Toronto, Canada;Is Your quantum Program Bug-Free?;2020;International Conference on Software Engineering: New Ideas and Emerging Results;Software Engineering;ICSE-NIER;29;32;12;Quantum computers are becoming more mainstream. As more programmers are starting to look at writing quantum programs, they face an inevitable task of debugging their code. How should the programs for quantum computers be debugged?In this paper, we discuss existing debugging tactics, used in developing programs for classic computers, and show which ones can be readily adopted. We also highlight quantum-computer-specific debugging issues and list novel techniques that are needed to address these issues. Re practitioners can readily apply some of these tactics to their process of writing quantum programs, while researchers can learn about opportunities for future work.  © 2020 ACM.;;"Computer debugging; Qubits; Software engineering; Bug-free; Developing projects; Novel techniques; Program debugging";English;Conference Paper;Primary Study;Proposal of solution;Software Testing;"O artigo tem como objetivo investigar a viabilidade de aplicar técnicas clássicas de depuração no contexto da programação quântica, considerando os desafios únicos impostos por propriedades como superposição, emaranhamento e o teorema da não clonagem. A proposta central é analisar se abordagens tradicionais, como backtracking, eliminação de causas e força bruta, podem ser adaptadas ou estendidas para auxiliar na identificação e correção de bugs em programas quânticos.

Como contribuição, os autores discutem as limitações práticas dessas táticas no ambiente quântico e propõem soluções alternativas, como o uso de clonagem aproximada e simulações clássicas quando os estados são conhecidos. Além disso, o artigo sugere o desenvolvimento de depuradores quânticos que possam gerar cópias aproximadas dos estados e verificar sua separabilidade, lançando as bases para novas ferramentas e metodologias voltadas à depuração quântica. Ao final, o estudo reforça a necessidade de participação ativa da comunidade de engenharia de software no avanço das práticas específicas de desenvolvimento e verificação de software quântico.";O artigo tem como objetivo investigar a viabilidade de aplicar técnicas clássicas de depuração no contexto da programação quântica, considerando os desafios únicos impostos por propriedades como superposição, emaranhamento e o teorema da não clonagem.;Quantum software debugger;
SCP0245;"Metwalli S.A.; Van Meter R.";"Metwalli, Sara Ayman (57208750534); Van Meter, Rodney (8961465300)";"Graduate School of Media and Governance, Keio University, Shonan Fujisawa Campus, Kanagawa, Japan; Faculty of Environment and Information Studies, Keio University, Shonan Fujisawa Campus, Kanagawa, Japan; Quantum Computing Center, Keio University, Kanagawa, Japan";A Tool For Debugging Quantum Circuits;2022;International Conference on Quantum Computing and Engineering;Quantum Computing and/or Information;QCE;624;634;6;"As the scale of quantum programs grows to match that of classical software, the nascent field of quantum software engineering must mature and tools such as debuggers will become increasingly important. However, developing a quantum debugger is challenging due to the nature of a quantum computer; sneaking a peek at the value of a quantum state will cause either partial or complete collapse of the superposition and may destroy the necessary entanglement. As a first step to developing a full quantum circuit debugger, we have designed and implemented a quantum circuit debugging tool. The tool allows the user to divide the circuit vertically or horizontally into smaller chunks known as slices, and manage their simulation or execution for either interactive debugging or automated testing. The tool also enables developers to track gates within the overall circuit and each chunk to understand their behavior better. Feedback on usefulness and usability from early users shows that using the tool to slice and test their circuits has helped make the debugging process more time-efficient for them.  © 2022 IEEE.";"Debugging; Quantum circuits; Quantum Software";"Program debugging; Quantum entanglement; Quantum optics; Circuit debugging; Debuggers; Debugging; Debugging tools; Interactive debugging; Nascent field; Quanta computers; Quantum circuit; Quantum software; Quantum state; Timing circuits";English;Conference Paper;Primary Study;Proposal of solution;Software Testing;"O artigo tem como objetivo apresentar uma ferramenta chamada q-dbg, projetada para apoiar a depuração de circuitos quânticos em nível lógico. A proposta busca oferecer uma solução prática para superar os desafios de depuração impostos pelas características da computação quântica, como a impossibilidade de clonar estados quânticos e os efeitos colaterais das medições.

Como contribuição, os autores introduzem a q-dbg como uma ferramenta que simula a execução de circuitos quânticos e permite que os desenvolvedores inspecionem estados intermediários e detectem comportamentos inesperados. A ferramenta é compatível com circuitos gerados por bibliotecas como Qiskit e Cirq, e suporta diferentes estratégias de visualização e rastreamento de estados. O estudo ainda valida a utilidade da ferramenta por meio de um conjunto de experimentos e casos de uso, demonstrando seu potencial para melhorar a compreensão e confiabilidade durante o desenvolvimento de software quântico.";O artigo tem como objetivo apresentar uma ferramenta chamada q-dbg, projetada para apoiar a depuração de circuitos quânticos em nível lógico.;Quantum software debugger;
WOS0204;"Zhao, PZ; Zhao, JJ; Miao, ZT; Lan, SH";"Zhao, Pengzhan; Zhao, Jianjun; Miao, Zhongtao; Lan, Shuhan";Kyushu University;Bugs4Q: A Benchmark of Real Bugs for Quantum Programs;2021;International Conference on Automated Software Engineering;Software Engineering;ASE;1373;1376;25;Realistic benchmarks of reproducible bugs and fixes are vital to good experimental evaluation of debugging and testing approaches. However, there is no suitable benchmark suite that can systematically evaluate the debugging and testing methods of quantum programs until now. This paper proposes Bugs4Q, a benchmark of thirty-six real, manually validated Qiskit bugs from four popular Qiskit elements (Terra, Aer, Ignis, and Aqua), supplemented with the test cases for reproducing buggy behaviors. Bugs4Q also provides interfaces for accessing the buggy and fixed versions of the Qiskit programs and executing the corresponding test cases, facilitating the reproducible empirical studies and comparisons of Qiskit program debugging and testing tools. Bugs4Q is publicly available at https://github.com/z-928/Bugs4Q;"Quantum software testing; quantum program debugging; benchmark suite; Qiskit; Bugs4Q";;English;Conference Paper;Primary Study;Proposal of solution;Software Testing;"O artigo propõe o Bugs4Q, um benchmark composto por 36 bugs reais, manualmente validados, extraídos de quatro componentes populares do Qiskit (Terra, Aer, Ignis e Aqua), com o objetivo de apoiar a avaliação empírica de métodos de depuração e teste de software quântico. A proposta busca preencher a lacuna existente na engenharia de software quântico, que carece de uma suíte de bugs reprodutíveis para validar ferramentas e técnicas de localização e correção de erros, contribuindo assim para o avanço da área.

As principais contribuições incluem a criação de uma base de dados pública com bugs e correções reais, juntamente com casos de teste capazes de reproduzir os comportamentos defeituosos; a sistematização e filtragem desses bugs com base em critérios como reprodutibilidade e isolamento; e o fornecimento de uma interface para acesso às versões com e sem defeito dos programas Qiskit. O Bugs4Q permite comparações entre diferentes ferramentas de análise e testes de software quântico, sendo um passo importante para experimentações controladas e reprodutíveis na área.";O artigo propõe o Bugs4Q, um benchmark composto por 36 bugs reais, manualmente validados, extraídos de quatro componentes populares do Qiskit (Terra, Aer, Ignis e Aqua), com o objetivo de apoiar a avaliação empírica de métodos de depuração e teste de software quântico. ;Quantum software debugger;
SCP0296;"Kaul M.; Küchler A.; Banse C.";"Kaul, Maximilian (57361337300); Küchler, Alexander (57988816800); Banse, Christian (55233564400)";Fraunhofer Aisec, Garching, Germany;A Uniform Representation of Classical and Quantum Source Code for Static Code Analysis;2023;International Conference on Quantum Computing and Engineering;Quantum Computing and/or Information;QCE;1013;1019;3;The emergence of quantum computing raises the question of how to identify (security-relevant) programming errors during development. However, current static code analysis tools fail to model information specific to quantum computing. In this paper, we identify this information and propose to extend classical code analysis tools accordingly. Among such tools, we identify the Code Property Graph to be very well suited for this task as it can be easily extended with quantum computing specific information. For our proof of concept, we implemented a tool which includes information from the quantum world in the graph and demonstrate its ability to analyze source code written in Qiskit and OpenQASM. Our tool brings together the information from the classical and quantum world, enabling analysis across both domains. By combining all relevant information into a single detailed analysis, this powerful tool can facilitate tackling future quantum source code analysis challenges. © 2023 IEEE.;"quantum code property graph; quantum source code analysis; software security; static code analysis";"Quantum optics; Property; Quantum code property graph; Quantum codes; Quantum Computing; Quantum source code analyse; Quantum world; Software security; Source code analysis; Source codes; Static code analysis; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo tem como objetivo propor uma representação unificada de código-fonte clássico e quântico, com foco na análise estática de programas híbridos. A motivação central é lidar com os desafios impostos pela crescente integração entre componentes clássicos e quânticos, criando uma infraestrutura que permita realizar verificações e análises de qualidade de forma sistemática e automatizada, independentemente do paradigma computacional envolvido.

Entre as contribuições, o estudo apresenta uma linguagem intermediária capaz de representar, de forma uniforme, construções tanto do código clássico quanto do quântico. Essa representação serve de base para mecanismos de análise estática, possibilitando detectar problemas estruturais, inconsistências e más práticas no código híbrido. Os autores também demonstram, por meio de exemplos práticos, como essa abordagem pode ser aplicada para verificar padrões de uso incorreto de qubits, dependências entre operações e integração segura entre os mundos clássico e quântico. A proposta representa um passo relevante para o desenvolvimento de ferramentas de engenharia de software que atendam às necessidades específicas de sistemas híbridos.";O artigo tem como objetivo propor uma representação unificada de código-fonte clássico e quântico, com foco na análise estática de programas híbridos. ;Quantum software design;
SCP0063;"Díaz A.; Alvarado-Valiente J.; Romero-Álvarez J.; Moguel E.; Garcia-Alonso J.; Rodríguez M.; García-Rodríguez I.; Murillo J.M.";"Díaz, Ana (8511012100); Alvarado-Valiente, Jaime (57567776400); Romero-Álvarez, Javier (57567571000); Moguel, Enrique (56586255900); Garcia-Alonso, Jose (55892225800); Rodríguez, Moisés (55586954300); García-Rodríguez, Ignacio (57210846939); Murillo, Juan M. (8687210000)";"Alarcos Research Group, Universidad de Castilla-La Mancha, Ciudad Real, Spain; Quercus Software Engineering Group, Universidad de Extremadura, Cáceres, Spain";Service engineering for quantum computing: Ensuring high-quality quantum services;2025;Information and Software Technology;Software Engineering;INFSOF;0;0;0;Context: Quantum computing is transforming the world and driving advanced applications in fields such as healthcare and economics. However, ensuring high-quality quantum software remains critical to its adoption across the industry. As quantum technology moves closer to practical applications, it faces significant challenges. Developers face platform-dependent complexities that make the creation of quantum applications a time-consuming process. In addition, the lack of mature tools further hampers progress and can compromise the quality of service. Objective: The objective of this paper is to address the pressing need for quantum software quality assurance, presenting a solution for defining and using quantum services, by employing classical service engineering techniques and methods. Methods: A process is presented for improving the generation, deployment, and quality assessment of quantum services using an extended OpenAPI Specification and the SonarQube tool. This process also integrates the automatic generation of code for the IBM Quantum provider and its deployment in containers ready for user consumption. Results: After a detailed and individualized evaluation of the 40 implementations of quantum algorithms using the developed environment, the results reveal significant variability in the analyzability of the algorithms. This will serve in the future as a reference and guide for the continuous improvement of quantum algorithms in terms of their performance and efficiency in solving complex problems in various quantum application areas. Conclusions: This research offers a fundamental contribution to the evolution of quantum computing by introducing a comprehensive framework for quantum software quality assurance. The proposed approach not only addresses some of the existing problems in quantum software, but also paves the way for the development of quantum algorithms and their servitization. © 2024 Elsevier B.V.;"Process improvement; Quantum computing; Quantum software engineering; Quantum software quality";"Application programs; Computer software selection and evaluation; Quality of service; Quantum efficiency; Quantum electronics; High quality; Process Improvement; Quantum algorithms; Quantum applications; Quantum Computing; Quantum software engineering; Quantum software quality; Services engineering; Software Quality; Software quality assurance; Software quality";English;Article;Primary Study;Evaluation research;Software Engineering Process;"O artigo tem como objetivo propor um processo sistemático de engenharia de serviços para computação quântica, visando reduzir a lacuna entre os casos de uso reais e a engenharia de software quântica. Os autores partem da constatação de que muitos esforços em computação quântica são guiados por capacidades tecnológicas, sem uma ligação clara com necessidades práticas ou serviços específicos, e propõem uma abordagem baseada em design thinking para conectar esses dois mundos.

Como contribuição, o estudo apresenta um processo em três fases: (1) identificação e análise de casos de uso a partir de problemas reais, (2) avaliação da aplicabilidade da computação quântica aos problemas identificados e (3) transformação dos requisitos em serviços computacionais quânticos potenciais. A abordagem é aplicada a três domínios distintos — detecção de plágio, simulação de processos químicos e previsão de risco de crédito — ilustrando como a metodologia pode orientar o desenvolvimento de software quântico orientado a serviço. O artigo contribui para a estruturação da engenharia de serviços na computação quântica, fornecendo ferramentas conceituais e práticas para alinhar o desenvolvimento de soluções quânticas às demandas reais de mercado.";Os autores partem da constatação de que muitos esforços em computação quântica são guiados por capacidades tecnológicas, sem uma ligação clara com necessidades práticas ou serviços específicos, e propõem uma abordagem baseada em design thinking para conectar esses dois mundos.;Quantum software development;
SCP0123;"Romero-Alvarez J.; Alvarado-Valiente J.; Moguel E.; Garcia-Alonso J.; Murillo J.M.";"Romero-Alvarez, Javier (57567571000); Alvarado-Valiente, Jaime (57567776400); Moguel, Enrique (56586255900); Garcia-Alonso, Jose (55892225800); Murillo, Juan M. (8687210000)";"Quercus Software Engineering Group Universidad de Extremadura, Caceres, Spain; Computing and Advanced Technologies Foundation of Extremadura, Caceres, Spain";A Workflow for the Continuous Deployment of Quantum Services;2023;International Conference on Quantum Software;Quantum Software Engineering;QSW;27;34;2;The rapid advancements in quantum computing have opened new possibilities for solving complex problems in various fields, including cryptography, optimization, and simulation. However, the current approaches to quantum computing often require a deep understanding of quantum hardware and low-level programming languages, making it difficult for software developers to create and deploy quantum services. This paper argues for the adaptation of Service-Oriented Computing principles to quantum computing, enabling a level of abstraction from hardware that allows developers to focus on application development. This will allow developers to create and deploy quantum services, similarly to how Service-Oriented Computing has made it easier to develop traditional software services. This paper presents a Continuous Deployment approach for quantum service development, which involves the generation and deployment of quantum services. To do that, we propose an extension of the OpenAPI specification to generate services implementing a quantum algorithm. To validate the feasibility of the proposed process, we use a variety of quantum algorithm implementations to test their generation and deployment of quantum services. © 2023 IEEE.;"Continuous Deployment; OpenAPI; Quantum Computing; Quantum Services; Quantum Software Development";"Quantum computers; Quantum theory; Complex problems; Continuous deployment; OpenAPI; Optimisations; Quantum algorithms; Quantum Computing; Quantum service; Quantum software development; Service oriented computing; Work-flows; Software design";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Operations;"O artigo tem como objetivo propor um fluxo de trabalho estruturado para o desenvolvimento de aplicações quânticas que considere não apenas os aspectos técnicos, mas também as necessidades dos usuários finais. A motivação parte da constatação de que muitas iniciativas em computação quântica ignoram práticas consolidadas de engenharia de software centradas no usuário, o que pode comprometer a usabilidade, adoção e valor real das soluções desenvolvidas.

Como contribuição, o trabalho apresenta um fluxo de desenvolvimento dividido em seis etapas principais: definição do problema, seleção da técnica quântica, design da interface do usuário, implementação híbrida (quântico-clássica), testes e validação, e implantação. O processo é ilustrado com um estudo de caso na área de otimização, demonstrando como requisitos funcionais e de usabilidade podem ser integrados desde as fases iniciais do projeto. A proposta enfatiza a importância de métodos ágeis, feedback contínuo e colaboração interdisciplinar entre especialistas em computação quântica, desenvolvedores de software e stakeholders, consolidando uma abordagem centrada no usuário para a engenharia de software quântica.";O artigo tem como objetivo propor um fluxo de trabalho estruturado para o desenvolvimento de aplicações quânticas que considere não apenas os aspectos técnicos, mas também as necessidades dos usuários finais. ;Quantum software development process;
SCP0116;"Khan A.A.; Fahmideh M.; Ahmad A.; Waseem M.; Niazi M.; Lahtinen V.; Mikkonen T.";"Khan, Arif Ali (26434399300); Fahmideh, Mahdi (43061009500); Ahmad, Aakash (36760479100); Waseem, Muhammad (57189504629); Niazi, Mahmood (14045585000); Lahtinen, Valtteri (55566985100); Mikkonen, Tommi (57220096141)";"University of Oulu, Finland; University of Southern Queensland, Australia; Lancaster University Leipzig, Germany; Wuhan University, China; King Fahd University of Petroleum and Minerals, Saudi Arabia; Quanscient, Finland; University of Jyväskylä, Finland";Embracing iterations in Quantum software: a vision;2022;International Workshop on Quantum Programming for Software Engineering;Quantum Software Engineering;QP4SE;11;14;4;In today's software engineering, iterations, affordable en masse, form an important part of just about any system. However, not all computing resources are cheap to consume. In High-Performance (HPC) and Quantum Computing (QC), executions can consume considerable amounts of energy and time, which is reserved and used even if the very first steps in the process fail. This means that developers must assume a different attitude towards programming, and aim at error-free software before its execution. This is commonly facilitated using simulators, which are commonplace for both HPC and QC. However the fashion developers advance from one tool to another is ad-hoc, with no established software engineering guidelines, and the final step from simulators to HPC/QC is still a leap of faith, comparable to releasing software. In this paper, we propose a vision where developers can iterate in an agile fashion when developing quantum software. The iterations are defined such that when the solution is still vague in the beginning, computations are interactive and provide instant feedback, thus supporting conceptualization of the software and experimenting with new ideas. When the solution becomes more precise, more expensive computations such as quantum algorithm and hyperparameter optimization are executed in batches.  © 2022 Owner/Author.;"Quantum Computing; Quantum IDE; Quantum software engineering";"Computer software; Quantum theory; Computing resource; Energy; Engineering guidelines; Free software; Leap of faiths; Performance; Performance computing; Quantum Computing; Quantum IDE; Quantum software engineering; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Process;"O artigo propõe uma visão para o desenvolvimento iterativo de software quântico, inspirado nos princípios ágeis usados no desenvolvimento de software clássico. A proposta é criar um ambiente que permita ao desenvolvedor avançar gradualmente da simulação local ao uso de computadores quânticos reais, com ciclos de iteração que variam em complexidade e nível de infraestrutura computacional envolvida. O objetivo central é fornecer uma abordagem prática que equilibre a necessidade de feedback rápido nas fases iniciais com a execução precisa e custosa das etapas finais em ambientes de alta performance e computação quântica.

A principal contribuição do estudo é a estruturação de um modelo de desenvolvimento iterativo para software quântico, composto por quatro ciclos: (1) desenvolvimento conceitual no computador do desenvolvedor; (2) otimização da arquitetura e algoritmos em nuvem; (3) validação computacional e ajuste de hiperparâmetros em HPC; e (4) execução final em computador quântico real. O trabalho também propõe a implementação de um plugin para Eclipse baseado em PyDev, conectado a simuladores, HPC e ambientes quânticos, além de um painel de monitoramento. Essa abordagem visa melhorar a experiência do desenvolvedor e fornecer diretrizes práticas para a engenharia de software quântico baseada em iteração.";"A principal contribuição do estudo é a estruturação de um modelo de desenvolvimento iterativo para software quântico, composto por quatro ciclos: (1) desenvolvimento conceitual no computador do desenvolvedor; (2) otimização da arquitetura e algoritmos em nuvem; (3) validação computacional e ajuste de hiperparâmetros em HPC; e (4) execução final em computador quântico real. ";Quantum software development process;
SCP0174;"Scheerer M.; Klamroth J.; Garhofer S.; Knable F.; Denninger O.";"Scheerer, Max (57198352295); Klamroth, Jonas (57215966342); Garhofer, Simon (58160982500); Knable, Florian (58556597900); Denninger, Oliver (25654650600)";"FZI Research Center for Information Technology, Karlsruhe, Germany; University of Tübingen, Embedded Systems, Tübingen, Germany; Fraunhofer Institute for Industrial Engineering IAO, Stuttgart, Germany";Experiences in Quantum Software Engineering;2023;International Parallel and Distributed Processing Symposium Workshops;Computer Science;IEEE Int. Parallel Distrib. Process. Symp. Workshops, IPDPSW;552;559;1;The field of Quantum Computing (QC) is increasingly becoming applicable for a wide range of computationally intensive problems. Especially Variational Quantum Algorithms (VQA) are promising as they allow dealing with the practical challenges of current quantum devices (also referred to as Noisy Intermediate-Scale Quantum devices). However, developing VQA-based solutions is not a straightforward process but involves several development phases, each with different design decisions and implications. In this paper, we share experiences made in developing VQA-based solutions for two different industrial case studies. Based on the solutions, we extracted five generic development phases quantum engineers must take into consideration when engineering quantum solutions. We have embedded the phases in a model (i.e. a phase model) to show their natural order and to illustrate the phases that require more development iterations. The main objective of this paper is not only to share and discuss our findings and experiences but also to provide the phase model as a starting point or guideline to structure the development process.  © 2023 IEEE.;"quantum computing; quantum development model; Quantum software engineering";"Quantum computers; Quantum theory; 'current; Computationally intensive problems; Development model; Development phasis; Phase model; Quantum algorithms; Quantum Computing; Quantum development model; Quantum device; Quantum software engineering; Software engineering";English;Conference Paper;Primary Study;Personal experience papers;Software Engineering Process;O objetivo é compartilhar experiências e descobertas obtidas durante o desenvolvimento de três soluções baseadas em VQA (Variational Quantum Algorithm) para dois casos de uso industriais (planejamento de rotas e otimização de frota de caminhões). O trabalho extraiu um modelo de fases para estruturar o processo de desenvolvimento, que fornece uma base sólida para o desenvolvimento de uma solução quântica.;Definição de um processo de desenvolimento de software quântico;Quantum software development process;
SCP0027;"El Aoun M.R.; Li H.; Khomh F.; Openja M.";"El Aoun, Mohamed Raed (57424023800); Li, Heng (57216386064); Khomh, Foutse (24724747600); Openja, Moses (57205030030)";Department of Computer Engineering and Software Engineering, Polytechnique Montréal, Montréal, QC, Canada;Understanding Quantum Software Engineering Challenges An Empirical Study on Stack Exchange Forums and GitHub Issues;2021;IEEE International Conference on Software Maintenance and Evolution  ;Software Engineering;Proc. - IEEE Int. Conf. Softw. Maint. Evol., ICSME;343;354;24;With the advance of quantum computing, quantum software becomes critical for exploring the full potential of quantum computing systems. Recently, quantum software engineering (QSE) becomes an emerging area attracting more and more attention. However, it is not clear what are the challenges and opportunities of quantum computing facing the software engineering community. This work aims to understand the QSE-related challenges perceived by developers. We perform an empirical study on Stack Exchange forums where developers post-QSE-related questions answers and Github issue reports where developers raise QSE-related issues in practical quantum computing projects. Based on an existing taxonomy of question types on Stack Overflow, we first perform a qualitative analysis of the types of QSE-related questions asked on Stack Exchange forums. We then use automated topic modeling to uncover the topics in QSE-related Stack Exchange posts and GitHub issue reports. Our study highlights some particularly challenging areas of QSE that are different from that of traditional software engineering, such as explaining the theory behind quantum computing code, interpreting quantum program outputs, and bridging the knowledge gap between quantum computing and classical computing, as well as their associated opportunities.  © 2021 IEEE.;"Issue reports; Quantum computing; Quantum software engineering; Stack Exchange; Topic modeling";"Computation theory; Quantum computers; Quantum optics; Empirical studies; Engineering challenges; Engineering community; Issue report; Post quantum; Quantum Computing; Quantum computing systems; Quantum software engineering; Stack exchange; Topic Modeling; Software engineering";English;Conference Paper;Primary Study;Evaluation research;The Software Engineering in General;"O artigo tem como objetivo identificar e compreender os principais desafios enfrentados por profissionais envolvidos no desenvolvimento de software quântico. Por meio de uma abordagem empírica, os autores coletaram e analisaram dados de entrevistas com especialistas da área, buscando capturar a perspectiva prática sobre as dificuldades técnicas, organizacionais e cognitivas enfrentadas no cotidiano da engenharia de software quântica.

Como contribuição, o estudo revela uma ampla gama de desafios, categorizados em temas como complexidade conceitual da computação quântica, ausência de ferramentas maduras, limitações dos ambientes de execução, escassez de profissionais com formação híbrida e dificuldades na aplicação de práticas clássicas de engenharia de software ao domínio quântico. Os autores destacam ainda a importância da colaboração interdisciplinar e da evolução das plataformas educacionais e de desenvolvimento para mitigar essas barreiras. O trabalho oferece uma base empírica valiosa para a definição de agendas de pesquisa futuras e para o desenvolvimento de soluções que atendam às necessidades reais dos profissionais da área.";Identificar e compreender os principais desafios enfrentados por profissionais envolvidos no desenvolvimento de software quântico. ;Quantum software engineering challenges;
SCP0043;"Haghparast M.; Moguel E.; Garcia-Alonso J.; Mikkonen T.; Murillo J.M.";"Haghparast, Majid (23094283500); Moguel, Enrique (56586255900); Garcia-Alonso, Jose (55892225800); Mikkonen, Tommi (57220096141); Murillo, Juan Manuel (8687210000)";"University of Jyväskylä, Faculty of Information Technology, Jyväskylä, Finland; University of Extremadura, Cáceres, Spain";Innovative Approaches to Teaching Quantum Computer Programming and Quantum Software Engineering;2024;International Conference on Quantum Computing and Engineering;Quantum Computing and/or Information;QCE;251;255;0;Quantum computing is an emerging field that promises to revolutionize various domains, such as simulation optimization, data processing, and more, by leveraging the principles of quantum mechanics. This paper outlines innovative pedagogical strategies developed by university lecturers in Fin-land and Spain for teaching quantum computer programming and quantum software engineering. Our curriculum integrates essential tools and methodologies such as containerization with Docker, Qiskit, PennyLane, and Ocean SDK to provide a comprehensive learning experience. The approach consists of several steps, from introducing the fundamentals of quantum mechanics to hands-on labs focusing on practical use cases. We believe quantum computer programming is an important topic and one that is hard to teach, so having a teaching agenda and guidelines for teaching can be of great help. © 2024 IEEE.;"Containerization; Docker; Ocean SDK; Pennylane; Qiskit; Quantum computer programming; quantum computing; quantum information; quantum programming education; Quantum Serverless; quantum software engineering";"Computer aided software engineering; Computer software; Curricula; Engineering education; Error correction; Ocean engineering; Plastic bottles; Quantum electronics; Quantum optics; Teaching; Containerization; Docker; Ocean SDK; Pennylane; Programming education; Qiskit; Quanta computers; Quantum computer programming; Quantum Computing; Quantum Information; Quantum programming; Quantum programming education; Quantum serverless; Quantum software engineering; Quantum computers";English;Conference Paper;Primary Study;Personal experience papers;Software Engineering Education;"Abordar a necessidade de desenvolver métodos inovadores para ensinar programação e engenharia de software quântico. O objetivo prático é garantir que os alunos ganhem uma compreensão abrangente e se sintam confortáveis programando em computadores quânticos D-Wave por meio de exemplos práticos e análise de respostas da QPU.

O artigo tem como objetivo apresentar uma abordagem curricular estruturada para o ensino de programação quântica e engenharia de software quântica, com base na experiência de professores da Finlândia e da Espanha. O trabalho busca responder à crescente demanda por métodos pedagógicos eficazes nesse campo emergente, integrando fundamentos teóricos com práticas aplicadas por meio do uso de ferramentas como Qiskit, PennyLane, Ocean SDK e técnicas de conteinerização com Docker.

Como contribuição, os autores propõem uma metodologia de ensino dividida em seis etapas, que incluem desde a introdução aos fundamentos da mecânica quântica até a programação com diferentes SDKs, passando pela engenharia de software quântica e pelo uso de ambientes conteinerizados. A originalidade do trabalho está na cobertura equilibrada de múltiplas plataformas, oferecendo aos estudantes uma formação abrangente, com destaque para a integração entre teoria e prática. O artigo também sinaliza esforços futuros voltados à comparação com outras metodologias e à disponibilização dos materiais didáticos, contribuindo para o avanço da educação em computação quântica.";Os autores propuseram uma metodologia de ensino dividida em seis etapas, que incluem desde a introdução aos fundamentos da mecânica quântica até a programação com diferentes SDKs, passando pela engenharia de software quântica e pelo uso de ambientes conteinerizados. ;Quantum software engineering education methodology;Colaboração entre Finlândia e Espanha
SCP0076;"Piattini M.; Serrano M.; Perez-Castillo R.; Petersen G.; Hevia J.L.";"Piattini, Mario (7004203473); Serrano, Manuel (7201394131); Perez-Castillo, Ricardo (34977424500); Petersen, Guido (57215696794); Hevia, Jose Luis (57215681148)";"University of Castilla - la Mancha, Spain; AQuantum";Toward a Quantum Software Engineering;2021;IT Professional;Computer Science;IT Prof;62;66;73;"Nowadays, we are at the dawn of a new age, the quantum era. Quantum computing is no longer a dream; it is a reality that needs to be adopted. But this new technology is taking its first steps, so we still do not have models, standards, or methods to help us in the creation of new systems and the migration of current ones. Given the current state of quantum computing, we need to go back to the path software engineering took in the last century to achieve the new golden age for quantum software engineering. © 1999-2012 IEEE.";;"Quantum computers; Software engineering; New age; Quantum Computing; Quantum theory";English;Article;Primary Study;Opinion papers;The Software Engineering in General;"O artigo tem como objetivo apresentar uma visão geral e consolidada sobre a emergência da Engenharia de Software Quântica (QSE) como uma nova disciplina, destacando a importância de adaptar práticas, processos e ferramentas da engenharia de software tradicional ao contexto da computação quântica. O estudo busca identificar lacunas, propor direções de pesquisa e fomentar a formação de uma comunidade acadêmica e industrial voltada ao desenvolvimento sistemático de software quântico confiável.

Como contribuição, os autores propõem um conjunto de princípios fundamentais para a QSE, que incluem a necessidade de abstrações específicas para o paradigma quântico, integração de processos híbridos quântico-clássicos, uso de métodos formais para especificação e verificação, e desenvolvimento de ferramentas e frameworks apropriados ao novo contexto tecnológico. Além disso, o artigo mapeia áreas-chave que devem ser exploradas — como linguagens de programação, arquiteturas de software, testes, métricas e qualidade — e reforça a importância de fomentar pesquisas interdisciplinares para consolidar a QSE como uma área autônoma e essencial na evolução da computação quântica.";Os autores propõem um conjunto de princípios fundamentais para a QSE, que incluem a necessidade de abstrações específicas para o paradigma quântico, integração de processos híbridos quântico-clássicos, uso de métodos formais para especificação e verificação, e desenvolvimento de ferramentas e frameworks apropriados ao novo contexto tecnológico.;Quantum software engineering education methodology;
WOS1453;"Aparicio-Morales, AM; Moguel, E; Garcia-Alonso, J; Fernandez, A; Bibbo, LM; Murillo, JM";"Aparicio-Morales, alvaro M.; Moguel, Enrique; Garcia-Alonso, Jose; Fernandez, Alejandro; Bibbo, Luis Mariano; Murillo, Juan M.";"Universidad de Extremadura; National University of La Plata";Supply and Demand in the Training of Quantum Software Engineering Workforce;2024;Memoria Investigaciones en Ingeniería;Engineering;MII;248;256;0;Quantum Technologies are experiencing significant growth due to substantial investments made by governments worldwide. These investments aim to enhance global competitiveness in this field and position countries as key players. However, facing the changes of this new paradigm requires an increment in the workforce with specialized expertise in Quantum Technologies, particularly in the area of Quantum Computing. In this paper, we present a concise overview of the current quantum computing education offers and an outline of the current job offer landscape. We highlight essential elements for individuals interested in building a career profile in quantum software engineering, including understanding the professional requirements that experts and companies have established. The main goal of this paper is to offer an overview of the current educational and professional landscape in the quantum software engineering field, empowering the next generation of software engineers to thrive in a quantum technology driven future that will profoundly impact human lives.;"Quantum Computing; Quantum Software Engineering; Education and Training; Competence Framework";;English;Article;Primary Study;Opinion papers;The Software Engineering in General;Fornecer uma visão geral do panorama educacional e profissional atual na área de engenharia de software quântico. O objetivo principal é capacitar a próxima geração de engenheiros de software, destacando a importância de entender os requisitos profissionais e as conexões entre sistemas quânticos e clássicos.;Fornecer uma visão geral do panorama educacional e profissional atual na área de engenharia de software quântico. ;Quantum software engineering education methodology;
SCP0260;"Fürntratt H.; Schnabl P.; Krebs F.; Unterberger R.; Zeiner H.";"Fürntratt, Hermann (24479570000); Schnabl, Paul (58975833300); Krebs, Florian (7006192702); Unterberger, Roland (56111266200); Zeiner, Herwig (57269975800)";"JOANNEUM RESEARCH Forschungsgesellschaft mbH, Graz, Austria; University of Technology, Graz, Austria";Towards Higher Abstraction Levels in Quantum Computing;2024;International Conference on Service-Oriented Computing;Software Engineering;ICSOC;162;173;1;This work is a survey and a position paper towards a higher abstraction in quantum computing (QC) programming frameworks and software development kits (SDKs). Since in 2003, Peter Shor complained about the limited increase in the number of QC algorithms [19], we see an urgent need to bridge the gap between well-established classical physics and quantum physics so that approaches become more intuitive, and - hopefully - more quantum algorithms can be discovered. In service-based hybrid QC frameworks, where algorithms need to be partitioned into quantum and classical tasks, we look at the methods available and the abstractions used. For this paper we have investigated the various levels of abstraction in Silq, Qrisp, OpenQl, Qiskit, Cirq, IonQ, and Ocean, which are originated in the QC domain, as well as CUDA Quantum, rooted in the classical software domain. With the rise of Large Language Models (LLMs), we have also explored the capabilities of LLM-powered tools like GitHub Copilot, which currently represents the top level of abstraction. © The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2024.;"Abstraction; Hybrid Systems; Quantum Computing; Software Engineering";"Abstracting; Quantum computers; Quantum optics; Software design; Abstraction; Abstraction level; Classical physics; Computing algorithms; Language model; Position papers; Programming framework; Programming software; Quantum Computing; Software development kit; Hybrid systems";English;Conference Paper;Primary Study;Opinion papers;Software Design;"Este artigo tem como objetivo explorar e propor níveis mais elevados de abstração na programação para computação quântica, a fim de facilitar o desenvolvimento de algoritmos quânticos e tornar o processo mais acessível e intuitivo. Para isso, os autores realizam uma análise comparativa de diferentes kits de desenvolvimento e frameworks (como Silq, Qrisp, OpenQl, Qiskit, Cirq, entre outros), investigando as estratégias de abstração que cada um adota. O trabalho também se posiciona como um manifesto em direção à integração de princípios da ciência da computação clássica com os desafios da computação quântica, especialmente em sistemas híbridos onde é necessária a colaboração entre dispositivos clássicos e quânticos.

A principal contribuição do artigo reside na proposta de uma taxonomia de níveis de abstração aplicáveis à computação quântica, desde descrições textuais até abstrações de algoritmos e controle de fluxo em sistemas híbridos. Além disso, os autores fornecem uma análise abrangente de nove SDKs/quadro de softwares quânticos, evidenciando suas capacidades, limitações e tendências no suporte à abstração. O artigo também destaca o papel emergente de ferramentas baseadas em modelos de linguagem (LLMs), como o GitHub Copilot, como o atual ponto máximo de abstração, e argumenta que a evolução dessas ferramentas pode democratizar o desenvolvimento quântico e acelerar descobertas futuras.";A principal contribuição do artigo reside na proposta de uma taxonomia de níveis de abstração aplicáveis à computação quântica, desde descrições textuais até abstrações de algoritmos e controle de fluxo em sistemas híbridos. ;Quantum software engineering taxonomy;
SCP0138;De Stefano M.;De Stefano, Manuel (57219489857);SeSa Lab, University of Salerno, Fisciano, Italy;An Empirical Study on the Current Adoption of Quantum Programming;2022;International Conference on Software Engineering;Software Engineering;ICSE;310;312;1;"Quantum computing is no longer just a scientific curiosity; it is rapidly evolving into a commercially viable technology that has the potential to surpass the limitations of classical computation. As a result of this transition, a new discipline known as quantum software engineering has emerged, which is needed to describe unique methodologies for developing large-scale quantum applications. In the pursue of building this new body of knowledge, we undertake a mining study to elicit the purposes quantum programming is being used for, and steer further research. © 2022 IEEE.";;"Quantum computers; 'current; Body of knowledge; Empirical studies; Large-scales; Quantum applications; Quantum Computing; Quantum programming; Application programs";English;Conference Paper;Primary Study;Proposal of solution;The Software Engineering in General;"O artigo tem como objetivo investigar empiricamente como as tecnologias de programação quântica estão sendo utilizadas na prática, a partir da análise de repositórios abertos no GitHub. A motivação principal é suprir a lacuna de estudos empíricos que revelem os propósitos atuais da programação quântica e, com isso, direcionar futuras pesquisas na área de Engenharia de Software Quântica (QSE).

A principal contribuição do estudo é a elaboração de uma taxonomia com seis categorias de uso (como exercícios, bibliotecas, pesquisa e ensino), baseada na análise de 731 repositórios que utilizam Qiskit, Cirq ou Q#. Os resultados mostram que a maioria dos repositórios são voltados para exercícios e aprendizado pessoal, seguidos por projetos de bibliotecas/quadro de ferramentas e código de apoio à pesquisa. Além disso, o artigo evidencia o estágio inicial de maturidade da área e sugere que a QSE pode contribuir significativamente na estruturação de práticas e processos para o desenvolvimento de software quântico.";A principal contribuição do estudo é a elaboração de uma taxonomia com seis categorias de uso (como exercícios, bibliotecas, pesquisa e ensino), baseada na análise de 731 repositórios que utilizam Qiskit, Cirq ou Q#.;Quantum software engineering taxonomy;
SCP0343;"Hans J.; Groppe S.";"Hans, Julian (58042199600); Groppe, Sven (22234205300)";University of Lübeck, Schleswig-Holstein, Lubeck, Germany;Silq2Qiskit - Developing a quantum language source-to-source translator;2022;International Conference on Computer Science and Software Engineering;Software Engineering;CSSE;581;590;2;Quantum Computers are quickly becoming capable of solving certain tasks substantially faster than classical computers and the promise of quantum-driven advancements in research and economy continues to accelerate the development of quantum technology. However, most software development for quantum computers relies on the tedious manual implementation of quantum circuits on a very low level of abstraction, with tools such as the prominent IBM Qiskit SDK. In 2020, Silq, a quantum language to enable more intuitive and robust quantum development, was presented. While it substantially simplifies the write- and readability of quantum programs, Silq Code can only be run through its simulator on classical hardware. In comparison, Qiskit and its close integration with IBM's Quantum Experience even enable users to run and evaluate quantum programs on physical quantum hardware. This paper proposes an automatic source-to-source translator for basic Silq Code and the extension of Qiskit by core concepts of Silq's abstraction layers, such as Quantum Indexing and Quantum Control Flow. © 2022 ACM.;"Quantum Language; Source-to-Source translation";"Abstracting; Computer hardware; Program translators; Qubits; Translation (languages); Abstraction layer; Close integration; Control-flow; Quanta computers; Quantum circuit; Quantum control; Quantum language; Quantum technologies; Source-to-source translations; Source-to-source translators; Software design";English;Conference Paper;Primary Study;Evaluation research;Software Engineering Models and Methods;"O artigo tem como objetivo apresentar o desenvolvimento de um tradutor fonte-a-fonte que converte programas escritos em Silq, uma linguagem de programação quântica de alto nível, para Qiskit, um dos frameworks mais utilizados na implementação de circuitos quânticos. A proposta visa facilitar o uso prático de linguagens mais abstratas e seguras como o Silq, permitindo sua execução em plataformas compatíveis com o Qiskit e promovendo a interoperabilidade entre diferentes linguagens e ferramentas no ecossistema de computação quântica.

Entre as principais contribuições, os autores desenvolvem o Silq2Qiskit, um tradutor automático que utiliza uma abordagem baseada em árvores sintáticas abstratas (AST) e análise semântica para transformar código Silq em equivalente funcional em Qiskit. O trabalho descreve o mapeamento detalhado entre construções das duas linguagens, incluindo suporte a estruturas de controle e funções compostas, e apresenta testes de validação com exemplos reais. O estudo destaca ainda as limitações atuais do tradutor e aponta caminhos para evolução, como maior suporte a abstrações algébricas, contribuindo para o avanço da engenharia de software quântica com ferramentas de compilação mais flexíveis e acessíveis.";Entre as principais contribuições, os autores desenvolvem o Silq2Qiskit, um tradutor automático que utiliza uma abordagem baseada em árvores sintáticas abstratas (AST) e análise semântica para transformar código Silq em equivalente funcional em Qiskit.;Quantum software generation;
SCP0398;"Singhal K.; Hietala K.; Marshall S.; Rand R.";"Singhal, Kartik (57215650214); Hietala, Kesha (57202457493); Marshall, Sarah (57220087663); Rand, Robert (55363277700)";"University of Chicago, United States; University of Maryland, United States; Microsoft Quantum, United States";Q# as a Quantum Algorithmic Language;2023;Electronic Proceedings in Theoretical Computer Science;Computer Science;Electron. Proc. Theor. Comput. Sci., EPTCS;170;191;0;Q# is a standalone domain-specific programming language from Microsoft for writing and running quantum programs. Like most industrial languages, it was designed without a formal specification, which can naturally lead to ambiguity in its interpretation. We aim to provide a formal language definition for Q#, placing the language on a solid mathematical foundation and enabling further evolution of its design and type system. This paper presents λQ#, an idealized version of Q# that illustrates how we may view Q# as a quantum ALGOL (algorithmic language). We show the safety properties enforced by λQ#'s type system and present its equational semantics based on a fully complete algebraic theory by Staton. © K. Singhal, K. Hietala, S. Marshall, and R. Rand This work is licensed under the Creative Commons Attribution License.;;"Problem oriented languages; Semantics; Algebraic theories; Design systems; Domain-specific programming languages; Equational semantics; Mathematical foundations; MicroSoft; Safety property; Type systems; Algorithmic languages";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo tem como objetivo explorar o uso da linguagem Q# como uma alternativa eficaz para a implementação de algoritmos quânticos, destacando suas características específicas voltadas ao controle de qubits, modularidade, e integração com o ecossistema .NET. A proposta central é apresentar Q# como uma linguagem que permite uma abordagem estruturada ao desenvolvimento de algoritmos quânticos, com ênfase na clareza do código e na separação entre lógica quântica e controle clássico.

Entre as principais contribuições, o estudo demonstra como Q# pode ser usada para implementar algoritmos conhecidos, como Deutsch-Jozsa, Grover e Shor, evidenciando a expressividade da linguagem na construção de operações quânticas e seu suporte à programação modular. O artigo também analisa a sintaxe e os recursos da linguagem, comparando-os com outras linguagens do domínio quântico, e discute o potencial do Q# no ensino e na pesquisa em computação quântica, reforçando seu papel como ferramenta de alto nível para desenvolvimento de algoritmos em ambientes híbridos.";O artigo tem como objetivo explorar o uso da linguagem Q# como uma alternativa eficaz para a implementação de algoritmos quânticos, destacando suas características específicas voltadas ao controle de qubits, modularidade, e integração com o ecossistema .NET. ;Quantum software language;
SCP0307;"Wang C.; Chen J.; Ge J.; Wu X.; Qu Q.; Luo L.";"Wang, Chao (57263000100); Chen, Jingwei (56508987700); Ge, JianXin (57614110600); Wu, XueZhong (58630709800); Qu, QianQian (58630172400); Luo, Le (56071306500)";"Shanghai Key Laboratory of Computer Software Testing and Evaluating, Shanghai Development Center of Computer Software Technology, Shanghai, China; Qudoor Technologies, Inc., Hefei, China; Software Engineering of Computer and Information Engineering College, Shanghai Polytechnic University, Shanghai, China; Qudoor Technologies Inc., School of Physics and Astronomy, Sun Yat-Sen University, Zhuhai, China";Research on Quality Model for Quantum Simulator Software;2023;International Winter Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing;Software Engineering;ACIS Int. Winter Conf. Softw. Eng., Artif. Intell., Netw. Parallel/Distrib. Comput., SNPD-Winter;134;140;1;In recent years, the demand for arithmetic power from all walks of life is growing, especially the increasing popularity of AIGC, which makes people realize that huge technological progress cannot be made without the support of large arithmetic power. Quantum computing may bring a leap in computing power and become a 'trigger' and 'catalyst' to accelerate the development of science and technology innovation, and its technical development trend and application prospects have become a hot issue of concern, and quantum simulators are a very important part of the development process. The development of quantum simulators is a very important part of the process. However, due to the lack of systematic evaluation theories and methods, it is difficult to quantify and analyze the quality of the increasing number of simulators on the market, which may hinder researchers from practicing their quantum algorithms objectively or developing quantum technologies. For these reasons, this paper proposes a quality model for quantum simulator software, which reflects the quality characteristics of simulators in seven aspects, such as functionality and performance efficiency, and selects some simulators for experimental validation of the proposed model to prove its rationality. © 2023 IEEE.;"Evaluation; Quantum Simulator; Software Quality";"Behavioral research; Computation theory; Computer software selection and evaluation; Computing power; Quantum computers; Computing power; Evaluation; Power; Quality modeling; Quantum Computing; Quantum simulators; Simulator software; Software Quality; Technological progress; ]+ catalyst; Quality control";English;Conference Paper;Primary Study;Proposal of solution;Software Quality;"O presente estudo propõe um modelo de qualidade específico para softwares simuladores de computação quântica, fundamentado nos critérios estabelecidos pela norma ISO/IEC 25010:2011, mas adaptado às particularidades dessas ferramentas. Diante da carência de métodos sistemáticos para avaliar simuladores quânticos e do crescimento do número dessas ferramentas no mercado, o trabalho busca preencher essa lacuna, fornecendo uma estrutura que permita mensurar aspectos como funcionalidade, desempenho, usabilidade, confiabilidade, segurança, manutenibilidade e qualidade da documentação do usuário, com o intuito de orientar pesquisadores e desenvolvedores na escolha e aprimoramento dessas soluções.

A principal contribuição do estudo é o desenvolvimento de um modelo de avaliação abrangente e adaptado às especificidades dos simuladores quânticos, incluindo métricas e pesos definidos para cada dimensão da qualidade. Além da proposta conceitual, os autores aplicaram o modelo a três simuladores amplamente utilizados — QuTrunk, ProjectQ e QuEST — por meio de experimentos com o algoritmo de Grover, demonstrando sua aplicabilidade prática e identificando pontos fortes e limitações em cada ferramenta. Com isso, o trabalho avança na direção da padronização da avaliação de qualidade de simuladores quânticos e fornece subsídios para a evolução de ferramentas mais robustas e eficazes para a pesquisa e o desenvolvimento em computação quântica.";O presente estudo propõe um modelo de qualidade específico para softwares simuladores de computação quântica, fundamentado nos critérios estabelecidos pela norma ISO/IEC 25010:2011, mas adaptado às particularidades dessas ferramentas.;Quantum software maturity model;
SCP0659;"Shoran P.; Sinha A.; Mahmood H.R.; Sharma V.; Jha P.; Kumar B.; Alkhayyat A.";"Shoran, Preety (58100727600); Sinha, Anurag (57561268800); Mahmood, Hassan Raza (57215095751); Sharma, Vandana (58957195700); Jha, Pooja (56656033300); Kumar, Biresh (57684512200); Alkhayyat, Ahmed (59268596900)";"Dr. Akhilesh das Gupta Institure of Technology and Management, India; Ignou, Department of Cs and It, New Delhi, India; Fast Nuces Cfd Campus, Punjab, Pakistan; Christ University, Department of Computer Science, Delhi NCR, India; Amity University Jhrakhand, Department of Computer Science An Engineering, Ranchi, India; The Islamic University, College of Technical Engineering, Najaf, Iraq";Enhancing Software Cost Estimation using COCOMO Cost Driver Features with Battle Royale Optimization and Quantum Ensemble Meta-Regression Technique;2023;International Conference on Computing Communication and Networking Technologies;Computer Science;Int. Conf. Comput. Commun. Netw. Technol., ICCCNT;0;0;2;This research suggests a unique method for improving software cost estimates by combining Battle Royale Optimisation (BRO) and Quantum Ensemble Meta-Regression Technique (QEMRT) with COCOMO cost driver characteristics. The strengths of these three strategies are combined in the suggested strategy to increase the accuracy of software cost estimation. The COCOMO model is a popular software cost-estimating methodology that considers several cost factors. BRO is a metaheuristic algorithm that mimics the process of the fittest people being selected naturally and was inspired by the Battle Royale video game. The benefits of quantum computing and ensemble learning are combined in the machine learning approach known as QEMRT. Using a correlation-based feature selection technique, we first identified the most important COCOMO cost drivers in our study. To get the best-fit model, we then used BRO to optimize the weights of these cost drivers. To further increase the estimation's accuracy, QEMRT was utilized to meta-regress the optimized model. The suggested method was tested on two datasets for software cost estimating that are available to the public, and the outcomes were compared with other cutting-edge approaches. The experimental findings demonstrated that our suggested strategy beat the other approaches in terms of accuracy, robustness, and stability. In conclusion, the suggested method offers a viable strategy for improving the accuracy of software cost estimation, which might help software development organizations by improving project planning and resource allocation. © 2023 IEEE.;"Battle Royale Optimization; BRO; COCOMO model; cost drivers; cost estimation; machine learning; QEMRT; Quantum Ensemble Meta-Regression Technique; software";"Cost benefit analysis; Cost estimating; Learning systems; Machine learning; Quantum computers; Software design; Software testing; Battle royale optimization; COCOMO model; Cost drivers; Cost estimations; Machine-learning; Optimisations; Quantum ensemble meta-regression technique; Regression techniques; Software; Optimization";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Economics;"O artigo tem como objetivo melhorar a estimativa de custo de projetos de software quântico por meio da aplicação de técnicas de aprendizado de máquina. A proposta parte da premissa de que métodos tradicionais de estimativa de custo não são adequados para o contexto emergente do desenvolvimento de software quântico, devido à sua complexidade, incertezas tecnológicas e escassez de dados históricos.

As contribuições incluem a criação de um modelo de aprendizado de máquina capaz de prever o esforço necessário para projetos de software quântico com base em variáveis como número de qubits, portas utilizadas, complexidade algorítmica e métricas de software. O estudo também apresenta uma base de dados sintética para treinamento e teste do modelo, considerando cenários realistas do desenvolvimento quântico. Além disso, o trabalho oferece diretrizes para a futura coleta e análise de dados reais, abrindo caminho para o uso mais robusto de técnicas de engenharia de software orientadas por dados no domínio quântico.";O artigo tem como objetivo melhorar a estimativa de custo de projetos de software quântico por meio da aplicação de técnicas de aprendizado de máquina. ;Quantum software metrics;
SCP0064;Zhao J.;Zhao, Jianjun (35786932000);Kyushu University, Japan;Some Size and Structure Metrics for Quantum Software;2021;International Workshop on Quantum Software Engineering;Quantum Software Engineering;QSE;22;27;10;Quantum software plays a critical role in exploiting the full potential of quantum computing systems. As a result, it is drawing increasing attention recently. As research in quantum programming reaches maturity with a number of active research and practical products, software metric researchers need to focus on this new paradigm to evaluate it rigorously and quantitatively. As the first step, this paper proposes some basic metrics for quantum software, which mainly focus on measuring the size and structure of quantum software. These metrics are defined at different abstraction levels to represent various size and structure attributes in quantum software explicitly. The proposed metrics can be used to evaluate quantum software from various viewpoints.  © 2021 IEEE.;"quantum software design; quantum software engineering; Quantum software metrics";"Quantum computers; Abstraction level; Quantum computing systems; Quantum programming; Software metrices; Software engineering";English;Conference Paper;Primary Study;Proposal of solution;Software Quality;"O artigo tem como objetivo propor um conjunto inicial de métricas específicas para mensurar o tamanho e a estrutura de software quântico, adaptando e estendendo abordagens clássicas da engenharia de software para o contexto emergente da computação quântica. A proposta visa oferecer instrumentos que permitam avaliar quantitativamente a complexidade de programas quânticos em diferentes níveis de abstração, desde o código até o design arquitetural e a modelagem.

Como contribuição, o estudo apresenta métricas divididas em três categorias principais: tamanho do código-fonte quântico, complexidade estrutural com base em grafos de fluxo de controle e características arquiteturais e de modelagem específicas ao paradigma quântico. Métricas clássicas como LOC, Halstead, McCabe e Henry & Kafura são adaptadas para capturar elementos quânticos como qubits, portas lógicas, medições e conectores híbridos entre componentes clássicos e quânticos. Ao fornecer uma base conceitual e operacional para a análise de qualidade de software quântico, o artigo contribui para a consolidação da engenharia de software quântica como disciplina estruturada e orientada por métricas.";O artigo tem como objetivo propor um conjunto inicial de métricas específicas para mensurar o tamanho e a estrutura de software quântico, adaptando e estendendo abordagens clássicas da engenharia de software para o contexto emergente da computação quântica.;Quantum software metrics;
SCP0069;"Fortunato D.; Campos J.; Abreu R.";"Fortunato, Daniel (57219898042); Campos, José (35306564600); Abreu, Rui (57209112913)";"Faculty of Engineering, The University of Porto, Porto, Portugal; INESC-ID, Lisboa, Portugal; LASIGE, Faculty of Science, The University of Lisbon, Lisboa, Portugal";Gate Branch Coverage: A Metric for Quantum Software Testing;2024;International Workshop on Quantum Software Engineering: The Next Evolution;Quantum Software Engineering;QSE-NE;15;18;0;The inherent lack of technologies and knowledge from software developers about the intricacies of quantum physics constitutes a heavy hindrance in the development of correct quantum software. Therefore, quantum computing testing techniques are currently under heavy research. This paper proposes a new testing metric, Gate Branch Coverage. This metric aims to provide insight into the verification process status of quantum programs and enhance the quantum testing process overall. Gate Branch Coverage explores the properties of quantum controlled-type gates, measuring their number of exercised branches during the execution of quantum programs. © 2024 Copyright held by the owner/author(s).;"Quantum Computing; Quantum Gate Branch Coverage; Quantum Software Testing";"Quantum electronics; Quantum optics; Software design; Software testing; Verification; Branch-coverage; Quantum Computing; Quantum gate branch coverage; Quantum gates; Quantum physics; Quantum software testing; Software developer; Software testings; Testing metrics; Testing technique; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;Software Quality;Propor a Gate Branch Coverage (GBC), uma nova métrica adaptada para circuitos quânticos. O objetivo é formalizar o cálculo e demonstrar a instrumentação de circuitos para calcular a GBC, a fim de ajudar desenvolvedores a melhorar a qualidade e confiabilidade do código.;Propor a Gate Branch Coverage (GBC), uma nova métrica adaptada para circuitos quânticos. O objetivo é formalizar o cálculo e demonstrar a instrumentação de circuitos para calcular a GBC, a fim de ajudar desenvolvedores a melhorar a qualidade e confiabilidade do código.;Quantum software metrics;
SCP0093;Soubra H.;Soubra, Hassan (54917468400);Ecole Centrale d'Electronique-ECE Lyon, 24 rue Salomon Reinach, Lyon, 69007, France;Quantum Software Sizing: Contemporary Interpretations and Approaches;2024;International Workshop on Software Measurement and Conference on Software Measurement Product Measurement;Software Engineering;IWSM-MENSURA;0;0;0;Conventional software sizing approaches initially centered on metrics like lines of code, gradually transitioning to more refined measurements such as function points. However, these approaches could not be directly applicable to quantum software due to the fundamental differences between classical and quantum computing paradigms. In quantum software sizing, factors such as the number of qubits required, the depth of quantum circuits, the connectivity requirements of qubits, the error rates of quantum gates, and the complexity of the quantum algorithms play crucial roles. Additionally, considerations such as the choice of quantum programming language, quantum hardware platform, and optimization techniques also impact the overall size estimation. This paper provides an overview of quantum software sizing, highlighting initial exploration and classification of sizing measurement concepts of Quantum Software. © 2024 Copyright for this paper by its authors.;"Measurement; Metrics; Quantum Software; Quantum Software Engineering; Quantum Software Sizing";"Quantum electronics; Quantum optics; Size determination; Strain measurement; Classical computing; Computing paradigm; Function point; Line of codes; Metric; Quantum circuit; Quantum Computing; Quantum software; Quantum software engineering; Quantum software sizing; Qubits";English;Conference Paper;Primary Study;Opinion papers;Software Quality;"O artigo tem como objetivo investigar e organizar abordagens contemporâneas para estimar o tamanho de software quântico, considerando as especificidades que diferenciam este domínio do software clássico. A proposta busca mapear métricas relevantes como volume quântico, conectividade entre qubits, taxas de erro e tamanho funcional, discutindo como esses elementos impactam diretamente no desenvolvimento, otimização e gerenciamento de projetos de software quântico. A partir disso, o trabalho apresenta uma análise sistemática das características que influenciam a mensuração do tamanho do software, incluindo também a relação estreita entre hardware e software quântico.

As principais contribuições do estudo incluem uma categorização detalhada de métricas aplicáveis à engenharia de software quântico, como Q-COSMIC, circuitos quânticos, qualidade de código híbrido e métricas específicas para QPUs, além da proposta de novas interpretações para estimativas de tamanho que integrem aspectos de confiabilidade, escalabilidade e manutenibilidade. Ao consolidar essas abordagens, o artigo fornece subsídios importantes para o avanço da engenharia de software quântico, propondo caminhos para padronização de medidas, comparação entre implementações e suporte a decisões estratégicas no desenvolvimento de soluções computacionais quânticas.";O artigo tem como objetivo investigar e organizar abordagens contemporâneas para estimar o tamanho de software quântico, considerando as especificidades que diferenciam este domínio do software clássico. ;Quantum software metrics;
SCP0225;"Díaz Muñoz A.; Rodríguez Monje M.; Piattini Velthuis M.G.";"Díaz Muñoz, Ana (58859309300); Rodríguez Monje, Moisés (59297184300); Piattini Velthuis, Mario Gerardo (7004203473)";"Institute of Technologies and Information Systems & Escuela Superior de Informática, University of Castilla-La Mancha, Ciudad Real, 13071, Spain; AQCLab Software Quality, Ciudad Real, 13500, Spain";Towards a set of metrics for hybrid (quantum/classical) systems maintainability;2024;Journal of Universal Computer Science;Computer Science;J. Univers. Comput. Sci.;25;48;6;Given the rapid evolution that has taken place in recent years in the software industry, and along with it the emergence of quantum software, there is a need to design an environment for measuring quality metrics for hybrid, classic-quantum software. In order to measure and evaluate the quality of classic software, there are models and standards, among which ISO/IEC 25000 stands out, which proposes a set of quality characteristics such as maintainability. However, there is currently no consensus for the measurement and evaluation of quantum software quality. In this paper we propose a series of adaptations to “classic” metrics, as well as a set of new measurements for hybrid maintainability. Finally, a first prototype of a measurement tool developed as a SonarQube plugin, capable of measuring these metrics in quantum developments, is also presented. © 2024, IICM. All rights reserved.;"ISO/IEC 25000; maintainability; quantum software; software assessment; software quality";;English;Article;Primary Study;Opinion papers;Software Quality;"O artigo tem como objetivo propor uma abordagem baseada em princípios da Engenharia de Software Experimental (ESE) para estudar, validar e evoluir métodos, ferramentas e práticas no contexto da Engenharia de Software Quântica (QSE). A proposta surge da percepção de que, assim como a engenharia de software clássica se beneficiou de uma cultura empírica sólida, a área emergente da QSE também demanda uma estrutura experimental para apoiar sua consolidação científica.

Como contribuição, os autores delineiam direções iniciais para o uso de métodos empíricos na QSE, destacando a importância de experimentos controlados, estudos de caso e revisões sistemáticas para fundamentar decisões técnicas. O trabalho propõe a adaptação de práticas da ESE para contextos quânticos, como a avaliação de ferramentas e técnicas com base em critérios de validade interna e externa. Ao fazer isso, o artigo oferece um ponto de partida teórico e metodológico para estruturar a produção científica na área de QSE de forma mais robusta e confiável.";O artigo propõem um conjunto de métricas para manutenção de sistemas híbridos. ;Quantum software metrics;
SCP0022;"Pérez-Castillo R.; Jiménez-Navajas L.; Piattini M.";"Pérez-Castillo, Ricardo (34977424500); Jiménez-Navajas, Luis (57219055630); Piattini, Mario (7004203473)";"University of Castilla-La Mancha, Talavera de la Reina, Spain; University of Castilla-La Mancha, Ciudad Real, Spain";Modelling Quantum Circuits with UML;2021;International Workshop on Quantum Software Engineering;Quantum Software Engineering;QSE;7;12;22;None of the quantum computing applications imagined will ever become a reality without quantum software. Quantum programmes have, to date, been coded with ad hoc techniques. Researchers in the field of quantum software engineering are, therefore, now demanding more systematic techniques and methods with which to produce software with sufficient quality. One of the challenges and lessons learned from classic software engineering is the need for high-level, abstract and technology-independent representations with which to design software before it is coded. This paper specifically addresses this challenge for quantum software design. Since UML is a well-proven modelling language that has been widely employed by industry for some time, we propose a UML extension for the representation of quantum algorithms. Our proposal comprises the definition of a UML profile based on various stereotypes that can be applied to the existing UML activity diagrams in order to represent quantum circuits. The advantage of this representation is that UML quantum circuits can be interrelated with other UML elements and diagrams, which will make it possible to represent various concerns and viewpoints of the so-called hybrid information systems. This will consequently enable classical and quantum aspects to be modelled together in integrated designs in a technological-agnostic manner that is already supported by a considerable number of existing software design tools.  © 2021 IEEE.;"Activity diagrams; Quantum algorithms; Quantum Computing; Quantum Software Engineering; UML";"Application programs; Modeling languages; Quantum computers; Quantum theory; Timing circuits; Ad-hoc techniques; Design softwares; Hybrid information system; Integrated designs; Quantum algorithms; Quantum Computing; Technology independent; UML activity diagrams; Software design";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo tem como objetivo explorar a viabilidade de utilizar a Linguagem de Modelagem Unificada (UML) para representar circuitos quânticos, visando oferecer uma ponte entre práticas consolidadas da engenharia de software e as demandas específicas do desenvolvimento quântico. Os autores buscam adaptar a UML para capturar conceitos fundamentais da computação quântica, como qubits, portas quânticas e medições, promovendo uma abordagem mais estruturada e compreensível para modelagem de software quântico.

Como contribuição, o estudo propõe um perfil UML estendido, denominado Quantum UML Profile, que permite modelar circuitos quânticos por meio da definição de estereótipos específicos como <>, <>, <>, <> e <>. A abordagem é validada com a modelagem do algoritmo de teletransporte quântico, demonstrando que é possível representar circuitos complexos de forma visual, usando UML como uma ferramenta de design, documentação e potencial integração com fluxos de desenvolvimento híbridos. O trabalho contribui, portanto, para a aproximação entre práticas clássicas de engenharia de software e o desenvolvimento de aplicações quânticas, favorecendo a reutilização, padronização e comunicação entre equipes técnicas.";Os autores adaptaram a UML para capturar conceitos fundamentais da computação quântica, como qubits, portas quânticas e medições, promovendo uma abordagem mais estruturada e compreensível para modelagem de software quântico.;Quantum software modeling;
SCP0142;"Ishikawa F.; Saito S.";"Ishikawa, Fuyuki (33367760100); Saito, Shinobu (36683339500)";"National Institute of Informatics, Chiyoda-ku, Tokyo, Japan; NTT Computer and Data Science Laboratories, Musashino-shi, Tokyo, Japan";Model-Based Framework for Continuous Adaptation and Evolution of Quantum-Classical Hybrid Systems;2024;International Conference on the Art, Science, and Engineering of Programming;Software Engineering;Program. Companion - Proc. Int. Conf. Art, Sci., Eng. Program.;118;125;0;Although quantum computing has been attracting increasing attention, hardware restrictions are tight in current implementations. Intensive design exploration is therefore essential to match requirements, such as the problem scale and acceptable error rate, with potential designs to combine quantum computing and classical computing. The design decision made in this way is often fragile as it is sensitive to the problem scale as well as still evolving quantum services. We need continuous design decision, or adaptation and evolution, given changes in requirements or environments. In this paper, we present a framework for model-based engineering to support the continuous adaptation and evolution of quantum-classical hybrid systems. Modeling in our framework involves not only potential designs, but also rationale or evidence of design decision, which often requires simulation and experiments. This focus allows for tracing and analyzing whether the past decision is still valid or not, or whether there is uncertainty and we need further simulation and experiments. The usage of the framework is demonstrated with an example problem from steel manufacturing. © 2024 Copyright held by the owner/author(s).;"DevOps; Hybrid Quantum Computing; Models@run.time; Quantum Software Engineering; Self-Adaptive Systems; Services Computing";"Adaptive systems; Design; Quantum computers; Quantum optics; Uncertainty analysis; Design decisions; Hybrid quantum computing; Model@run.; Problem scale; Quantum Computing; Quantum software engineering; Quantum-classical; Self-adaptive system; Service computing; Time; Software engineering";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo tem como objetivo propor um framework baseado em modelagem para apoiar o desenvolvimento de sistemas híbridos clássico-quânticos. A proposta busca lidar com os desafios de abstração, integração e complexidade no desenvolvimento desses sistemas, utilizando uma abordagem orientada a modelos para facilitar a colaboração entre especialistas em computação clássica e quântica ao longo de todo o ciclo de vida do software.

Como contribuição, o estudo apresenta uma arquitetura de framework composta por quatro camadas: modelagem conceitual, modelagem funcional, modelagem de plataforma e geração de código. Cada camada possui ferramentas e abstrações específicas para representar funcionalidades, fluxos de dados e interações entre componentes clássicos e quânticos. O framework permite que modelos sejam refinados progressivamente até a implementação, com suporte para geração automática de código e simulações. A abordagem é demonstrada por meio de um estudo de caso baseado no algoritmo de Grover, evidenciando sua aplicabilidade e potencial para aumentar a produtividade, reutilização e qualidade no desenvolvimento de sistemas híbridos.";O artigo tem como objetivo propor um framework baseado em modelagem para apoiar o desenvolvimento de sistemas híbridos clássico-quânticos. ;Quantum software modeling;
SCP0186;"Kinanen O.; Muñoz-Moller A.D.; Stirbu V.; Mikkonen T.";"Kinanen, Otso (59242193000); Muñoz-Moller, Andrés D. (57311387400); Stirbu, Vlad (57249175700); Mikkonen, Tommi (57220096141)";University of Jyväskylä, Jyväskylä, Finland;Improving Quantum Developer Experience with Kubernetes and Jupyter Notebooks;2024;International Conference on Quantum Computing and Engineering;Quantum Computing and/or Information;QCE;245;250;0;Quantum computing proposes a revolutionary paradigm that can radically transform numerous scientific and industrial application domains. To realize this promise, new capabilities need software solutions that are able to effectively harness its power. However, developers face significant challenges when developing quantum software due to the high computational demands of simulating quantum computers on classical systems. In this paper, we investigate the potential of using an accessible and cost-efficient manner remote computational capabilities to improve the experience of quantum software developers. © 2024 IEEE.;"developer experience; Jupyter notebook; Quantum software; software development";"Application programs; Laptop computers; Quantum efficiency; Quantum electronics; Software design; Applications domains; Classical systems; Computational demands; Developer experience; Jupyter notebook; Power; Quanta computers; Quantum Computing; Quantum software; Software solution; Quantum computers";English;Conference Paper;Primary Study;Personal experience papers;Software Engineering Operations;"O artigo tem como objetivo principal melhorar a experiência de desenvolvimento de software quântico ao propor uma solução que utiliza clusters Kubernetes, chamados de Qubernetes, para executar rotinas quânticas remotamente. A proposta envolve o desenvolvimento de um kernel personalizado do Jupyter, chamado q8s_kernel, que permite aos desenvolvedores utilizar recursos computacionais avançados, como simuladores acelerados por GPU, sem a necessidade de configurar manualmente ambientes complexos ou acessar diretamente hardware quântico caro ou escasso.

A principal contribuição do trabalho consiste na criação de uma arquitetura baseada em Kubernetes que integra o Jupyter Notebook a ambientes de execução remotos para simulações quânticas, permitindo alternância fluida entre ambientes locais e remotos. A solução promove melhorias significativas em termos de escalabilidade, usabilidade e custo-benefício, ao utilizar GPUs sob demanda de forma eficiente e automatizada. Além disso, o estudo valida a abordagem por meio de experimentos com diferentes configurações de hardware e cenários reais de uso, demonstrando a viabilidade técnica e a acessibilidade do sistema proposto para desenvolvedores de software quântico.";O artigo tem como objetivo principal melhorar a experiência de desenvolvimento de software quântico ao propor uma solução que utiliza clusters Kubernetes, chamados de Qubernetes, para executar rotinas quânticas remotamente.;Quantum software operations;
SCP0195;"Magaz-Romero S.; Mosqueira-Rey E.; Alvarez-Estevez D.; Moret-Bonillo V.";"Magaz-Romero, Samuel (57405632600); Mosqueira-Rey, Eduardo (6507621456); Alvarez-Estevez, Diego (25931333600); Moret-Bonillo, Vicente (7004317776)";Universidade da Coruña, CITIC, Campus de Elviña, A Coruña, 15071, Spain;Quantum Factory Method: A Software Engineering Approach to Deal with Incompatibilities in Quantum Libraries;2023;International Conference on Computational Science;Computer Science;ICCS;64;71;1;The current context of Quantum Computing and its available technologies present an extensive variety of tools and lack of methodologies, leading to incompatibilities across platforms, which end up as inconsistencies in the developed solutions. We propose a design called Quantum Factory Method, based on software engineering and design patterns, to solve these issues by integrating different quantum platforms in the same development. We provide example implementations whose results prove the suitability of the design in different cases, and conclude on how this approach can be expanded for future work. © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023.;"Design Patterns; Quantum Computing; Rule-Based Systems; Software Engineering; Uncertainty";"Design; Knowledge based systems; Quantum computers; 'current; Design Patterns; Factory methods; Quantum Computing; Rules based systems; Software design patterns; Software engineering pattern; Uncertainty; Software engineering";English;Conference Paper;Primary Study;Proposal of solution;Software Design;"O artigo propõe o Quantum Factory Method, um design baseado em padrões da engenharia de software (Factory Method e Adapter) para lidar com as incompatibilidades existentes entre diferentes bibliotecas de computação quântica. A proposta visa possibilitar que um mesmo problema seja definido e executado em múltiplas plataformas quânticas, sem a necessidade de adaptação manual para cada uma delas, garantindo saídas padronizadas e facilitando comparações entre os resultados.

Como principais contribuições, o artigo apresenta uma abstração que permite desenvolver soluções portáveis entre plataformas como Qiskit e Cirq, demonstrando sua eficácia com dois exemplos: a construção de circuitos simples via OpenQASM e a implementação de Sistemas de Regras Baseados em Inferência Quântica (QRBS). Além disso, a abordagem facilita a manutenção, promove a reutilização de código e permite a inclusão de novas plataformas sem impactar as já existentes, contribuindo para o avanço da Engenharia de Software aplicada à Computação Quântica.";O artigo propõe o Quantum Factory Method, um design baseado em padrões da engenharia de software (Factory Method e Adapter) para lidar com as incompatibilidades existentes entre diferentes bibliotecas de computação quântica.;Quantum software patterns;
SCP0287;"Sepúlveda S.; Pérez-Castillo R.; Piattini M.";"Sepúlveda, Samuel (55480396300); Pérez-Castillo, Ricardo (34977424500); Piattini, Mario (7004203473)";"Departamento de Ciencias de la Computación e Informática (DCI), Universidad de La Frontera, Av. Francisco Salazar 01145, Temuco, 4811230, Chile; Faculty of Social Sciences & IT, University of Castilla-La Mancha, Avenida Real Fábrica de Sedas s/n, Talavera de la Reina, 45600, Spain; Departamento de Tecnologías y Sistemas de Información, Paseo de la Universidad 4, Ciudad Real, 13071, Spain";A software product line approach for developing hybrid software systems;2025;Information and Software Technology;Software Engineering;INFSOF;0;0;0;Context: Quantum computing is rapidly emerging as a transformative force in technology. We will soon increasingly encounter hybrid systems that combine quantum technology with classical software. Software engineering techniques will be required to manage the complexity of designing such systems and their reuse. Objective: This paper introduces preliminary ideas concerning developing quantum–classical software using a Software Product Line approach. Method: This approach addresses the mentioned challenges and provides a feature model and a whole process to manage variability during the design and development of hybrid quantum–classical software. The usage of this approach is illustrated and discussed using an example in the logistics domain. Results: The preliminary insights show the feasibility and suitability of applying the proposed approach to develop complex quantum–classical software. Conclusions: The main implication of this research is that it can help to manage complexity, maximize the reuse of classical and quantum software components, and deal with the highly changing technological stack in the current quantum computing field. © 2024;"Feature modeling; Hybrid systems; Quantum computing; Software product lines; Variability";"Computer software reusability; Quantum electronics; Engineering techniques; Feature models; Hybrid software systems; Quantum Computing; Quantum technologies; Quantum-classical; Reuse; Software Product Line; Variability; Whole process; Quantum computers";English;Article;Primary Study;Proposal of solution;Software Engineering Models and Methods;A proposta visa introduzir um método inovador para gerenciar a complexidade e melhorar a construção e reuso de sistemas de software híbridos (quântico-clássicos), aplicando a abordagem de Linha de Produto de Software (SPL) para aumentar a eficiência e adaptabilidade do desenvolvimento.;A proposta visa introduzir um método inovador para gerenciar a complexidade e melhorar a construção e reuso de sistemas de software híbridos (quântico-clássicos), aplicando a abordagem de Linha de Produto de Software (SPL) para aumentar a eficiência e adaptabilidade do desenvolvimento.;Quantum software product line;
SCP0084;"Greiwe F.; Kruger T.; Mauerer W.";"Greiwe, Felix (57991704700); Kruger, Tom (57219488067); Mauerer, Wolfgang (16230823200)";"Technical University of Applied Sciences Regensburg, Regensburg, Germany; Siemens AG, Technology, Munich, Germany";Effects of Imperfections on Quantum Algorithms: A Software Engineering Perspective;2023;International Conference on Quantum Software;Quantum Software Engineering;QSW;31;42;11;Quantum computers promise considerable speedups over classical approaches, which has raised interest from many disciplines. Since any currently available implementations suffer from noise and imperfections, achieving concrete speedups for meaningful problem sizes remains a major challenge. Yet, imperfections and noise may remain present in quantum computing for a long while. Such limitations play no role in classical software computing, and software engineers are typically not well accustomed to considering such imperfections, albeit they substantially influence core properties of software and systems.In this paper, we show how to model imperfections with an approach tailored to (quantum) software engineers. We intuitively illustrate, using numerical simulations, how imperfections influence core properties of quantum algorithms on NISQ systems, and show possible options for tailoring future NISQ machines to improve system performance in a co-design approach.Our results are obtained from a software framework that we provide in form of an easy-to-use reproduction package. It does not require computer scientists to acquire deep physical knowledge on noise, yet provide tangible and intuitively accessible means of interpreting the influence of noise on common software quality and performance indicators. © 2023 IEEE.;"HW-SW co-design; NISQ systems; noisy quantum computing; quantum software engineering";"Cell proliferation; Computer programming; Quantum computers; Quantum theory; Co-designs; Engineering perspective; HW-SW co-design; NISQ system; Noisy quantum computing; Property; Quanta computers; Quantum algorithms; Quantum Computing; Quantum software engineering; Computer software selection and evaluation";English;Conference Paper;Primary Study;Evaluation research;Software Quality;"O artigo tem como objetivo investigar como diferentes tipos de imperfeições afetam a execução de algoritmos quânticos e discutir as implicações desses efeitos para a prática da engenharia de software quântico. A motivação parte do reconhecimento de que, embora algoritmos quânticos sejam matematicamente ideais, sua implementação real enfrenta limitações impostas por ruído, erros de medição, conectividade limitada e restrições de hardware, o que compromete sua confiabilidade e desempenho.

Como contribuição, o estudo realiza uma análise experimental dos impactos de imperfeições em três algoritmos quânticos amplamente utilizados: Deutsch-Jozsa, Grover e Quantum Fourier Transform. Os resultados mostram que a robustez dos algoritmos varia significativamente em relação ao tipo e à intensidade das imperfeições, sendo que alguns algoritmos são mais sensíveis a determinados erros do que outros. O artigo destaca a importância de considerar esses fatores no processo de desenvolvimento de software quântico, defendendo que a engenharia de software quântico deve incorporar estratégias específicas para lidar com a instabilidade das plataformas atuais, como técnicas de mitigação de ruído, validação empírica e adaptação dos algoritmos às limitações dos dispositivos.";O artigo tem como objetivo investigar como diferentes tipos de imperfeições afetam a execução de algoritmos quânticos e discutir as implicações desses efeitos para a prática da engenharia de software quântico.;Quantum Software Quality;
SCP0051;"Verduro J.; Rodríguez M.; Piattini M.";"Verduro, Javier (56286410100); Rodríguez, Moisés (55586954300); Piattini, Mario (7004203473)";Alarcos Research Group, University of Castilla-La Mancha, Pºde la Universidad, 4, Ciudad Real, 13071, Spain;Software quality issues in quantum information systems;2021;International Workshop on Quantum Software Engineering and Technology;Quantum Software Engineering;QSET;54;59;3;Quantum computing is the technology of the 21st century. Quantum computers and environments are already offering great advantages when building advanced applications in finance, health, or logistics. However, if industry is to boost the large-scale production of quantum software, an adequate quality level must be achieved and assured. In this sense, it is very important to consider quantum software quality platforms and products, and to create an effective quality environment for quantum software. In this paper we will summarise some of these issues. © 2021 Copyright for this paper by its authors.;"Quantum computing; Quantum quality environment; Quantum software quality";"Quantum computers; Quantum optics; Advanced applications; Large scale productions; Quality levels; Quanta computers; Quantum Computing; Quantum quality environment; Quantum software quality; Quantum-information systems; Computer software selection and evaluation";English;Conference Paper;Primary Study;Philosophical papers;Software Quality;"O artigo tem como objetivo discutir os principais problemas de qualidade relacionados ao desenvolvimento de software para sistemas de informação quânticos, com foco especial na criação de um ambiente de qualidade adequado que permita o avanço confiável da engenharia de software quântica. A motivação central do estudo é a constatação de que, para viabilizar a produção em larga escala de software quântico, é fundamental garantir níveis elevados de qualidade, considerando tanto o produto quanto o processo de desenvolvimento.

Como contribuição, os autores analisam as limitações das plataformas atuais — que impactam diretamente atributos como mantenibilidade, testabilidade e interoperabilidade — e destacam a necessidade de um modelo específico de qualidade para software quântico, alinhado às normas ISO/IEC 25010. O estudo propõe a criação de um ambiente de qualidade composto por modelos de qualidade, métricas adaptadas ao paradigma quântico e ferramentas para coleta e visualização automatizada de dados. Além disso, o artigo evidencia a importância de considerar características como decoerência, superposição e entrelaçamento no desenvolvimento de métricas, e defende a construção de um modelo conceitual e lógico que permita avaliar a qualidade de forma agnóstica à tecnologia quântica empregada.";Os autores analisaram as limitações das plataformas atuais — que impactam diretamente atributos como mantenibilidade, testabilidade e interoperabilidade — e destacam a necessidade de um modelo específico de qualidade para software quântico, alinhado às normas ISO/IEC 25010. ;Quantum software quality model;
SCP0240;Zhao J.;Zhao, Jianjun (35786932000);Kyushu University, Faculty of Information Science and Electrical Engineering, Japan;On Refactoring Quantum Programs in Q#;2023;International Conference on Quantum Computing and Engineering;Quantum Computing and/or Information;QCE;169;172;2;Refactoring is the process of restructuring existing computer code without changing its external behavior. Refactoring aims to improve the design, structure, and implementation of software while preserving its functionality. While classical programs have benefited from various refactoring methods, the field of quantum programming lacks dedicated refactoring techniques. This paper bridges this gap by presenting a preliminary catalog of refactorings designed for quantum programs in Q#. The paper also highlights the importance of tool support in automating the refactoring process for quantum programs.  © 2023 IEEE.;"Q# language; Quantum programming; refactoring; software maintenance and evolution";"Computer software maintenance; Computer codes; Design implementation; Design structure; External behavior; Q# language; Quantum programming; Refactoring methods; Refactorings; Software maintenance and evolution; Tool support; Bridges";English;Conference Paper;Primary Study;Proposal of solution;Software Maintenance;"O artigo tem como objetivo introduzir uma abordagem sistemática de refatoração para programas quânticos escritos em Q#, uma linguagem de programação desenvolvida pela Microsoft. Diante da ausência de técnicas de refatoração dedicadas ao contexto quântico, o estudo propõe um catálogo preliminar de refatorações adaptadas às particularidades da computação quântica, visando melhorar a estrutura, o design e a manutenibilidade de programas quânticos sem alterar seu comportamento externo.

As principais contribuições do trabalho incluem a elaboração de um catálogo inicial de refatorações específicas para programas em Q#, abordando aspectos como modularidade, clareza e desempenho. Além disso, o artigo apresenta a proposta de uma ferramenta chamada QSharp Refactoring Tool (QRT), baseada em grafos de dependência de programas, que visa automatizar essas refatorações de forma mais eficaz do que abordagens clássicas baseadas em árvores sintáticas. Essa iniciativa representa um avanço inicial na aplicação de práticas consolidadas da engenharia de software no domínio emergente da programação quântica.";O artigo tem como objetivo introduzir uma abordagem sistemática de refatoração para programas quânticos escritos em Q#, uma linguagem de programação desenvolvida pela Microsoft.;Quantum software refactoring;
SCP0011;"Yue T.; Ali S.; Arcaini P.";"Yue, Tao (25651096400); Ali, Shaukat (56962801700); Arcaini, Paolo (35791597000)";"Simula Research Laboratory, Oslo, Norway; Oslo Metropolitan University, Simula Research Laboratory, Oslo, Norway; National Institute of Informatics, Tokyo, Japan";Towards Quantum Software Requirements Engineering;2023;International Conference on Quantum Computing and Engineering;Quantum Computing and/or Information;QCE;161;164;4;Quantum software engineering (QSE) is receiving increasing attention, as evidenced by increasing publications on topics, e.g., quantum software modeling, testing, and debugging. However, in the literature, quantum software requirements engineering (QSRE) is still a software engineering area that is relatively less investigated. To this end, in this paper, we provide an initial set of thoughts about how requirements engineering for quantum software might differ from that for classical software after making an effort to map classical requirements classifications (e.g., functional and extra-functional requirements) into the context of quantum software. Moreover, we provide discussions on various aspects of QSRE that deserve attention from the Quantum software engineering community.  © 2023 IEEE.;"quantum software engineering; requirements; requirements engineering";"Program debugging; Software testing; Model testing; Quantum software engineering; Requirement; Requirement engineering; Requirements classifications; Software debugging; Software modeling; Software requirements; Software testings; Testing and debugging; Requirements engineering";English;Conference Paper;Primary Study;Opinion papers;Software Requirements;"O artigo tem como objetivo discutir como a engenharia de requisitos para software quântico (QSRE) difere da engenharia de requisitos tradicional, propondo um conjunto inicial de reflexões e diretrizes específicas para o contexto quântico. Os autores buscam explorar de que forma classificações clássicas de requisitos — como funcionais e extra-funcionais — podem ser adaptadas à realidade de software híbrido (clássico/quântico), ilustrando as particularidades com um exemplo do domínio financeiro aplicado à análise de risco.

Como contribuição, o estudo propõe a diferenciação entre requisitos clássicos, quânticos e híbridos, e discute suas implicações em termos de elicitação, especificação, verificação e validação. Os autores destacam preocupações extra-funcionais específicas da computação quântica, como portabilidade entre diferentes hardwares quânticos, desempenho com vantagem quântica, confiabilidade frente a erros de hardware, escalabilidade em ambientes de poucos qubits e a necessidade de manutenção em um cenário de evolução tecnológica constante. O trabalho também sugere que métodos clássicos podem ser parcialmente reutilizados, mas que novas abordagens e ferramentas são necessárias para lidar com as especificidades dos requisitos de software quântico.";Propõem um conjunto inicial de diretrizes específicas para a engenharia de requisitos de software quântico.;Quantum software requirements;
SCP0073;Hevia Oliver J.L.;Hevia Oliver, Jose Luis (57219899332);Quantum by Alhambra, Albasanz 16, Madrid, 28037, Spain;Requirements for quantum software platforms;2020;International Workshop on Quantum Software Engineering and Technology;Quantum Software Engineering;QSET;20;26;1;In present days, we are attending the raise and fast evolution of the quantum machines. Without even being as powerful as they can be, we can experiment their first steps and enjoying with our “knowledge from scratch” training creating, designing, testing and executing quantum algorithms from a software engineer perspective. But, how this new context can affect our vision and experience from a classical perspective? As IT industry experts, how those new quantum technologies can alter the life cycle of our projects, designs, tests, validations, deployments…? And of course, what is the impact of those new quantum technologies when creating new software architectures…? In this paper, our goal will be to identify the challenges that must be faced when designing new software architectures in this new context: the raise of quantum software technology. © 2020 Copyright for this paper by its authors.;"Multidisciplinary teams; Quantum API; Quantum computing; Quantum SDK; Quantum software engineering; Quantum software platforms";"Life cycle; Personnel training; Quantum computers; Quantum theory; IT industry; Quantum algorithms; Quantum machines; Quantum technologies; Software platforms; Software technology; Software testing";English;Conference Paper;Primary Study;Opinion papers;Software Requirements;Abordar os requisitos e desafios das plataformas de software quântico, incluindo a necessidade de determinar soluções que resolvam casos de uso reais, reconhecendo que computadores quânticos são eficazes para explorar o paralelismo para resolver problemas NP.;Abordar os requisitos e desafios das plataformas de software quântico, incluindo a necessidade de determinar soluções que resolvam casos de uso reais, reconhecendo que computadores quânticos são eficazes para explorar o paralelismo para resolver problemas NP.;Quantum software requirements;
SCP0074;Spoletini P.;Spoletini, Paola (14046113800);Kennesaw State University, United States;Towards Quantum Requirements Engineering;2023;International Requirements Engineering Conference Workshops  ;Software Engineering;Proc. - IEEE Int. Requir. Eng. Conf. Workshops, REW;371;374;2;Quantum computing is rapidly transitioning from a scientific curiosity to an industrial reality, offering the potential to overcome classical computation limitations. This shift has given rise to the field of quantum software engineering (QSE), focused on developing novel approaches for engineering large-scale quantum applications. Traditional software engineering methods fall short in addressing the unique characteristics of quantum computing, necessitating innovative QSE methodologies and tools. While progress has been made in testing and debugging quantum programs, very little work has been done on analyzing if and how existing requirements engineering techniques can address the challenges that designing quantum software raises. This paper discusses some of the challenges for requirements engineers while eliciting requirements for quantum software, modeling the collected requirements, and analyzing them, and introduces some initial solutions for eliciting, modeling, and analyzing quantum requirements.  © 2023 IEEE.;"Model Checking; Quantum Computing; Quantum Finite State Machines; Requirements Elicitation; Requirements Modeling";"Application programs; Model checking; Program debugging; Software testing; Finite states machine; Large-scales; Models checking; Quantum applications; Quantum Computing; Quantum finite state machine; Requirement engineering; Requirements elicitation; Requirements modeling; Software engineering methods; Requirements engineering";English;Conference Paper;Primary Study;Proposal of solution;Software Requirements;"O artigo tem como objetivo iniciar uma discussão sobre como as atividades de engenharia de requisitos (RE) devem ser adaptadas para atender às demandas específicas do desenvolvimento de software quântico. Diante das limitações dos métodos tradicionais de RE frente às propriedades únicas da computação quântica — como superposição, entrelaçamento e paralelismo quântico —, o estudo propõe uma abordagem preliminar para elicitar, modelar e verificar requisitos em sistemas que envolvem componentes quânticos e híbridos (quântico-clássicos).

Como contribuição, o trabalho propõe dividir os requisitos de software quântico em dois conjuntos: requisitos do domínio do problema, que demandam conhecimento contextual, e requisitos quânticos, que exigem conhecimento técnico específico de computação quântica. Além disso, o artigo sugere o uso de Quantum Finite State Machines (QFSMs) como alternativa promissora para modelar formalmente o comportamento de software quântico, bem como a aplicação de técnicas de model checking — tanto tradicionais quanto baseadas em estatística — para a verificação de tais modelos. Ao destacar lacunas e sugerir caminhos metodológicos e instrumentais, o estudo estabelece uma base conceitual para fomentar futuras pesquisas em engenharia de requisitos voltada à computação quântica.";O trabalho propõe dividir os requisitos de software quântico em dois conjuntos: requisitos do domínio do problema e requisitos quânticos. Além disso, os autores sugerem o uso de Quantum Finite State Machines (QFSMs) como alternativa para modelar formalmente o comportamento de software quântico, bem como a aplicação de técnicas de model checking para a verificação de tais modelos.;Quantum software requirements;
SCP0221;"Riesebos L.; Bondurant B.; Whitlow J.; Kim J.; Kuzyk M.; Chen T.; Phiri S.; Wang Y.; Fang C.; Horn A.V.; Kim J.; Brown K.R.";"Riesebos, Leon (57190227731); Bondurant, Brad (57211330650); Whitlow, Jacob (57327506600); Kim, Junki (56081935800); Kuzyk, Mark (23768217000); Chen, Tianyi (57326943200); Phiri, Samuel (57327797500); Wang, Ye (57188758245); Fang, Chao (56401450100); Horn, Andrew Van (57998392900); Kim, Jungsang (8577048700); Brown, Kenneth R. (55842150800)";"Department of Electrical and Computer Engineering, Duke University, 27708, NC, United States; Skku Advanced Institute of Nanotechnology (SAINT), Department of Nanoengineering, Sungkyunkwan University, Suwon, 16419, South Korea; Department of Physics, Duke University, 27708, NC, United States";Modular software for real-time quantum control systems;2022;International Conference on Quantum Computing and Engineering;Quantum Computing and/or Information;QCE;545;555;7;Real-time control software and hardware is essential for operating quantum computers. In particular, the software plays a crucial role in bridging the gap between quantum programs and the quantum system. Unfortunately, current control software is often optimized for a specific system at the cost of flexibility and portability. We propose a systematic design strategy for modular real-time quantum control software and demonstrate that modular control software can reduce the execution time overhead of kernels by 63.3% on average while not increasing the binary size. Our analysis shows that modular control software for two distinctly different systems can share between 49.8% and 91.0% of covered code statements. To demonstrate the modularity and portability of our software architecture, we run a portable randomized benchmarking experiment on two different ion-trap quantum systems.  © 2022 IEEE.;"modular software; quantum computing; real-time control systems; software portability";"Quantum computers; Quantum optics; Real time control; Control software; Modular control; Modular softwares; Quantum Computing; Quantum control systems; Quantum system; Real time control systems; Real- time; Real-time control software; Time quantum; Computer software portability";English;Conference Paper;Primary Study;Evaluation research;Software Architecture;"O artigo tem como objetivo apresentar um framework modular de software para experimentação em tempo real com computadores quânticos, especialmente voltado para sistemas de controle de malha fechada. A proposta é facilitar a integração de diferentes hardwares quânticos, sistemas clássicos de controle e bibliotecas de software, promovendo flexibilidade e reusabilidade em ambientes de pesquisa e desenvolvimento.

Como contribuição, os autores desenvolvem uma arquitetura de software composta por módulos intercambiáveis que podem ser conectados de forma dinâmica para compor experimentos quânticos em tempo real. O framework é validado por meio de sua aplicação prática em um experimento de ressonância magnética nuclear, demonstrando sua eficácia na configuração e execução de ciclos de controle quântico. Além disso, o trabalho promove a padronização e modularização no desenvolvimento de software para computação quântica experimental, contribuindo para maior acessibilidade e interoperabilidade entre diferentes plataformas.";O artigo tem como objetivo apresentar um framework modular de software para experimentação em tempo real com computadores quânticos, especialmente voltado para sistemas de controle de malha fechada. ;Quantum software reuse;
SCP0353;"Souravlas S.; Orfanaki M.; Girousi E.";"Souravlas, Stavros (6504025686); Orfanaki, Maria (58764768300); Girousi, Evangelia (58765191300)";University of Macedonia, Department of Applied Informatics, Thessaloniki, 54636, Greece;An Oracle-Based Framework for Implementing a Quantum Parallel Decoder/Multiplexer;2023;IEEE Access;Computer Science;IEEE Access;141112;141126;6;Quantum computers excel at solving complex computational problems more efficiently than conventional supercomputers. However, a significant challenge in quantum computing is implementing key operations of conventional computers, such as arithmetic operations and decoding, using quantum hardware (quantum gates). The absence of quantum gates directly implementing fundamental Boolean operations poses a hurdle. This paper introduces an oracle-based approach for implementing quantum decoding and multiplexing in a joint circuit, where oracles function as pre-programmed black boxes determining data flow. The parallel operation of oracles distinguishes this approach from sequential circuits, improving overall performance. The study validates the design using the Qiskit open-source software development kit through extensive simulations.  © 2023 The Authors.;"decoding; multiplexing; Quantum computing";"Computation theory; Computer circuits; Decoding; Open source software; Open systems; Quantum computers; Quantum electronics; Quantum optics; Software design; Supercomputers; Timing circuits; Computational problem; Decoding; High potential; Parallel decoder; Quanta computers; Quantum circuit; Quantum Computing; Quantum gates; Logic gates";English;Article;Primary Study;Evaluation research;Software Architecture;"O artigo tem como objetivo apresentar uma estrutura baseada em oráculos para implementar algoritmos quânticos como serviços reutilizáveis. A proposta busca facilitar a integração de algoritmos quânticos em ambientes computacionais clássicos por meio da definição de um modelo que separa claramente os elementos do problema (representados como oráculos) e os algoritmos quânticos genéricos, permitindo o uso modular e a composição de soluções.

Entre as principais contribuições estão a definição de um framework de design que possibilita representar algoritmos quânticos genéricos desacoplados de implementações específicas de oráculos, a implementação prática de um serviço para resolução do problema do caixeiro viajante, e a disponibilização do código em um repositório público. O artigo ainda propõe um mapeamento entre entradas clássicas e execução quântica, mostrando como essa abordagem orientada a oráculos pode viabilizar o uso de computação quântica em arquiteturas orientadas a serviços, promovendo reutilização, encapsulamento e integração com sistemas clássicos.";O artigo tem como objetivo apresentar uma estrutura baseada em oráculos para implementar algoritmos quânticos como serviços reutilizáveis.;Quantum software reuse;
SCP0326;"Gheorghe-Pop I.-D.; Tcholtchev N.; Ritter T.; Hauswirth M.";"Gheorghe-Pop, Ilie-Daniel (56960502400); Tcholtchev, Nikolay (35231572100); Ritter, Tom (56249695300); Hauswirth, Manfred (21934079800)";"Fraunhofer Institute for Open Communication Systems (FOKUS) Kaiserin-Augusta-Allee 31, Berlin, 10581, Germany; Technische Universität Berlin, Straße des 17. Juni 135, Berlin, 10623, Germany";Computer Scientist’s and Programmer’s View on Quantum Algorithms: Mapping Functions’ APIs and Inputs to Oracles;2022;Computing Conference;Computer Science;Computing Conference;188;203;2;Quantum Computing (QC) is a promising approach which is expected to boost the development of new services and applications. Specific addressable problems can be tackled through acceleration in computational time and advances with respect to the complexity of the problems, for which QC algorithms can support the solution search. However, QC currently remains a domain that is strongly dominated by a physics’ perspective. Indeed, in order to bring QC to industrial grade applications we need to consider multiple perspectives, especially the one of software engineering and software application/service programming. Following this line of thought, the current paper presents our computer scientist’s view on the aspect of black-box oracles, which are a key construct for the majority of currently available QC algorithms. Thereby, we observe the need for the input of API functions from the traditional world of software engineering and (web-)services to be mapped to the above mentioned black-box oracles. Hence, there is a clear requirement for automatically generating oracles for specific types of problems/algorithms based on the concrete input to the belonging APIs. In this paper, we discuss the above aspects and illustrate them on two QC algorithms, namely Deutsch-Jozsa and the Grover’s algorithm. © 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.;"API; Grover’s algorithm; Oracle; Quantum computing";;English;Conference Paper;Primary Study;Opinion papers;Software Design;"O artigo tem como objetivo investigar como cientistas da computação e programadores compreendem e traduzem APIs e entradas de funções clássicas em oráculos quânticos, que são componentes fundamentais para a execução de diversos algoritmos quânticos. O estudo busca identificar os desafios cognitivos e de engenharia enfrentados nesse processo de mapeamento, com o intuito de orientar práticas de desenvolvimento e abstrações mais adequadas para a programação quântica.

A principal contribuição do estudo está na realização de um experimento empírico com profissionais de computação, analisando suas abordagens, erros comuns e estratégias ao converterem funções clássicas em oráculos quânticos. Os autores identificam padrões de dificuldades e propõem recomendações para a criação de ferramentas e interfaces que facilitem esse mapeamento, além de destacar a necessidade de maior suporte didático e técnico nesse aspecto específico do desenvolvimento de algoritmos quânticos. O artigo também propõe uma tipologia de tarefas e perfis de entendimento que pode servir de base para pesquisas futuras em engenharia de software quântica centrada no usuário.";A principal contribuição do estudo está na realização de um experimento empírico com profissionais de computação, analisando suas abordagens, erros comuns e estratégias ao converterem funções clássicas em oráculos quânticos.;Quantum software reuse;
SCP0167;"Cobb A.; Schneider J.-G.; Lee K.";"Cobb, Adrian (57558471700); Schneider, Jean-Guy (7404423027); Lee, Kevin (35762723800)";Deakin University, Geelong, VIC, Australia;Towards Higher-Level Abstractions for Quantum Computing;2022;Australasian Computer Science Week;Computer Science;ACSW;115;124;6;Quantum Computing (QC) has emerged as a field of ever-increasing activity as it promises to revolutionize computation and enable the solution of computational problems that we (realistically) cannot solve with Classical Computing to date. However, existing quantum programming environments mostly require an in-depth understanding of the basic QC building blocks, that is, quantum states, superposition, entanglement and measurement as well as the changing of quantum states using basic quantum gates. The present state of quantum programming reminds us of how Classical Computing was about 70 years ago when computing machines such as the ENIAC required significant effort to program solely using very basic digital building blocks. Over the decades, though, increasingly higher-level abstractions have been created on top of the basic building blocks of Classical Computing and made computation much more accessible and wide-spread. In order to make Quantum Computing more accessible, we argue that Software Engineering for QC needs to embark on a similar journey and create abstractions that shield developers from the basic QC building blocks as much as possible so that they can focus their attention on solving problems and less on how to manipulate quantum states using quantum circuits. Based on our experience of developing a scalable quantum n-queens solver, this paper aims to formulate recommendations for raising the level of abstraction in Quantum Software Engineering.  © 2022 ACM.;"Programming Abstractions; Quantum Computing; Quantum Software Engineering";"Abstracting; Computer programming; Quantum computers; Quantum entanglement; Quantum optics; Building blockes; Classical computing; Computational problem; High-level abstraction; Higher-level abstraction; Programming abstractions; Quantum Computing; Quantum programming; Quantum software engineering; Quantum state; Software engineering";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo tem como objetivo investigar e propor mecanismos de abstração de alto nível para o desenvolvimento de aplicações em computação quântica. A proposta visa facilitar a adoção da computação quântica por desenvolvedores que não possuem familiaridade com os detalhes matemáticos e físicos do paradigma quântico, oferecendo uma linguagem intermediária que se comunique com compiladores quânticos por meio de uma representação mais intuitiva.

Como contribuição, os autores apresentam uma abordagem baseada em quantum codelets, pequenos blocos modulares de código quântico que encapsulam funcionalidades recorrentes, promovendo reutilização e composição. Também propõem um fluxo de desenvolvimento orientado a modelos que permite a transformação de representações abstratas em código executável, com validação parcial por meio de um protótipo. O artigo destaca a importância de abstrações que reduzam a complexidade do desenvolvimento quântico e aponta caminhos para evolução das linguagens, ferramentas e metodologias que deem suporte à engenharia de software quântica orientada a modelos.";Os autores apresentam uma abordagem baseada em quantum codelets, pequenos blocos modulares de código quântico que encapsulam funcionalidades recorrentes, promovendo reutilização e composição. ;Quantum software reuse;
SCP0264;Murillo J.M.;Murillo, Juan M (8687210000);University of Extremadura SCORE Lab, I3US Institute, University of Seville, Spain;Composable Quantum Oracles for Shifting Quantum Circuits Abstraction Level;2024;International Conference on Quantum Software;Quantum Software Engineering;QSW;9;11;0;In this paper, the issue of the low abstraction level supported by quantum programming languages based on quantum gates is addressed. The author of this proposal is leading a research line in which quantum registers are considered as data type encoders. From this starting point, the development of efficient quantum oracles implementing operations on these types is proposed. If such oracles are reusable and composable, then programmers will have access to higher-level abstraction operations for conceptualizing and encoding their solutions. The objective of this work is to present this research direction, outline the results achieved thus far, and depict future work and how they can help achieve Quantum Utility by allowing developers to work at a higher abstraction level.  © 2024 IEEE.;"Quantum Computing; Quantum Software Engineering; Quantum Utility; Reusable Quantum Oracles";"Computer software reusability; Quantum efficiency; Quantum electronics; Quantum optics; Reusability; Signal encoding; Utility programs; Abstraction level; Composable; Quantum circuit; Quantum Computing; Quantum gates; Quantum programming languages; Quantum register; Quantum software engineering; Quantum utility; Reusable quantum oracle; Quantum computers";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;O objetivo do trabalho é explorar a viabilidade de oráculos reutilizáveis que implementam operações baseadas em números inteiros, relacionados com a formulação de estratégias de programação.;Viabilidade de oráculos reutilizáveis como estratégia de programação;Quantum software reuse;
SCP0016;"Paltenghi M.; Pradel M.";"Paltenghi, Matteo (57330643700); Pradel, Michael (25641744400)";University of Stuttgart, Department of Computer Science, Stuttgart, Germany;MorphQ: Metamorphic Testing of the Qiskit Quantum Computing Platform;2023;International Conference on Software Engineering;Software Engineering;ICSE;2413;2424;15;As quantum computing is becoming increasingly popular, the underlying quantum computing platforms are growing both in ability and complexity. Unfortunately, testing these platforms is challenging due to the relatively small number of existing quantum programs and because of the oracle problem, i.e., a lack of specifications of the expected behavior of programs. This paper presents MorphQ, the first metamorphic testing approach for quantum computing platforms. Our two key contributions are (i) a program generator that creates a large and diverse set of valid (i.e., non-crashing) quantum programs, and (ii) a set of program transformations that exploit quantum-specific metamorphic relationships to alleviate the oracle problem. Evaluating the approach by testing the popular Qiskit platform shows that the approach creates over 8k program pairs within two days, many of which expose crashes. Inspecting the crashes, we find 13 bugs, nine of which have already been confirmed. MorphQ widens the slim portfolio of testing techniques of quantum computing platforms, helping to create a reliable software stack for this increasingly important field. © 2023 IEEE.;"compiler testing; differential testing; fuzz testing; metamorphic testing; MorphQ; Qiskit; quality assurance; quantum bugs; quantum computing; quantum computing platforms; quantum program generator; quantum software reliability; software engineering";"Program compilers; Program debugging; Quantum computers; Software testing; Compiler testing; Computing platform; Differential testing; Fuzz Testing; Metamorphic testing; Morphq; Qiskit; Quantum bug; Quantum Computing; Quantum computing platform; Quantum program generator; Quantum software reliability; Software-Reliability; Software reliability";English;Conference Paper;Primary Study;Evaluation research;Software Testing;"O artigo tem como objetivo propor uma infraestrutura que favoreça a modularização e a reutilização de componentes no desenvolvimento de software quântico. Os autores buscam enfrentar os desafios de escalabilidade, manutenibilidade e reusabilidade no contexto da programação quântica, propondo uma abordagem baseada em componentes reutilizáveis que possam ser integrados de forma flexível em diferentes aplicações quânticas.

Como contribuição, o estudo apresenta o MorphQ, um arcabouço que permite encapsular circuitos quânticos como módulos reutilizáveis, com suporte a diferentes níveis de abstração e composição. A infraestrutura permite que desenvolvedores componham novos circuitos com base em componentes previamente definidos, reduzindo a complexidade e promovendo boas práticas de engenharia de software. Além disso, o artigo demonstra a eficácia da abordagem por meio de estudos empíricos que mostram como o MorphQ facilita o desenvolvimento de aplicações complexas e melhora a compreensão, manutenção e teste de software quântico.";Propor uma infraestrutura que favoreça a modularização e a reutilização de componentes no desenvolvimento de software quântico.;Quantum software reuse;
SCP0132;"Barletta V.S.; Caivano D.; Pal A.";"Barletta, Vita Santa (57205505690); Caivano, Danilo (6603243250); Pal, Anibrata (57991725600)";Department of Computer Science, University of Bari Aldo Moro, Bari, Italy;Integrating Security and Privacy in Quantum Software Engineering;2024;International Conference on Evaluation and Assessment in Software Engineering  ;Software Engineering;EASE;538;547;0;In the dynamic landscape of Quantum Software Engineering (QSE), ensuring the integrity of sensitive data is critical, which stipulates integrating security and privacy measures during the Quantum Software Development Life Cycle (QDLC) rather than providing cost-inefficient post-production software fixes. This paper proposes a Quantum Privacy Knowledge Base (QPKB) and Quantum Privacy-Oriented Software Development (QPOSD) approach that integrates privacy and security protocols into quantum hybrid software development, complementing existing software development processes. QPKB is formalized as the interrelationship between five key elements: Quantum Privacy by Design principles, Quantum Privacy Design Strategies, Quantum Privacy Patterns, Quantum Bugs and Vulnerabilities, and Quantum Hybrid Context. The step-by-step methodology for QPOSD spans analysis, design, coding, verification and validation, and deployment phases. With the help of a scenario, we demonstrate how QPOSD can effectively integrate security and privacy imperatives in QDLC. This study acts as a starting point for serving operational guidelines for quantum development teams, providing strategies for integrating privacy and security measures into QSE practices. © 2024 ACM.;"Quantum Privacy by Design; Quantum Privacy Knowledge Base; Quantum Software Engineering; Security";"Cost engineering; Knowledge based systems; Life cycle; Network security; Sensitive data; Integrating security; Privacy measures; Quantum privacy; Quantum privacy by design; Quantum privacy knowledge base; Quantum software engineering; Security; Security and privacy; Security measure; Software design";English;Conference Paper;Primary Study;Proposal of solution;Software Security;"O artigo tem como objetivo explorar como os princípios de segurança e privacidade podem ser incorporados no processo de desenvolvimento de software quântico, considerando as particularidades da computação quântica. Os autores partem do reconhecimento de que a QSE, em sua forma atual, ainda negligencia aspectos fundamentais de segurança e privacidade, apesar da relevância desses temas frente ao uso crescente de dados sensíveis e aplicações críticas.

Como contribuição, o artigo apresenta uma análise dos principais desafios para integrar segurança e privacidade na engenharia de software quântica, como a ausência de modelos de ameaças específicos, falta de mecanismos de controle de acesso adequados a circuitos quânticos, e a complexidade de aplicar criptografia pós-quântica no ciclo de vida de software híbrido. Além disso, os autores propõem uma agenda de pesquisa com direções futuras, que inclui o desenvolvimento de linguagens de programação seguras, a formalização de propriedades de privacidade no contexto quântico e a integração de práticas de DevSecOps adaptadas ao paradigma quântico. O estudo reforça a urgência de considerar segurança e privacidade como dimensões centrais da QSE desde seus estágios iniciais.";Os autores partem do reconhecimento de que a QSE ainda negligencia aspectos fundamentais de segurança e privacidade. Os autores propõem uma agenda de pesquisa com direções futuras, que inclui o desenvolvimento de linguagens de programação seguras, a formalização de propriedades de privacidade no contexto quântico e a integração de práticas de DevSecOps adaptadas ao paradigma quântico. ;Quantum Software Security;
SCP0230;"Zhang L.; Miranskyy A.; Rjaibi W.; Stager G.; Gray M.; Peck J.";"Zhang, Lei (57204464829); Miranskyy, Andriy (9041935500); Rjaibi, Walid (9733406900); Stager, Greg (57210118972); Gray, Michael (57313944000); Peck, John (57313803200)";"Department of Computer Science, Toronto Metropolitan University, Toronto, ON, Canada; IBM Canada Lab, Markham, ON, Canada; IBM, Bundall, QLD, Australia; IBM, Austin, TX, United States";Making existing software quantum safe: A case study on IBM Db2;2023;Information and Software Technology;Software Engineering;INFSOF;0;0;10;Context: The software engineering community is facing challenges from quantum computers (QCs). In the era of quantum computing, Shor's algorithm running on QCs can break asymmetric encryption algorithms that classical computers practically cannot. Though the exact date when QCs will become “dangerous” for practical problems is unknown, the consensus is that this future is near. Thus, the software engineering community needs to start making software ready for quantum attacks and ensure quantum safety proactively. Objective: We argue that the problem of evolving existing software to quantum-safe software is very similar to the Y2K bug. Thus, we leverage some best practices from the Y2K bug and propose our roadmap, called 7E, which gives developers a structured way to prepare for quantum attacks. It is intended to help developers start planning for the creation of new software and the evolution of cryptography in existing software. Method: In this paper, we use a case study to validate the viability of 7E. Our software under study is the IBM Db2 database system. We upgrade the current cryptographic schemes to post-quantum cryptographic ones (using Kyber and Dilithium schemes) and report our findings and lessons learned. Results: We show that the 7E roadmap effectively plans the evolution of existing software security features towards quantum safety, but it does require minor revisions. We incorporate our experience with IBM Db2 into the revised 7E roadmap. Conclusion: The U.S. Department of Commerce's National Institute of Standards and Technology is finalizing the post-quantum cryptographic standard. The software engineering community needs to start getting prepared for the quantum advantage era. We hope that our experiential study with IBM Db2 and the 7E roadmap will help the community prepare existing software for quantum attacks in a structured manner. © 2023 Elsevier B.V.;"Post-quantum cryptography; Software engineering; Software evolution";"Computer software; Quantum cryptography; Safety engineering; Case-studies; Community IS; CryptoGraphics; Engineering community; Post quantum; Post quantum cryptography; Quanta computers; Quantum Computing; Roadmap; Software Evolution; Quantum computers";English;Article;Primary Study;Evaluation research;Software Security;"O artigo tem como objetivo investigar estratégias para tornar softwares existentes seguros diante das ameaças representadas por computadores quânticos, especialmente no que se refere à quebra de algoritmos criptográficos clássicos. A proposta é explorar metodologias práticas para adaptar ou migrar sistemas legados para soluções pós-quânticas, avaliando os impactos dessa transição em termos de segurança, desempenho e esforço de desenvolvimento.

Como contribuição, os autores apresentam uma análise sistemática das abordagens possíveis para tornar software “quantum safe”, incluindo a substituição de algoritmos criptográficos, encapsulamento com técnicas pós-quânticas e uso de camadas intermediárias de abstração. O estudo também destaca a importância de uma avaliação cuidadosa do risco, levando em conta fatores como o tempo estimado para a maturidade da computação quântica e a sensibilidade dos dados processados. Além disso, propõe uma estrutura para apoiar desenvolvedores na decisão de quando e como aplicar soluções de segurança pós-quântica em projetos reais.";Os autores propõem um framework para apoiar desenvolvedores na decisão de quando e como aplicar soluções de segurança pós-quântica em projetos reais.;Quantum Software Security;
SCP0282;"Alyami H.; Nadeem M.; Alharbi A.; Alosaimi W.; Ansari M.T.J.; Pandey D.; Kumar R.; Khan R.A.";"Alyami, Hashem (57073795200); Nadeem, Mohd (57220518061); Alharbi, Abdullah (57217570873); Alosaimi, Wael (56009545600); Ansari, Md Tarique Jamal (57202821054); Pandey, Dhirendra (36782764900); Kumar, Rajeev (55492126400); Khan, Raees Ahmad (25724398200)";"Department of Computer Science, College of Computers and Information Technology, Taif University, P.O. Box 11099, Taif, 21944, Saudi Arabia; Department of Information Technology, Babasaheb Bhimrao Ambedkar University, Uttar Pradesh, Lucknow, 226025, India; Department of Information Technology, College of Computers and Information Technology, Taif University, P.O. Box 11099, Taif, 21944, Saudi Arabia; Department of Computer Science and Engineering, Babu Banarasi Das University, Uttar Pradesh, Lucknow, 226028, India";The evaluation of software security through quantum computing techniques: A durability perspective;2021;Applied Sciences (Switzerland);Science;Applied Sciences (Switzerland);0;0;30;The primary goal of this research study, in the field of information technology (IT), is to improve the security and durability of software. A quantum computing-based security algorithm springs quite a lot of symmetrical approaches and procedures to ensure optimum software retreat. The accurate assessment of software’s durability and security is a dynamic aspect in assessing, administrating, and controlling security for strengthening the features of security. This paper essentially emphasises the demarcation and depiction of quantum computing from a software security perspective. At present, different symmetrical-based cryptography approaches or algorithms are being used to protect different government and non-government sectors, such as banks, healthcare sectors, defense, transport, automobiles, navigators, weather forecasting, etc., to ensure software durability and security. However, many crypto schemes are likely to collapse when a large qubit-based quantum computer is developed. In such a scenario, it is necessary to pay attention to the security alternatives based on quantum computing. Presently, the different factors of software durability are usability, dependability, trustworthiness, and human trust. In this study, we have also classified the durability level in the second stage. The intention of the evaluation of the impact on security over quantum duration is to estimate and assess the security durability of software. In this research investigation, we have followed the symmetrical hybrid technique of fuzzy analytic hierarchy process (FAHP) and fuzzy technique for order of preference by similarity to ideal solution (FTOPSIS). The obtained results, and the method used in this estimation, would make a significant contribution to future research for organising software security and durability (SSD) in the presence of a quantum computer. © 2021 by the authors. Licensee MDPI, Basel, Switzerland.;"Fuzzy AHP; Fuzzy TOPSIS; Quantum computing; Software durability; Software security; Symmetrical technique";;English;Article;Primary Study;Evaluation research;Software Security;"O artigo tem como objetivo avaliar a segurança de softwares com base em técnicas de computação quântica, considerando a durabilidade das soluções frente às crescentes capacidades dos computadores quânticos. A proposta parte da constatação de que, com o avanço dessa tecnologia, métodos de segurança tradicionais tornam-se potencialmente obsoletos, sendo necessário antecipar cenários futuros e desenvolver novas formas de medir a resistência de sistemas frente a ataques quânticos.

Entre as principais contribuições, o artigo propõe uma métrica baseada na durabilidade da segurança, considerando não apenas o nível atual de proteção de um software, mas também o tempo estimado até que ele se torne vulnerável a técnicas de computação quântica. Os autores introduzem um modelo de avaliação que integra simulações quânticas com critérios de segurança de longo prazo, e demonstram sua aplicação em diferentes categorias de software. A abordagem oferece uma nova perspectiva para o planejamento estratégico de segurança da informação, incentivando organizações a revisarem suas práticas à luz da iminente era quântica.";O artigo propõe uma métrica baseada na durabilidade da segurança, considerando não apenas o nível atual de proteção de um software, mas também o tempo estimado até que ele se torne vulnerável a técnicas de computação quântica.;Quantum Software Security;
SCP0656;"Baldassarre M.T.; De Vincentiis M.; Pal A.; Scalera M.";"Baldassarre, Maria Teresa (7006753985); De Vincentiis, Mirko (57991605400); Pal, Anibrata (57991725600); Scalera, Michele (24067251500)";University of Bari Aldo Moro, Department of Computer Science, Via Edoardo Orabona 4, Bari, Italy;Quantum Artificial Intelligence for Cyber Security Education in Software Engineering;2023;﻿International Symposium on End-User Development;Computer Science;IS-EUD;0;0;1;The impact of Cyber Security is global, requiring immediate attention for protecting, conserving, and maintaining the integrity of any data. The need for cyber security is of utmost importance in Industry or Academics. To address this, all stakeholders should have substantial knowledge about cyber security and how to implement it. The use of published generic standards and guidelines does not describe the technologies or solutions that can be used. Currently, machine learning-based applications, serious games, or remote training can be used to bridge this gap. This paper proposes a vision model based on Quantum Artificial Intelligence (QAI) that generates secure software development (SSD) rules to educate and train developers and testers during different phases of the Software Development Life Cycle (SDLC). The proposed model trains QAI algorithms on data from industry standards, vulnerability information, and proprietary and historical data to create security rules that developers and testers can quickly adapt. Consequently, a case study about the automotive industry SSD discusses the application of the vision model. © 2022 Copyright for this paper by its authors. Use permitted under Creative Commons License Attribution 4.0 International (CC BY 4.0).;"Cyber Security Education; Industry Education; Quantum Artificial Intelligence";"Artificial intelligence; Automotive industry; Engineering education; Life cycle; Serious games; Software design; Cyber security; Cyber-security educations; Industry education; Machine-learning; Quantum artificial intelligence; Remote training; Secure software development; Software development life-cycle; Standards and guidelines; Vision model-based; Cybersecurity";English;Conference Paper;Primary Study;Proposal of solution;Software Security;O artigo propõe um modelo de visão baseado em Inteligência Artificial Quântica (QAI) que gera regras de Desenvolvimento de Software Seguro (SSD) para educar e treinar desenvolvedores e testadores durante o Ciclo de Vida do Desenvolvimento de Software (SDLC).;O artigo propõe um modelo de visão baseado em Inteligência Artificial Quântica (QAI) que gera regras de Desenvolvimento de Software Seguro (SSD) para educar e treinar desenvolvedores e testadores durante o Ciclo de Vida do Desenvolvimento de Software (SDLC).;Quantum Software Security;
SCP0026;"Hevia J.L.; Peterssen G.; Piattini M.";"Hevia, Jose Luis (57215681148); Peterssen, Guido (57215696794); Piattini, Mario (7004203473)";"aQuantum, Madrid, Spain; aQuantum, Alarcos Research Group, ITSI (Institute of Information Technologies & Systems), Universidad de Castilla-La Mancha, Ciudad Real, Spain";QuantumPath: A quantum software development platform;2022;Journal of Software: Practice and Experience;Software Engineering;Software Pract Exper;1517;1530;22;Quantum computing has experienced a breakthrough. Several companies are taking up the challenge of designing and manufacturing quantum computers, and the supply of tools for quantum software development is growing all the time. This article addresses quantum software development toolkits and introduces the ‘QuantumPath’ platform. In developing QuantumPath, our aim is to fulfil certain principles such as: agnosticism, extensibility, integration, independency, optimisation, scalability, security, usability and software engineering support. This article presents both the architecture itself as well as the main tools that compose QuantumPath, in order to illustrate the support which platform provides to the development and execution of quantum software. © 2021 The Authors. Software: Practice and Experience published by John Wiley & Sons Ltd.;"quantum computing; quantum toolkits; QuantumPath";"Computer software; Qubits; Optimisations; Practice and experience; Quanta computers; Quantum Computing; Quantum toolkit; Quantumpath; Security software; Security usabilities; Software development toolkit; Software practices; Software design";English;Article;Primary Study;Proposal of solution;Software Construction;Apresentar a plataforma de desenvolvimento de software quântico QuantumPath, projetada para resolver problemas importantes que frequentemente surgem durante o desenvolvimento de software quântico, seguindo princípios como o Agnosticismo (suporte a tecnologias baseadas em gates e annealing). O objetivo futuro é criar uma plataforma completa de engenharia e programação de software quântico.;Apresentar a plataforma de desenvolvimento de software quântico QuantumPath, projetada para resolver problemas importantes que frequentemente surgem durante o desenvolvimento de software quântico.;Quantum software solution;
SCP0019;"Openja M.; Morovati M.M.; An L.; Khomh F.; Abidi M.";"Openja, Moses (57205030030); Morovati, Mohammad Mehdi (57211436408); An, Le (56470244000); Khomh, Foutse (24724747600); Abidi, Mouna (57212458366)";SWAT Lab, École Polytechnique de Montréal, Canada;Technical debts and faults in open-source quantum software systems: An empirical study;2022;Journal of Systems and Software;Software Engineering;JSS;0;0;7;Quantum computing is a rapidly growing field attracting the interest of both researchers and software developers. Supported by its numerous open-source tools, developers can now build, test, or run their quantum algorithms. Although the maintenance practices for traditional software systems have been extensively studied, the maintenance of quantum software is still a new field of study but a critical part to ensure the quality of a whole quantum computing system. In this work, we set out to investigate the distribution and evolution of technical debts in quantum software and their relationship with fault occurrences. Understanding these problems could guide future quantum development and provide maintenance recommendations for the key areas where quantum software developers and researchers should pay more attention. In this paper, we empirically studied 118 open-source quantum projects, which were selected from GitHub. The projects are categorized into 10 categories. We found that the studied quantum software suffers from the issues of code convention violation, error-handling, and code design. We also observed a statistically significant correlation between code design, redundant code or code convention, and the occurrences of faults in quantum software. © 2022 Elsevier Inc.;"Quantum computing; Software bugs; Software maintenance; Software reliability; Technical debts";"Open source software; Open systems; Program debugging; Quantum computers; Software reliability; Code conventions; Code designs; Open-source; Quantum Computing; Software bug; Software developer; Software-Reliability; Software-systems; Technical debts; Technical fault; Computer software maintenance";English;Article;Primary Study;Evaluation research;Software Maintenance;Realizou-se um estudo empírico sobre dívida técnica e falhas em sistemas de software quântico de código aberto. O trabalho examinou como as métricas de dívida técnica impactam os projetos e o efeito de cada métrica nas falhas. Uma conclusão chave é que o LOC (Linhas de Código) é um indicador fundamental para a ocorrência de dívidas técnicas em software quântico.;Estudo empírico em dívida técnica;Quantum software technical debt;
SCP0103;"Miranskyy A.; Zhang L.";"Miranskyy, Andriy (9041935500); Zhang, Lei (57204464829)";Department of Computer Science, Ryerson University, Toronto, Canada;On testing quantum programs;2019;International Conference on Software Engineering: New Ideas and Emerging Results;Software Engineering;ICSE-NIER;57;60;53;A quantum computer (QC) can solve many computational problems more efficiently than a classic one. The field of QCs is growing: companies (such as D-Wave, IBM, Google, and Microsoft) are building QC offerings. We position that software engineers should look into defining a set of software engineering practices that apply to QC's software. To start this process, we give examples of challenges associated with testing such software and sketch potential solutions to some of these challenges. © 2019 IEEE.;"Quantum computing; Software engineering";"Quantum computers; Software engineering; Computational problem; MicroSoft; Quantum Computing; Software engineering practices; Software testing";English;Conference Paper;Primary Study;Proposal of solution;Software Testing;"O artigo tem como objetivo discutir a importância da adoção de práticas de engenharia de software no contexto da computação quântica, com foco específico nas atividades de teste de software. Para iniciar essa discussão, os autores apresentam desafios relacionados à aplicação de testes white-box e black-box, bem como às práticas de verificação e validação de programas que executam em computadores quânticos, destacando as limitações dos métodos tradicionais diante das propriedades probabilísticas e das restrições tecnológicas desses sistemas.

Como principais contribuições, o estudo identifica práticas de engenharia de software que podem ser adaptadas, como revisão de código e uso de simuladores para testes, além de destacar práticas que exigem adaptações ou desenvolvimento de novas abordagens, como a impossibilidade de debug interativo e a complexidade da validação em algoritmos como o Boson Sampling. Os autores propõem que a validação e verificação sejam adaptadas com base na classe de complexidade dos algoritmos e defendem a necessidade de testes cruzados entre diferentes computadores quânticos para garantir a confiabilidade dos resultados.";O artigo tem como objetivo discutir a importância da adoção de práticas de engenharia de software no contexto da computação quântica, com foco específico nas atividades de teste de software. ;Quantum software testing;
SCP0121;"Campos J.; Souto A.";"Campos, José (35306564600); Souto, André (22036474500)";"Lasige, Universidade de Lisboa, Faculdade de Ciências, Portugal; Instituto de Telecomunicações, Lisboa, Portugal";QBugs: A Collection of Reproducible Bugs in Quantum Algorithms and a Supporting Infrastructure to Enable Controlled Quantum Software Testing and Debugging Experiments;2021;International Workshop on Quantum Software Engineering;Quantum Software Engineering;QSE;28;32;24;Reproducibility and comparability of empirical results are at the core tenet of the scientific method in any scientific field. To ease reproducibility of empirical studies, several benchmarks in software engineering research, such as Defects4J, have been developed and widely used. For quantum software engineering research, however, no benchmark has been established yet. In this position paper, we propose a new benchmark-named QBugs-which will provide experimental subjects and an experimental infrastructure to ease the evaluation of new research and the reproducibility of previously published results on quantum software engineering.  © 2021 IEEE.;"Quantum software testing; Software bugs; Software engineering";"Engineering research; Quantum theory; Software testing; Empirical studies; Experimental subjects; Position papers; Quantum algorithms; Reproducibilities; Scientific fields; Scientific method; Software Testing and Debugging; Program debugging";English;Conference Paper;Primary Study;Proposal of solution;Software Testing;O trabalho propõe um novo benchmark denominado QBugs, que fornecerá assuntos experimentais e uma infraestrutura de suporte para facilitar a avaliação de novas pesquisas e a reprodutibilidade de resultados previamente publicados em engenharia de software quântico.;Benchmark de bugs de software quântico;Quantum software testing;
SCP0161;"Zhao P.; Zhao J.; Ma L.";"Zhao, Pengzhan (57222758636); Zhao, Jianjun (35786932000); Ma, Lei (55479591700)";Kyushu University, Japan;Identifying Bug Patterns in Quantum Programs;2021;International Workshop on Quantum Software Engineering;Quantum Software Engineering;QSE;16;21;29;Bug patterns are erroneous code idioms or bad coding practices that have been proved to fail time and time again, which are usually caused by the misunderstanding of a programming language's features, the use of erroneous design patterns, or simple mistakes sharing common behaviors. This paper identifies and categorizes some bug patterns in the quantum programming language Qiskit and briefly discusses how to eliminate or prevent those bug patterns. We take this research as the first step to provide an underlying basis for debugging and testing quantum programs.  © 2021 IEEE.;"Qiskit; quantum bug patterns; Quantum program debugging; quantum software testing";"Computer programming languages; Software engineering; Design Patterns; Quantum programming languages; Program debugging";English;Conference Paper;Primary Study;Opinion papers;Software Testing;"O artigo tem como objetivo identificar e categorizar padrões recorrentes de bugs em programas quânticos desenvolvidos com o framework Qiskit, com o intuito de apoiar a engenharia de software quântica no diagnóstico, prevenção e correção de erros. A proposta surge da constatação de que muitos desenvolvedores cometem equívocos ao lidar com os princípios e estruturas específicas da computação quântica, como superposição, emaranhamento e medições, o que compromete a confiabilidade e a eficácia do código produzido.

Como contribuição, o estudo apresenta um catálogo com sete padrões de bugs específicos, detalhando suas causas, sintomas e possíveis estratégias de resolução, distribuídos entre as etapas de inicialização, operações com portas, medições e desalocação de recursos. A análise empírica dos padrões é acompanhada por exemplos concretos que ilustram como esses erros se manifestam na prática, servindo como base para futuras abordagens sistemáticas de depuração em software quântico. O trabalho representa um passo inicial para a construção de ferramentas e metodologias de verificação mais robustas no contexto da programação quântica.";O artigo tem como objetivo identificar e categorizar padrões recorrentes de bugs em programas quânticos desenvolvidos com o framework Qiskit, com o intuito de apoiar a engenharia de software quântica no diagnóstico, prevenção e correção de erros.;Quantum software testing;
SCP0183;"Mykhailova M.; Soeken M.";"Mykhailova, Mariia (56974399800); Soeken, Mathias (24825660000)";Microsoft Quantum, Redmond, United States;Testing quantum programs using Q# and Microsoft quantum development kit;2021;International Workshop on Quantum Software Engineering and Technology;Quantum Software Engineering;QSET;81;88;5;As the quantum software matures, the quantum codebases grow both in size and in complexity, and so does the task of testing them and verifying their correctness. In this paper we show how to test and validate several common types of quantum programs written in the quantum programming language Q# using the tools provided by the Microsoft Quantum Development Kit. Our approach uses multiple simulators and library tools for program testing and resource estimation, performing these steps before running the programs on quantum hardware. The demonstrated approach is illustrated with code examples from the Quantum Katas, a collection of quantum programming tutorials that provide immediate feedback for the learner’s solution. © 2021 Copyright for this paper by its authors.;"Microsoft quantum development kit; Q#; Quantum programming; Quantum software engineering; Quantum software testing";"MicroSoft; Microsoft quantum development kit; Program testing; Q#; Quantum programming; Quantum programming languages; Quantum software engineering; Quantum software testing; Resource estimation; Software testings; Software testing";English;Conference Paper;Primary Study;Opinion papers;Software Testing;O trabalho detalha vários tipos comuns de programas quânticos e as maneiras de implementar testes de unidade para eles usando o QDK (Quantum Development Kit), usando trechos de código dos Quantum Katas como ilustração.;Várias maneiras de implementar testes unitários;Quantum software testing;
WOS0011;"Luo, JJ; Zhao, PZ; Miao, ZT; Lan, SH; Zhao, JJ";"Luo, Junjie; Zhao, Pengzhan; Miao, Zhongtao; Lan, Shuhan; Zhao, Jianjun";Kyushu University;A Comprehensive Study of Bug Fixes in Quantum Programs;2022;International Conference on Software Analysis, Evolution and Reengineering ;Software Engineering;SANER;1239;1246;9;As quantum programming evolves, more and more quantum programming languages are being developed. As a result, debugging and testing quantum programs have become increasingly important. While bug fixing in classical programs has come a long way, there is a lack of research in quantum programs. To this end, this paper presents a comprehensive study on bug fixing in quantum programs. We collect and investigate 96 real-world bugs and their fixes from four popular quantum programming languages (Qiskit, Cirq, Q#, and ProjectQ). Our study shows that a high proportion of bugs in quantum programs are quantum-specific bugs (over 80%), which requires further research in the bug fixing domain. We also summarize and extend the bug patterns in quantum programs and subdivide the most critical part, math-related bugs, to make it more applicable to the study of quantum programs. Our findings summarize the characteristics of bugs in quantum programs and provide a basis for studying testing and debugging quantum programs.;"Bug fixing; quantum software testing; quantum program debugging; empirical study";;English;Conference Paper;Primary Study;Evaluation research;Software Testing;"O artigo tem como objetivo investigar sistematicamente as características dos bugs e correções em programas quânticos, com o intuito de compreender os padrões mais comuns de falhas e os mecanismos de correção aplicados pelos desenvolvedores. A motivação central é oferecer uma base empírica que oriente práticas de desenvolvimento, depuração e manutenção de software no contexto quântico, onde os desafios são ampliados pela natureza probabilística e não determinística dos algoritmos.

As principais contribuições incluem a criação de um corpus com mais de 300 commits de correções extraídos de repositórios públicos que utilizam Qiskit e outras ferramentas quânticas. O estudo identifica categorias de bugs mais frequentes, como erros de operação quântica, problemas de medição e uso inadequado de APIs. Também são analisados os tipos de modificações aplicadas, como inserção de operações, reordenação de gates e ajustes de parâmetros. A pesquisa oferece recomendações práticas para ferramentas de apoio ao desenvolvimento quântico, sugerindo, por exemplo, melhores práticas para testes e melhorias em ambientes de desenvolvimento integrados.";O artigo tem como objetivo investigar sistematicamente as características dos bugs e correções em programas quânticos, com o intuito de compreender os padrões mais comuns de falhas e os mecanismos de correção aplicados pelos desenvolvedores.;Quantum software testing;
WOS0072;"Huang, LZ; Pei, HY; Li, YC; Yin, BB; Cai, KY";"Huang, Linzhi; Pei, Hanyu; Li, Yuechen; Yin, Beibei; Cai, Kai-Yuan";"Beihang University; University of Science & Technology Beijing";A Strategy of Dynamic Random Testing with Hybrid Distance Metrics for Quantum Programs;2024;International Conference on Software Quality, Reability and Security;Software Engineering;QRS;1;12;1;Quantum Computing (QC) leverages quantum mechanics to manipulate quantum information, holding greater potential than classical computing. To fully exploit QC's potential, it is crucial to ensure the reliability and quality of quantum programs. Research on quantum program testing is still at its early stage, in which some distinctive features of quantum programs, e.g., superposition and entanglement, may be overlooked, and the fault detection capability and testing effectiveness are rather limited. Besides, the input space of quantum programs may exponentially grow when the number of qubits increases, posing great challenges to testing quantum programs. It is imperative to develop a proper testing strategy to effectively select the potential failure-causing test cases and detect faults faster. In this paper, test cases with both basis states and superposition ones are considered and generated to cover more input space. A hybrid distance measurement method based on quantum fidelity and Hamming distance is presented for measuring the similarity among quantum test cases. Furthermore, a Dynamic Random Testing strategy based on Hybrid distance metrics (DRT-H) for quantum programs is proposed, which combines the hybrid distance metrics and the feedback mechanism of the classical Dynamic Random Testing (DRT) strategy to adjust the testing profile and guide the test case selection. Experimental studies demonstrate that the proposed DRT-H strategy outperforms the baseline testing strategies in most cases.;"Dynamic random testing; quantum program testing; hybrid distance metrics; superposition; software cybernetics; S-ADA";;English;Conference Paper;Primary Study;Evaluation research;Software Testing;"O artigo tem como objetivo propor uma estratégia de teste baseada em geração dinâmica e aleatória de casos de teste, utilizando métricas híbridas de distância para avaliar a eficácia de testes aplicados a programas quânticos. A motivação central é superar limitações das abordagens de teste convencionais, que são ineficazes diante das características probabilísticas e do grande espaço de estados dos programas quânticos.

Como contribuição, o estudo apresenta uma técnica de teste aleatório dinâmico (DRT) que incorpora uma métrica híbrida composta por distância euclidiana e distância baseada em fidelidade quântica, permitindo medir a similaridade entre estados quânticos de forma mais precisa. A estratégia proposta é avaliada por meio de experimentos com benchmarks em Qiskit, demonstrando maior taxa de detecção de falhas em comparação com métodos tradicionais. O trabalho contribui para o avanço das técnicas de verificação e validação no desenvolvimento de software quântico, oferecendo um método mais robusto e adaptado à sua natureza única.";O artigo tem como objetivo propor uma estratégia de teste baseada em geração dinâmica e aleatória de casos de teste, utilizando métricas híbridas de distância para avaliar a eficácia de testes aplicados a programas quânticos.;Quantum software testing;
WOS0127;"Imran, M; Cortellessa, V; Di Ruscio, D; Rubei, R; Traini, L";"Imran, Muhammad; Cortellessa, Vittorio; Di Ruscio, Davide; Rubei, Riccardo; Traini, Luca";University of L'Aquila;An Empirical Study on Code Coverage of Performance Testing;2024;International Conference on Evaluation and Assessment in Software Engineering  ;Software Engineering;EASE;48;57;2;Performance testing aims to ensure the operational efficiency of software systems. However, many factors influencing the efficacy and adoption of performance tests in practice are not yet fully understood. For instance, while code coverage is widely regarded as a key quality metric for evaluating the efficacy of functional testing suites, there is limited knowledge about the types and levels of coverage that performance tests specifically achieve. Another important factor, often perceived as a barrier to the broader adoption of performance tests yet remaining relatively unexplored, is their extended execution time. In this paper, we analyze the performance testing suites of 28 open-source systems to study (i) the magnitude of their code coverage, and (ii) their execution time. Our analysis shows that performance tests achieve significantly lower code coverage than functional tests, as expected, and it highlights a significant trade-off between coverage and execution time. Our results also suggest, in perspective, that automated test generation methods might not ensure affordable performance testing due to the associated time cost. This finding poses new challenges in the field of performance test generation.;"Performance Testing; Code Coverage; JMH; Microbenchmarking";;English;Conference Paper;Primary Study;Evaluation research;Software Testing;"O objetivo deste artigo é investigar empiricamente a relação entre testes de desempenho e cobertura de código em programas quânticos. Os autores buscam entender até que ponto os testes focados em performance são capazes de cobrir diferentes partes do código quântico, fornecendo evidências sobre a efetividade e os limites dessa prática no contexto do desenvolvimento quântico.

A principal contribuição do estudo é a análise de múltiplos programas implementados com Qiskit, avaliando como diferentes estratégias de teste de desempenho impactam a cobertura estrutural do código. Os resultados mostram que há uma lacuna significativa entre a intenção de medir desempenho e a real abrangência do código testado, o que levanta preocupações sobre a confiabilidade de tais testes em ambientes quânticos. O artigo propõe diretrizes para melhorar a cobertura nos testes de desempenho e destaca a necessidade de ferramentas específicas para o domínio quântico que aliem métricas de performance e cobertura de forma mais integrada.";O objetivo deste artigo é investigar empiricamente a relação entre testes de desempenho e cobertura de código em programas quânticos. ;Quantum software testing;
WOS0157;"Wang, XY; Arcaini, P; Yue, T; Ali, S";"Wang, Xinyi; Arcaini, Paolo; Yue, Tao; Ali, Shaukat";"Nanjing University of Aeronautics & Astronautics; Research Organization of Information & Systems (ROIS); National Institute of Informatics (NII) - Japan";Application of Combinatorial Testing to Quantum Programs;2021;International Conference on Software Quality, Reability and Security;Software Engineering;QRS;179;188;17;The capability of Quantum Computing (QC) in solving complex problems has been increasingly recognized. However, similar to classical computing, to fully exploit QC's potential, it is important to ensure the correctness of quantum programs. Doing so via software testing is, however, very challenging because of QC's inherent properties: superposition and entanglement. Towards the direction of ensuring the correctness of quantum programs, we propose an approach called QuCAT (QUantum CombinAtorial Testing) for systematic and automated testing of quantum programs by benefiting from combinatorial testing, which has been proven to be cost-effective in testing classical programs. QuCAT supports two combinatorial test suite generation scenarios, i.e., generating combinatorial test suites of a given strength, and incrementally generating and executing combinatorial test suites of increasing strength until a fault is found. The approach employs two types of test oracles to assess test results. We performed an empirical study with 18 faulty versions of quantum programs to evaluate QuCAT with strengths of two, three, and four in the two test generation scenarios. We compare the cost-effectiveness of combinatorial testing of various strengths and random testing (taken as baseline approach). Results show that combinatorial testing always performs better than random testing with the same cost and finds faults more quickly (in terms of required number of test cases). In addition, in most cases, combinatorial testing with a higher strength outperforms the lower strength in terms of effectiveness.;"quantum programs; quantum software testing; combinatorial testing";;English;Conference Paper;Primary Study;Evaluation research;Software Testing;O objetivo é avaliar a eficácia (\text{sr}_{ck}) e o custo (\lvert T_k \rvert) do Teste Combinatório (CT) aplicado a programas quânticos, comparando diferentes níveis de strength e comparando o CT com o teste aleatório.;Avaliar a eficácia de teste combinatório;Quantum software testing;
WOS0348;"Yamaguchi, M; Yoshioka, N";"Yamaguchi, Masaomi; Yoshioka, Nobukazu";"Fujitsu Ltd; Research Organization of Information & Systems (ROIS); National Institute of Informatics (NII) - Japan; Waseda University";Design by Contract Framework for Quantum Software;2023;International Workshop on Quantum Software Engineering;Quantum Software Engineering;QSE;24;25;0;To realize reliable quantum software, techniques to automatically ensure the quantum software's correctness have recently been investigated. However, they primarily focus on fixed quantum circuits rather than the procedure of building quantum circuits. Despite being a common approach, the correctness of building circuits using different parameters following the same procedure is not guaranteed. To this end, we propose a designby-contract framework for quantum software. Our framework provides a python-embedded language to write assertions on the input and output states of all quantum circuits built by certain procedures. Additionally, it provides a method to write assertions about the statistical processing of measurement results to ensure the procedure's correctness for obtaining the final result. These assertions are automatically checked using a quantum computer simulator. For evaluation, we implemented our framework and wrote assertions for some widely used quantum algorithms. Consequently, we found that our framework has sufficient expressive power to verify the whole procedure of quantum software.;"Programming by contract; Testing and Debugging; quantum computing";;English;Conference Paper;Primary Study;Proposal of solution;Software Testing;Propor um framework de design-by-contract para software quântico. A novidade deste framework é que ele pode verificar o procedimento de construção de circuitos quânticos e o pós-processamento estatístico. A contribuição inclui apresentar uma linguagem incorporada em Python para escrever asserções sobre estados de entrada (pré-estado) e estados de saída (pós-estado) de circuitos quânticos;Apresentar uma linguagem incorporada em Python para escrever asserções sobre estados de entrada (pré-estado) e estados de saída (pós-estado) de circuitos quânticos;Quantum software testing;
WOS0916;"Muqeet, A; Yue, T; Ali, S; Arcaini, P";"Muqeet, Asmar; Yue, Tao; Ali, Shaukat; Arcaini, Paolo";"University of Oslo; Oslo Metropolitan University (OsloMet); Research Organization of Information & Systems (ROIS); National Institute of Informatics (NII) - Japan";Mitigating Noise in Quantum Software Testing Using Machine Learning;2024;Transactions on Software Engineering;Software Engineering;TOSE;2947;2961;0;Quantum Computing (QC) promises computational speedup over classic computing. However, noise exists in near-term quantum computers. Quantum software testing (for gaining confidence in quantum software's correctness) is inevitably impacted by noise, i.e., it is impossible to know if a test case failed due to noise or real faults. Existing testing techniques test quantum programs without considering noise, i.e., by executing tests on ideal quantum computer simulators. Consequently, they are not directly applicable to test quantum software on real quantum computers or noisy simulators. Thus, we propose a noise-aware approach (named $\mathit{QOIN}$QOIN) to alleviate the noise effect on test results of quantum programs. $\mathit{QOIN}$QOIN employs machine learning techniques (e.g., transfer learning) to learn the noise effect of a quantum computer and filter it from a program's outputs. Such filtered outputs are then used as the input to perform test case assessments (determining the passing or failing of a test case execution against a test oracle). We evaluated $\mathit{QOIN}$QOIN on IBM's 23 noise models, Google's two available noise models, and Rigetti's Quantum Virtual Machine, with six real-world and 800 artificial programs. We also generated faulty versions of these programs to check if a failing test case execution can be determined under noise. Results show that $\mathit{QOIN}$QOIN can reduce the noise effect by more than $80\%$80% on most noise models. We used an existing test oracle to evaluate $\mathit{QOIN}$QOIN's effectiveness in quantum software testing. The results showed that $\mathit{QOIN}$QOIN attained scores of $99\%$99%, $75\%$75%, and $86\%$86% for precision, recall, and F1-score, respectively, for the test oracle across six real-world programs. For artificial programs, $\mathit{QOIN}$QOIN achieved scores of $93\%$93%, $79\%$79%, and $86\%$86% for precision, recall, and F1-score respectively. This highlights $\mathit{QOIN}$QOIN's effectiveness in learning noise patterns for noise-aware quantum software testing.;"Noise; Quantum computing; Qubit; Computers; Software testing; Logic gates; Computational modeling; Software testing and debugging; computing methodologies; quantum computing; and machine learning";;English;Article;Primary Study;Evaluation research;Software Testing;Propor uma abordagem sensível a ruído (QOIN) para mitigar o efeito do ruído nos resultados de testes de programas quânticos. QOIN emprega técnicas de machine learning (ML), como transfer learning, para aprender o efeito do ruído e filtrá-lo das saídas dos programas, auxiliando assim os testadores a determinar se uma falha é devido a ruídos ou falhas reais. Os resultados mostram que QOIN pode reduzir o efeito do ruído em mais de 80% na maioria dos modelos de ruído.;Abordagem para mitigar o efeito do ruído nos resultados de testes de programas quânticos. ;Quantum software testing;
WOS0956;"Mendiluze, E; Ali, S; Arcaini, P; Yue, T";"Mendiluze, Enaut; Ali, Shaukat; Arcaini, Paolo; Yue, Tao";"Research Organization of Information & Systems (ROIS); National Institute of Informatics (NII) - Japan; Nanjing University of Aeronautics & Astronautics";Muskit: A Mutation Analysis Tool for Quantum Software Testing;2021;International Conference on Automated Software Engineering;Software Engineering;ASE;1266;1270;32;Given that quantum software testing is a new area of research, there is a lack of benchmark programs and bugs repositories to assess the effectiveness of testing techniques. To this end, quantum mutation analysis focuses on systematically generating faulty versions of Quantum Programs (QPs), called mutants, using mutation operators. Such mutants can be used as benchmarks to assess the quality of test cases in a test suite. Thus, we present Muskit - a quantum mutation analysis tool for QPs coded in IBM's Qiskit language. Muskit defines mutation operators on gates of QPs and selection criteria to reduce the number of mutants to generate. Moreover, it allows for the execution of test cases on mutants and generation of results for test analyses. Muskit is provided as command line interface, GUI, and web application. We validated Muskit by using it to generate and execute mutants for four QPs.;"quantum programs; software testing; mutation analysis; quantum circuits";;English;Conference Paper;Primary Study;Proposal of solution;Software Testing;Apresentar Muskit, uma ferramenta de análise de mutação para teste de software quântico. Muskit foca na geração sistemática de versões defeituosas de Programas Quânticos (QPs), chamados mutantes, para serem usados como benchmarks para avaliar a qualidade dos casos de teste em um conjunto de testes. A ferramenta foi demonstrada gerando mutantes para quatro QPs.;Uma ferramenta de análise de mutação para teste de software quântico. ;Quantum software testing;
WOS1153;"Wang, JY; Zhang, Q; Xu, GH; Kim, M";"Wang, Jiyuan; Zhang, Qian; Xu, Guoqing Harry; Kim, Miryung";"University of California System; University of California Los Angeles";QDiff: Differential Testing of Quantum Software Stacks;2021;International Conference on Automated Software Engineering;Software Engineering;ASE;692;704;19;Over the past few years, several quantum software stacks (QSS) have been developed in response to rapid hardware advances in quantum computing. A QSS includes a quantum programming language, an optimizing compiler that translates a quantum algorithm written in a high-level language into quantum gate instructions, a quantum simulator that emulates these instructions on a classical device, and a software controller that sends analog signals to a very expensive quantum hardware based on quantum circuits. In comparison to traditional compilers and architecture simulators, QSSes are difficult to tests due to the probabilistic nature of results, the lack of clear hardware specifications, and quantum programming complexity. This work devises a novel differential testing approach for QSSes, named QDIFF with three major innovations: (1) We generate input programs to be tested via semantics-preserving, source to source transformation to explore program variants. (2) We speed up differential testing by filtering out quantum circuits that are not worthwhile to execute on quantum hardware by analyzing static characteristics such as a circuit depth, 2-gate operations, gate error rates, and T1 relaxation time. (3) We design an extensible equivalence checking mechanism via distribution comparison functions such as Kolmogorov-Smirnov test and cross entropy. We evaluate QDIFF with three widely-used open source QSSes: Qiskit from IBM, Cirq from Google, and Pyquil from Rigetti. By running QDIFF on both real hardware and quantum simulators, we found several critical bugs revealing potential instabilities in these platforms. QDIFF's source transformation is effective in producing semantically equivalent yet not-identical circuits (i.e., 34% of trials), and its filtering mechanism can speed up differential testing by 66%.;;;English;Conference Paper;Primary Study;Evaluation research;Software Testing;Desenvolver uma nova abordagem de teste diferencial para stacks de software quântico (QSSes), chamada QDIFF, para encontrar instabilidades significativas em plataformas quânticas. QDIFF inova ao gerar variantes de programas semanticamente equivalentes, filtrar circuitos que não valem a pena executar em hardware (economizando 66% das invocações) e usar métodos pluggable para comparar distribuições estatísticas.;Desenvolver uma nova abordagem de teste diferencial para stacks de software quântico para encontrar instabilidades significativas em plataformas quânticas.;Quantum software testing;
WOS1155;"Kashif, M; Al-Kuwari, S";"Kashif, Muhammad; Al-Kuwari, Saif";"Qatar Foundation (QF); Hamad Bin Khalifa University-Qatar";Qiskit As a Simulation Platform for Measurement-based Quantum Computation;2022;International Conference on Software Architecture Companion;Software Engineering;ICSA;152;159;3;Universal quantum computation is anticipated to provide solutions to classically intractable problems. Measurement-based quantum computation (MBQC) is one of the leading candidates to achieve universal quantum computation. In MBQC, the development of the underlying quantum algorithms is governed by single-qubit measurements on a highly entangled cluster state of qubits. Recent advances in MBQC mainly explore the physical aspects of MBQC (i.e. Physical development of cluster states) and as most of the simulators that exist today are for the gate-based model of quantum computation, and to date, there is no MBQC-dedicated simulator for MBQC-based algorithmic development. This paper exploits a well-maintained, and popular gate-based simulation framework developed by IBM called Qiskit to design MBQC-based quantum algorithms. We implement various gates, including Hadamard, and CNOT gates, to demonstrate the universality of MBQC in Qiskit. We also demonstrate MBCQ-based algorithm development in Qiskit by implementing MBQC-based teleportation protocol and Grover's algorithm. The objective of this exercise is to demonstrate that the existing gate-based simulators can be used for developing MBQC-based quantum designs, which would help the research community in exploring the advantages that MBQC can offer compared to other quantum computation models.;"Quantum computing; Measurement-based quantum computation; one-way quantum computer; Qiskit; Qubit measurements; Quantum gates; Grover's algorithm";STATE;English;Conference Paper;Primary Study;Proposal of solution;Software Testing;"O artigo apresenta o QuraTest, um framework de testes automatizados para programas quânticos, com o objetivo de lidar com os desafios de confiabilidade e verificação que surgem na programação quântica. A proposta busca preencher lacunas das ferramentas existentes, fornecendo suporte específico para testes estruturados e automatizados no contexto do desenvolvimento quântico.

Como contribuição, o QuraTest oferece uma arquitetura composta por três camadas — geração de dados de teste, execução de testes e análise de resultados — que permite testar funcionalidades específicas de algoritmos quânticos. O framework é capaz de executar testes em ambientes simulados e reais, como o IBM Quantum, e fornece métricas que auxiliam na identificação de falhas. O artigo também apresenta uma avaliação experimental do QuraTest em benchmarks conhecidos, demonstrando sua viabilidade e utilidade prática para melhorar a robustez do software quântico.";O artigo apresenta o QuraTest, um framework de testes automatizados para programas quânticos, com o objetivo de lidar com os desafios de confiabilidade e verificação que surgem na programação quântica.;Quantum software testing;
WOS1249;"Wang, XY; Arcaini, P; Yue, T; Ali, S";"Wang, Xinyi; Arcaini, Paolo; Yue, Tao; Ali, Shaukat";"Research Organization of Information & Systems (ROIS); National Institute of Informatics (NII) - Japan; Oslo Metropolitan University (OsloMet)";QuCAT: A Combinatorial Testing Tool for Quantum Software;2023;International Conference on Automated Software Engineering;Software Engineering;ASE;2066;2069;4;With the increased developments in quantum computing, the availability of systematic and automatic testing approaches for quantum programs is becoming increasingly essential. To this end, we present the quantum software testing tool QuCAT for combinatorial testing of quantum programs. QuCAT provides two functionalities of use. With the first functionality, the tool generates a test suite of a given strength (e.g., pair-wise). With the second functionality, it generates test suites with increasing strength until a failure is triggered or a maximum strength is reached. QuCAT uses two test oracles to check the correctness of test outputs. We assess the cost and effectiveness of QuCAT with 3 faulty versions of 5 quantum programs. Results show that combinatorial test suites with a low strength can find faults with limited cost, while a higher strength performs better to trigger some difficult faults with relatively higher cost. Repository: https://github.com/Simula- COMPLEX/qucat- tool Video: https://youtu.be/UsqgOudKLio;"quantum programs; software testing; combinatorial testing";;English;Conference Paper;Primary Study;Proposal of solution;Software Testing;Apresentar QuCAT, uma ferramenta automatizada para testes combinatórios de software quântico. O objetivo é oferecer funcionalidades que geram conjuntos de testes de força definida (por exemplo, pairwise) ou com força crescente até que uma falha seja acionada, fornecendo abordagens de teste sistemáticas e automáticas para programas quânticos.;QuCAT - uma ferramenta automatizada para testes combinatórios de software quântico. ;Quantum software testing;
WOS1251;"Wang, XY; Arcaini, P; Yue, T; Ali, S";"Wang, Xinyi; Arcaini, Paolo; Yue, Tao; Ali, Shaukat";"Nanjing University of Aeronautics & Astronautics; Research Organization of Information & Systems (ROIS); National Institute of Informatics (NII) - Japan";Quito: a Coverage-Guided Test Generator for Quantum Programs;2021;International Conference on Automated Software Engineering;Software Engineering;ASE;1237;1241;21;Automation in quantum software testing is essential to support systematic and cost-effective testing. Towards this direction, we present a quantum software testing tool called Quito that can automatically generate test suites covering three coverage criteria defined on inputs and outputs of a quantum program coded in Qiskit, i.e., input coverage, output coverage, and input-output coverage. Quito also implements two types of test oracles based on program specifications, i.e., checking whether a quantum program produced a wrong output or checking a probabilistic test oracle with statistical test. We describe the architecture and methodology of the tool. We also validated the tool with one quantum program and one faulty version of it. Results indicate that Quito can generate test suites and perform test assessments that detect faults, and produce test results with a good time performance.;"quantum programs; software testing; coverage criteria; test generation; test assessment";;English;Conference Paper;Primary Study;Proposal of solution;Software Testing;Apresentar a ferramenta Quito (QUantum InpuT Output testing), que visa automatizar e gerar conjuntos de testes de forma custo-efetiva, guiados por critérios de cobertura definidos nas entradas e saídas de um programa quântico codificado em Qiskit (cobertura de entrada, cobertura de saída e cobertura de entrada-saída).;Automatizar e gerar conjuntos de testes de forma custo-efetiva, guiados por critérios de cobertura definidos nas entradas e saídas de um programa quântico codificado em Qiskit;Quantum software testing;
WOS1255;"Ye, JM; Xia, SZ; Zhang, FY; Arcaini, P; Ma, L; Zhao, JJ; Ishikawa, F";"Ye, Jiaming; Xia, Shangzhou; Zhang, Fuyuan; Arcaini, Paolo; Ma, Lei; Zhao, Jianjun; Ishikawa, Fuyuki";"Kyushu University; University of Tokyo; University of Alberta";QuraTest: Integrating Quantum Specific Features in Quantum Program Testing;2023;International Conference on Automated Software Engineering;Software Engineering;ASE;1149;1161;6;The recent fast development of quantum computers breaks several computation limitations that are difficult for conventional computers. Up to the present, although many approaches and tools have been proposed to test quantum programs, the fundamental features of quantum programs, i.e., magnitude, phase, and entanglement, have been largely overlooked, leading to limited fault detection capability and reduced testing effectiveness. To address this problem, we propose an automated testing framework named QURATEST, equipped with three test case generators (including two newly proposed techniques, UCNOT and IQFT in this paper, as well as one based on Random techniques) to test quantum programs. Overall, the proposed generators enable the generation of diverse test inputs by considering the quantum features of quantum programs. In the experiments, we perform an in-depth evaluation of QURATEST from three aspects: generated test case diversity, output coverage of the program under test, and fault detection capability. The results demonstrate the potential of our newly proposed techniques in that IQFT can generate the most diverse test cases regarding magnitude, phase, and entanglement, with 66% cell coverage. Comparatively, the Random approach only has 10% cell coverage. Regarding the evaluations of the output coverage, IQFT can achieve the highest output coverage in 70.2% (33 out of 47) of all quantum programs. In terms of fault detection, UCNOT outperforms the other two techniques. Specifically, the test cases generated by UCNOT have the best mutation score in 88.4% (23 out of 26) quantum programs.;"Quantum program; test case generation; magnitude; phase; entanglement";;English;Conference Paper;Primary Study;Evaluation research;Software Testing;Propor o framework de teste automatizado QURATEST, equipado com geradores de casos de teste (incluindo UCNOT e IQFT) que integram as características fundamentais dos programas quânticos: magnitude, fase e emaranhamento. O objetivo é superar as limitações das abordagens anteriores que ignoravam esses recursos, melhorando a capacidade de detecção de falhas.;Framework de teste automatizado, equipado com geradores de casos de teste que integram as características fundamentais dos programas quânticos: magnitude, fase e emaranhamento. ;Quantum software testing;
WOS1516;"Long, PX; Zhao, JJ";"Long, Peixun; Zhao, Jianjun";"Chinese Academy of Sciences; Institute of Software, CAS; Chinese Academy of Sciences; University of Chinese Academy of Sciences, CAS; Kyushu University";Testing Multi-Subroutine Quantum Programs: From Unit Testing to Integration Testing;2024;Transactions on Software Engineering and Methodology;Software Engineering;TOSEM;;;5;Quantum computing has emerged as a promising field with the potential to revolutionize various domains by harnessing the principles of quantum mechanics. As quantum hardware and algorithms continue to advance, developing high-quality quantum software has become crucial. However, testing quantum programs poses unique challenges due to the distinctive characteristics of quantum systems and the complexity of multi-subroutine programs. This article addresses the specific testing requirements of multi-subroutine quantum programs. We begin by investigating critical properties by surveying existing quantum libraries and providing insights into the challenges of testing these programs. Building upon this understanding, we focus on testing criteria and techniques based on the whole testing process perspective, spanning from unit testing to integration testing. We delve into various aspects, including IO analysis, quantum relation checking, structural testing, behavior testing, integration of subroutine pairs, and test case generation. We also introduce novel testing principles and criteria to guide the testing process. We conduct comprehensive testing on typical quantum subroutines, including diverse mutants and randomized inputs, to evaluate our proposed approach. The analysis of failures provides valuable insights into the effectiveness of our testing methodology. Additionally, we present case studies on representative multi-subroutine quantum programs, demonstrating the practical application and effectiveness of our proposed testing principles and criteria.;"Quantum computing; software testing; unit testing; integration testing";;English;Article;Primary Study;Evaluation research;Software Testing;Abordar os requisitos específicos de teste de programas quânticos com múltiplas sub-rotinas, abrangendo toda a perspectiva do processo de teste, desde o teste de unidade até o teste de integração. O objetivo é fornecer uma abordagem sistemática e abrangente, incluindo novos princípios e critérios de teste, para garantir a correção e confiabilidade de sistemas de software quântico.;O objetivo é fornecer uma abordagem sistemática e abrangente, incluindo novos princípios e critérios de teste, para garantir a correção e confiabilidade de sistemas de software quântico.;Quantum software testing;
SCP0091;"Ali S.; Yue T.";"Ali, Shaukat (56962801700); Yue, Tao (25651096400)";Simula Research Laboratory, Engineering Complex Software Systems, Oslo, Norway;Quantum Software Testing: A Brief Introduction;2023;International Conference on Software Engineering;Software Engineering;ICSE;332;333;5;Quantum software testing concentrates on testing quantum programs to discover quantum faults in the programs cost-effectively. Given the foundations in quantum mechanics, the way quantum computations are performed is significantly different than classical computing. Therefore, quantum software testing also differs from classical software testing. There has been quite an interest in building quantum software testing techniques since 2019 in the software engineering (SE) community. Thus, we aim to introduce quantum software testing to the SE community. In particular, we will present the basic foundations of quantum computing and quantum programming as circuits, followed by the current state of the art on quantum software testing. Next, we will present some basic quantum software testing techniques and finally give the research directions that deserve attention from the SE community. © 2023 IEEE.;"quantum circuits; quantum programs; quantum software testing";"Quantum computers; Quantum optics; Timing circuits; Classical computing; Engineering community; In-buildings; Quantum circuit; Quantum Computing; Quantum program; Quantum programming; Quantum software testing; Software testing techniques; Software testings; Software testing";English;Conference Paper;Primary Study;Opinion papers;Software Testing;"O artigo tem como objetivo apresentar uma introdução abrangente ao campo de testes de software quântico, com o intuito de engajar a comunidade de engenharia de software nesse novo domínio. Os autores introduzem os fundamentos da programação quântica e discutem como os princípios únicos da computação quântica — como superposição e entrelaçamento — impactam diretamente as estratégias e desafios relacionados à verificação e validação de programas quânticos.

Como contribuição, o estudo sintetiza o estado da arte em testes de software quântico, cobrindo técnicas emergentes como critérios de cobertura de entrada e saída, testes diferenciais, fuzzing, testes mutacionais e testes metamórficos. São discutidos os desafios específicos da área, como a ausência de oráculos de teste, a natureza probabilística das saídas e a dificuldade de observar o estado do sistema sem colapsar sua superposição. Além disso, são apresentados exemplos de ferramentas e técnicas, como o Quito e o QuSBT, bem como lacunas que demandam investigações futuras, como o impacto do ruído de hardware e a escalabilidade das técnicas frente a programas mais complexos. O artigo se propõe, assim, a orientar novos pesquisadores e profissionais a contribuírem com soluções robustas e adaptadas à realidade da computação quântica.";O artigo tem como objetivo apresentar uma introdução abrangente ao campo de testes de software quântico.;Quantum Software Testing;2 páginas apenas
SCP0108;"Trovato A.; De Stefano M.; Pecorelli F.; Di Nucci D.; De Lucia A.";"Trovato, Antonio (59474766500); De Stefano, Manuel (57219489857); Pecorelli, Fabiano (57210934334); Di Nucci, Dario (57016777600); De Lucia, Andrea (7003641564)";"SeSa Lab, University of Salerno, Salerno, Italy; Dep. of Information Science and Technology, Pegaso Digital University, Naples, Italy";Reformulating regression test suite optimization using quantum annealing - an empirical study;2025;International Journal on Software Tools for Technology Transfer;Software Engineering;Int. J. Softw. Tools Technol. Trans.;0;0;1;Maintaining software quality is crucial in the dynamic landscape of software development. Regression testing ensures that software works as expected after changes are implemented. However, re-executing all test cases for every modification is often impractical and costly, particularly for large systems. Although very effective, traditional test suite optimization techniques are often impractical in resource-constrained scenarios, as they are computationally expensive. Hence, quantum computing solutions have been developed to improve their efficiency, but have shown drawbacks in terms of effectiveness. We propose reformulating the regression test case selection problem to use quantum computation techniques better. Our objectives are (i) to provide more efficient solutions than traditional methods and (ii) to improve the effectiveness of previously proposed quantum-based solutions. We propose SelectQA, a quantum annealing approach that can outperform the quantum-based approach BootQA in terms of effectiveness while obtaining results comparable to those of the classic Additional Greedy and DIV-GA approaches. Regarding efficiency, SelectQA outperforms DIV-GA and has similar results with the Additional Greedy algorithm, but is exceeded by BootQA. © The Author(s), under exclusive licence to Springer-Verlag GmbH Germany, part of Springer Nature 2025.;"Quantum computing; Regression testing; Search-based software engineering";"Computer software selection and evaluation; Constrained optimization; Quantum efficiency; Quantum electronics; Software design; Software quality; Empirical studies; Optimisations; Quantum annealing; Quantum Computing; Regression testing; Regression tests; Search-based; Search-based software engineering; Software Quality; Test case; Software testing";English;Article;Primary Study;Evaluation research;Software Testing;O trabalho propõe o SelectQA, um método para seleção de casos de teste que utiliza o recozimento quântico (quantum annealing). O objetivo é dar um passo significativo para melhorar a eficiência e eficácia do teste de regressão nos paradigmas contemporâneos de desenvolvimento de software.;Melhorar a otimização de testes de regressão usando quantum annealing;Quantum software testing optimization;
SCP0342;"Wang X.; Muqeet A.; Yue T.; Ali S.; Arcaini P.";"Wang, Xinyi (57224594100); Muqeet, Asmar (57914513400); Yue, Tao (25651096400); Ali, Shaukat (56962801700); Arcaini, Paolo (35791597000)";"Simula Research Laboratory, Oslo, Norway; University of Oslo, Oslo, Norway; Oslo Metropolitan University, Oslo, Norway; National Institute of Informatics, Tokyo, Japan";Test Case Minimization with Quantum Annealers;2024;Transactions on Software Engineering and Methodology;Software Engineering;TOSEM;0;0;0;Quantum annealers are specialized quantum computers for solving combinatorial optimization problems with special quantum computing characteristics, e.g., superposition and entanglement. Theoretically, quantum annealers can outperform classic computers. However, current quantum annealers are constrained by a limited number of qubits and cannot demonstrate quantum advantages. Nonetheless, research is needed to develop novel mechanisms to formulate combinatorial optimization problems for quantum annealing (QA). However, QA applications in software engineering remain unexplored. Thus, we propose BootQA, the very first effort at solving test case minimization (TCM) problems on classical software with QA. We provide a novel TCM formulation for QA and utilize bootstrap sampling to optimize the qubit usage. We also implemented our TCM formulation in three other optimization processes: simulated annealing (SA), QA without problem decomposition, and QA with an existing D-Wave problem decomposition strategy, and conducted an empirical evaluation with three real-world TCM datasets. Results show that BootQA outperforms QA without problem decomposition and QA with the existing decomposition strategy regarding effectiveness. Moreover, BootQA's effectiveness is similar to SA. Finally, BootQA has higher efficiency in terms of time when solving large TCM problems than the other three optimization processes.  © 2024 Copyright held by the owner/author(s). Publication rights licensed to ACM.;"D-Wave; quantum annealer; quantum computing; test case minimization";"Application programs; Constrained optimization; Quantum electronics; Quantum entanglement; Seismic waves; Shear waves; Simulated annealing; Software testing; Combinatorial optimization problems; D-wave; Decomposition strategy; Minimization problems; Optimisations; Problem decomposition; Quantum annealer; Quantum annealing; Quantum Computing; Test-case minimizations; Qubits";English;Article;Primary Study;Evaluation research;Software Testing;O estudo apresenta resultados experimentais relacionados à avaliação da abordagem BootQA para Minimização de Casos de Teste (TCM) utilizando quantum annealers, comparando seu desempenho com outras abordagens, como EIDQ e VQ.;Minimização de casos de teste;Quantum software testing optimization;
SCP0421;"Hussein H.; Younes A.; Abdelmoez W.";"Hussein, Hager (57213982640); Younes, Ahmed (7102505871); Abdelmoez, Walid (8347414700)";"Department of Software Engineering, College of Computing and Information Technology, Arab Academy for Science and Technology, Alexandria, Egypt; Department of Mathematics and Computer Science, Faculty of Science, Alexandria University, Alexandria, Egypt; School of Computer Science, University of Birmingham, Birmingham, B15 2TT, United Kingdom";Quantum algorithm for solving the test suite minimization problem;2021;Cogent Engineering;Engineering;Cogent Eng.;0;0;4;Test-suite minimization problem is an essential problem in software engineering as its application helps to improve the software quality. This paper proposes a quantum algorithm to solve the test-suite minimization problem with high probability in (Formula presented.), where (Formula presented.) is the number of test cases. It generates an incomplete superposition to find the best solution. It also handles the non-uniform amplitudes’ distribution case for the system with multisolutions. The proposed algorithm uses amplitude amplification techniques to search for the minimum number of test cases required to test all the requirements. The proposed algorithm employs two quantum search algorithms, Younes et al. algorithm for quantum searching via entanglement and partial diffusion to prepare incomplete superpositions that represent different search spaces such that the number of test cases is incremented in each search space, and updated Arima’s algorithm to handle the multisolutions case. The updated Arima’s algorithm searches for a quantum state that satisfies an oracle that represent the instance of the test-suite minimization problem. © 2021 The Author(s). This open access article is distributed under a Creative Commons Attribution (CC-BY) 4.0 license.;"Quantum Algorithm; Quantum Search; Superposition Preparation; Test-Suite Minimization";;English;Article;Primary Study;Proposal of solution;Software Testing;O estudo propõe um algoritmo quântico para resolver o problema de Minimização do Conjunto de Testes (TSMP), um problema essencial na engenharia de software. O algoritmo visa resolver o TSMP com alta probabilidade em uma complexidade de tempo ...;Minimização de conjunto de testes;Quantum software testing optimization;
SCP0609;"Wang X.; Ali S.; Yue T.; Arcaini P.";"Wang, Xinyi (57224594100); Ali, Shaukat (56962801700); Yue, Tao (25651096400); Arcaini, Paolo (35791597000)";"Simula Research Laboratory, Oslo, 0164, Norway; University of Oslo, Oslo, 0313, Norway; Oslo Metropolitan University, Oslo, Norway; National Institute of Informatics, Tokyo, 101-8430, Japan";Quantum Approximate Optimization Algorithm for Test Case Optimization;2024;Transactions on Software Engineering;Software Engineering;TOSE;3249;3264;1;Test case optimization (TCO) reduces the software testing cost while preserving its effectiveness. However, to solve TCO problems for large-scale and complex software systems, substantial computational resources are required. Quantum approximate optimization algorithms (QAOAs) are promising combinatorial optimization algorithms that rely on quantum computational resources, with the potential to offer increased efficiency compared to classical approaches. Several proof-of-concept applications of QAOAs for solving combinatorial problems, such as portfolio optimization, energy optimization in power systems, and job scheduling, have been proposed. Given the lack of investigation into QAOA's application for TCO problems, and motivated by the computational challenges of TCO problems and the potential of QAOAs, we present IGDec-QAOA to formulate a TCO problem as a QAOA problem and solve it on both ideal and noisy quantum computer simulators, as well as on a real quantum computer. To solve bigger TCO problems that require many qubits, which are unavailable these days, we integrate a problem decomposition strategy with the QAOA. We performed an empirical evaluation with five TCO problems and four publicly available industrial datasets from ABB, Google, and Orona to compare various configurations of IGDec-QAOA, assess its decomposition strategy of handling large datasets, and compare its performance with classical algorithms (i.e., Genetic Algorithm (GA) and Random Search). Based on the evaluation results achieved on an ideal simulator, we recommend the best configuration of our approach for TCO problems. Also, we demonstrate that our approach can reach the same effectiveness as GA and outperform GA in two out of five test case optimization problems we conducted. In addition, we observe that, on the noisy simulator, IGDec-QAOA achieved similar performance to that from the ideal simulator. Finally, we also demonstrate the feasibility of IGDec-QAOA on a real quantum computer in the presence of noise.  © 1976-2012 IEEE.;"QAOA; quantum computing; search-based software engineering; test case optimization";"Application programs; Combinatorial optimization; Computer software selection and evaluation; Cost engineering; Cost reduction; Investments; Job shop scheduling; Optimization algorithms; Quantum efficiency; Quantum electronics; Qubits; Scheduling algorithms; Approximate optimization; Optimisations; Optimization algorithms; Optimization problems; Quantum approximate optimization algorithm; Quantum Computing; Search-based; Search-based software engineering; Test case; Test case optimization; Software testing";English;Article;Primary Study;Evaluation research;Software Testing;O estudo apresenta a primeira aplicação do Quantum Approximate Optimization Algorithm (QAOA) para resolver problemas de Otimização de Caso de Teste (TCO), incluindo Seleção e Minimização de Casos de Teste para sistemas de software clássicos, propondo a abordagem IGDec-QAOA.;Minimização de casos de teste;Quantum software testing optimization;
SCP0414;"Tafliovich A.; Hehner E.C.R.";"Tafliovich, Anya (6504719858); Hehner, Eric C. R. (6603968900)";Dept. of Computer Science, University of Toronto, Toronto, Ont. M5S 3G4, Canada;Quantum predicative programming;2006;International Conference on Mathematics of Program Construction;Mathematics;MPC;433;454;8;The subject of this work is quantum predicative programming -the development of programs intended for execution on a quantum computer. We look at programming in the context of formal methods of program development, or programming methodology. Our work is based on probabilistic predicative programming, a recent generalisation of the well-established predicative programming. It supports the style of program development in which each programming step is proven correct as it is made. We inherit the advantages of the theory, such as its generality, simple treatment of recursive programs, time and space complexity, and communication, Our theory of quantum programming provides tools to write both classical and quantum specifications, develop quantum programs that implement these specifications, and reason about their comparative time and space complexity all in the same framework. © Springer-Verlag Berlin Heidelberg 2006.;;"Artificial intelligence; Computational complexity; Computer science; Probabilistic logics; Recursive functions; Software engineering; Programming methodology; Quantum computers; Quantum predicative programming; Space complexity; Computer programming";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo tem como objetivo apresentar uma estrutura formal para programação quântica denominada Quantum Predicative Programming, que visa descrever, especificar e verificar algoritmos quânticos de forma rigorosa e matemática. A proposta é estender técnicas clássicas de programação preditiva para o domínio quântico, promovendo a correção formal e o raciocínio lógico sobre algoritmos que envolvem estados e operações quânticas.

As contribuições do trabalho incluem a definição de um formalismo baseado em predicados que permite representar estados quânticos, medidas, probabilidades e transformações unitárias de forma declarativa. O artigo ilustra como a abordagem pode ser usada para especificar e derivar algoritmos quânticos bem conhecidos, como o algoritmo de Deutsch-Jozsa, a partir de suas propriedades desejadas. A estrutura proposta oferece uma base teórica robusta para a verificação formal de programas quânticos, favorecendo o desenvolvimento de software quântico confiável e rigoroso.";O artigo tem como objetivo apresentar uma estrutura formal para programação quântica denominada Quantum Predicative Programming, que visa descrever, especificar e verificar algoritmos quânticos de forma rigorosa e matemática. ;Quantum software verification;
SCP0228;Ying M.;Ying, Mingsheng (7005164090);"Centre for Quantum Software and Information, University of Technology Sydney, Sydney, 2007, NSW, Australia; State Key Laboratory of Computer Science, Institute of Software, Chinese Academy of Sciences, Beijing, China; Department of Computer Science and Technology, Tsinghua University, Beijing, China";Toward automatic verification of quantum programs;2019;Formal Aspects of Computing;Computer Science;Formal Aspects Comput;3;25;19;This paper summarises the results obtained by the author and his collaborators in a program logic approach to the verification of quantum programs, including quantum Hoare logic, invariant generation and termination analysis for quantum programs. It also introduces the notion of proof outline and several auxiliary rules for more conveniently reasoning about quantum programs. Some problems for future research are proposed at the end of the paper. © 2018, British Computer Society.;"Auxiliary rules; Hoare logic; Invariant generation; Proof outline; Quantum programming; Termination analysis";"Computation theory; Software engineering; Auxiliary rules; Hoare Logic; Invariant generations; Proof outline; Quantum programming; Termination analysis; Computer circuits";English;Article;Primary Study;Proposal of solution;Software Testing;"O artigo tem como objetivo propor uma abordagem baseada em análise de fluxo de dados para viabilizar a verificação automática de programas quânticos. A proposta surge da necessidade de oferecer mecanismos sistemáticos que assegurem correção e consistência em programas escritos para computadores quânticos, especialmente diante das limitações impostas por fenômenos como a superposição e o emaranhamento.

Como contribuição, os autores introduzem um algoritmo de análise que permite rastrear a propagação de estados quânticos ao longo do código, detectando automaticamente erros relacionados à manipulação indevida de qubits. O artigo também apresenta a formalização teórica da abordagem e discute como ela pode ser integrada a compiladores e ferramentas de desenvolvimento quântico. Ao avançar na direção da verificação automatizada, o estudo contribui para a construção de ambientes de desenvolvimento mais seguros e confiáveis no domínio da engenharia de software quântica.";O artigo tem como objetivo propor uma abordagem baseada em análise de fluxo de dados para viabilizar a verificação automática de programas quânticos.;Quantum software verification;
SCP0494;"Fitzjohn J.; Winckles A.; Wilson G.; Vicinanza D.";"Fitzjohn, James (57888225800); Winckles, Adrian (55329740800); Wilson, George (7404530373); Vicinanza, Domenico (57199509236)";Anglia Ruskin University, Cambridge, CB1 1PT, United Kingdom;A Software Development Kit and Translation Layer for Executing Intel 8080 Assembler on a Quantum Computer (August 2022);2022;Transactions on Quantum Engineering;Quantum Computing and/or Information;IEEE. Trans. Quantum. Eng.;0;0;3;One of the major obstacles to the adoption of quantum computing is the requirement to define quantum circuits at the quantum gate level. Many programmers are familiar with high-level or low-level programming languages but not quantum gates nor the low-level quantum logic required to derive useful results from quantum computers. The steep learning curve involved when progressing from quantum gates to complex simulations such as Shor's algorithm has proven too much for many developers. The purpose of this article and the software presented within addresses this challenge by providing a Software Development Kit (SDK), translation layer, emulator, and a framework of techniques for executing Intel 8080/Z80 assembler on a quantum computer, i.e., all salient points of CPU execution, logic, arithmetic, and bitwise manipulation will be executed on the quantum computer using quantum circuits. This provides a novel means of displaying the equivalency and interoperability of quantum and classical computers. Developers and researchers can use the SDK to write code in Intel 8080/Z80 assembler which is executed locally via traditional emulation and remotely on a quantum computer in parallel. The emulator features side-by-side code execution with visibility of the running quantum circuit and reusable/overridable methods. This enables programmers to learn, reuse, and contrast techniques for performing any traditional CPU-based technique/instruction on a quantum computer, e.g., a programmer may know how to multiply and perform checks on a classical CPU but is not able to perform the same tasks in a quantum implementation, and this SDK allows the programmer to pick and choose the methods they would like to use to fulfil their requirements. The SDK makes use of open-source software, specifically Python and Qiskit for the emulation, translation, API calls, and execution of user-supplied code or binaries.  © 2020 IEEE.;"Emulation; macro and assembly languages; processors; Qiskit; quantum computing; quantum gates; translation";"Application programs; Computation theory; Computer circuits; High level languages; Logic circuits; Logic gates; Open source software; Open systems; Quantum computers; Software design; Technology transfer; Timing circuits; Code; Emulation; Macro and assembly languages; Processor; Qiskit; Quantum circuit; Quantum Computing; Quantum gates; Random access memory; Translation; Program processors";English;Article;Primary Study;Evaluation research;Software Construction;"O artigo tem como objetivo apresentar um kit de desenvolvimento de software (SDK) para apoiar a criação de aplicações baseadas no modelo de computação quântica por portas lógicas. A proposta visa oferecer uma infraestrutura prática e programável que facilite o desenvolvimento, simulação e execução de algoritmos quânticos, servindo como ponte entre programadores e dispositivos quânticos.

Entre as contribuições destacam-se a definição da arquitetura do SDK, que abrange suporte à construção modular de circuitos quânticos, integração com simuladores e backends reais, e ferramentas para execução e análise de resultados. O trabalho apresenta exemplos práticos de uso do SDK, demonstrando como ele abstrai detalhes de baixo nível da computação quântica e permite que desenvolvedores foquem na lógica dos algoritmos. A abordagem contribui para a expansão do ecossistema de desenvolvimento em computação quântica, promovendo maior acessibilidade e produtividade.";O artigo tem como objetivo apresentar um kit de desenvolvimento de software (SDK) para apoiar a criação de aplicações baseadas no modelo de computação quântica por portas lógicas. ;Quantum softwate construction;
SCP0061;"Virgínio T.; Bastos L.; Bezerra C.; Ribeiro M.; Machado I.";"Virgínio, Tássio (57211264408); Bastos, Larissa (59531075300); Bezerra, Carla (56448432100); Ribeiro, Márcio (57199329234); Machado, Ivan (36998427800)";"Universidade Federal da Bahia Salvador, Bahia, Brazil; State University of Bahia Feira De, Bahia, Santana, Brazil; Federal University of Ceara, Ceará, Quixada, Brazil; Federal University of Alagoas, Alagoas, Maceió, Brazil";How Aware Are We of Test Smells in Quantum Software Systems? A Preliminary Empirical Evaluation;2024;Brazilian Symposium on Software Quality;Software Engineering;SBQS;383;393;0;Context: With the rapid progress of quantum computing, Quantum Software Engineering (QSE) is establishing itself as an essential discipline to support developers throughout all stages of quantum software development. The area of testing in quantum systems has received greater attention in research on this topic to guarantee the quality and reliability of these technologies. Objective: This paper presents an empirical study focused on the testing of quantum software at its classical layer. Specifically, it aims to identify and analyze the unique characteristics of quantum software tests, particularly in terms of Test Smells, their distribution, recurrence, and differences compared to classical software tests. Method: We used two sets of software from previous studies, one comprising 12 quantum software and the other comprising 80 classical software. From these datasets, we conducted an analysis to detect 10 test smells, allowing us to map their dispersion in quantum software, identify their specific characteristics, and draw comparisons with classical software. Results: Our findings reveal a high dispersion of test smells of 51% in quantum software. Furthermore, quantum tests exhibit statistical differences from classical software tests, with the most outlier being Conditional Test Logic, which is 20% more frequent than in classical software. Conclusions: The insights gained from this study can contribute to enhancing the quality, maintainability, and readability of tests written for the classical layer of quantum software. Ultimately, this can improve the overall understanding and quality of quantum software. © 2024 Copyright held by the owner/author(s).;"Empirical Evaluation; Quantum Software Systems; Software Testing; Test Smells";"Computer software selection and evaluation; Quantum electronics; Software design; Software quality; Software reliability; Empirical evaluations; Empirical studies; High dispersion; Quantum Computing; Quantum software system; Quantum system; Software testings; Software-systems; Statistical differences; Test smell; Software testing";English;Conference Paper;Primary Study;Evaluation research;Software Testing;"O artigo tem como objetivo investigar a presença de test smells — más práticas ou estruturas problemáticas em código de teste — no contexto da engenharia de software quântica, analisando em que medida essas ocorrências impactam a manutenibilidade e a confiabilidade dos testes em programas quânticos. A motivação central é entender se práticas consolidadas de teste na engenharia de software clássica estão sendo adaptadas adequadamente ao novo paradigma quântico.

Como contribuição, os autores conduzem um estudo empírico com 127 projetos escritos em Qiskit, totalizando mais de 3.600 arquivos de teste, a fim de identificar padrões recorrentes de test smells, como ausência de asserções, testes redundantes e hard-coded values. Os resultados mostram que a maioria dos projetos apresenta pelo menos um tipo de smell, o que sugere fragilidade nos testes e risco elevado de manutenção inadequada. O artigo também propõe ações corretivas e destaca a necessidade urgente de ferramentas e diretrizes específicas para apoiar a escrita de testes eficazes em software quântico, contribuindo para o fortalecimento da disciplina de teste nesse domínio emergente.";Os autores conduziram um estudo empírico com 127 projetos escritos em Qiskit, totalizando mais de 3.600 arquivos de teste, a fim de identificar padrões recorrentes de test smells, como ausência de asserções, testes redundantes e hard-coded values. ;Quantum test smells;
SCP0149;"Zhang L.; Miranskyy A.";"Zhang, Lei (57204464829); Miranskyy, Andriy (9041935500)";"University of Maryland Baltimore County, Department of Information Systems, Maryland, United States; Toronto Metropolitan University, Department of Computer Science, Ontario, Canada";Automated Flakiness Detection in Quantum Software Bug Reports;2024;International Conference on Quantum Computing and Engineering;Quantum Computing and/or Information;QCE;179;181;0;A flaky test yields inconsistent results upon repetition, posing a significant challenge to software developers. An extensive study of their presence and characteristics has been done in classical computer software but not quantum computer software. In this paper, we outline challenges and potential solutions for the automated detection of flaky tests in bug reports of quantum software. We aim to raise awareness of flakiness in quantum software and encourage the software engineering community to work collaboratively to solve this emerging challenge. © 2024 IEEE.;"flaky tests; quantum software engineering; quantum software testing";"Computer aided software engineering; Quantum electronics; Quantum optics; Automated detection; Bug reports; Engineering community; Flaky test; Quanta computers; Quantum software engineering; Quantum software testing; Software bug; Software developer; Software testings; Software testing";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo tem como objetivo investigar a viabilidade e os desafios da detecção automatizada de testes instáveis (flaky tests) em relatórios de bugs de softwares quânticos. A motivação surge da crescente preocupação com a confiabilidade dos testes em programas quânticos, dado o caráter intrinsecamente não determinístico da computação quântica, o que pode gerar resultados inconsistentes em execuções repetidas de um mesmo teste.

O estudo contribui ao propor uma agenda de pesquisa para detecção automatizada de flakiness em relatórios de bugs, explorando abordagens baseadas em aprendizado supervisionado e semi-supervisionado. Os autores analisaram 5.484 relatórios de bugs em 12 projetos de software quântico e identificaram 46 casos de flaky tests, classificando-os em oito tipos de instabilidade e sete padrões de correção. Também são discutidas as principais dificuldades para treinamento de modelos, como o desequilíbrio e a escassez de dados, além de sugerirem o uso de técnicas como aprendizado por transferência e active learning. Por fim, o trabalho destaca a importância de integrar esses modelos em ferramentas de desenvolvimento, como o GitHub Actions, para identificar automaticamente testes instáveis e melhorar a qualidade do software quântico.";O trabalho investigou a viabilidade e os desafios da detecção automatizada de testes instáveis (flaky tests) em relatórios de bugs de softwares quânticos. O estudo contribui ao propor uma agenda de pesquisa para detecção automatizada de flakiness em relatórios de bugs, explorando abordagens baseadas em aprendizado supervisionado e semi-supervisionado.;Quantum testing flaky;
SCP0089;"Zhang L.; Radnejad M.; Miranskyy A.";"Zhang, Lei (57204464829); Radnejad, Mahsa (57209642166); Miranskyy, Andriy (9041935500)";"University of Maryland, Baltimore County, Department of Information Systems, Baltimore, United States; Islamic Azad University, Isfahan Branch, Department of Computer Engineering, Isfahan, Iran; Toronto Metropolitan University, Department of Computer Science, Toronto, Canada";Identifying Flakiness in Quantum Programs;2023;International Symposium on Empirical Software Engineering and Measurement;Software Engineering;Int. Symp. Empir. Softw. Eng. Meas.;0;0;3;In recent years, software engineers have explored ways to assist quantum software programmers. Our goal in this paper is to continue this exploration and see if quantum software programmers deal with some problems plaguing classical programs. Specifically, we examine whether intermittently failing tests, i.e., flaky tests, affect quantum software development. To explore flakiness, we conduct a preliminary analysis of 14 quantum software repositories. Then, we identify flaky tests and categorize their causes and methods of fixing them. We find flaky tests in 12 out of 14 quantum software repositories. In these 12 repositories, the lower boundary of the percentage of issues related to flaky tests ranges between 0.26% and 1.85% per repository. We identify 46 distinct flaky test reports with 8 groups of causes and 7 common solutions. Further, we notice that quantum programmers are not using some of the recent flaky test countermeasures developed by software engineers. This work may interest practitioners, as it provides useful insight into the resolution of flaky tests in quantum programs. Researchers may also find the paper helpful as it offers quantitative data on flaky tests in quantum software and points to new research opportunities.  © 2023 IEEE.;"flaky tests; quantum software engineering; software testing";"Software design; Flaky test; Lower boundary; Preliminary analysis; Quantitative data; Quantum software engineering; Research opportunities; Software repositories; Software testings; Test range; Test reports; Software testing";English;Conference Paper;Primary Study;Evaluation research;Software Quality;Realizar um estudo empírico inicial focado em flakiness em programas quânticos de código aberto para responder a questões de pesquisa, analisando relatórios de testes flaky.;Realizar um estudo empírico inicial focado em flakiness em programas quânticos de código aberto para responder a questões de pesquisa, analisando relatórios de testes flaky.;Quantum testing flaky;
SCP0092;"Pérez-Castillo R.; Piattini M.";"Pérez-Castillo, Ricardo (34977424500); Piattini, Mario (7004203473)";"Faculty of Social Sciences and IT, UCLM, Av. Real Fábrica de Seda s/n, Talavera de la Reina, 45600, Spain; Information Technology and Systems Institute, UCLM, Camino Moledores s/n, Ciudad Real, 13005, Spain";Design of classical-quantum systems with UML;2022;Computing;Computer Science;Comput.;2375;2403;17;"Developers of the many promising quantum computing applications that currently exist are urging companies in many different sectors seriously consider integrating this new technology into their business. For these applications to function, not only are quantum computers required, but quantum software also. Accordingly, quantum software engineering has become an important research field, in that it attempts to apply or adapt existing methods and techniques (or propose new ones) for the analysis, design, coding, and testing of quantum software, as well as playing a key role in ensuring quality in large-scale productions. The design of quantum software nevertheless poses two main challenges: the modelling of software quantum elements must be done in high-level modelling languages; and the need to further develop so-called “hybrid information systems”, which combine quantum and classical software. To address these challenges, we first propose a quantum UML profile for analysing and designing hybrid information systems; we then demonstrate its applicability through various structural and behavioural diagrams such as use case, class, sequence, activity, and deployment. In comparison to certain other quantum domain-specific languages, this UML profile ensures compliance with a well-known international standard that is supported by many tools and is followed by an extensive community. © 2022, The Author(s).";"Quantum computing; Quantum modelling; Quantum software engineering; Software design; UML";"Application programs; Information systems; Information use; Modeling languages; Problem oriented languages; Quantum computers; Quantum optics; Regulatory compliance; Software testing; Well testing; Classical-quantum; Computing applications; Hybrid information system; Quanta computers; Quantum Computing; Quantum models; Quantum software engineering; Quantum system; Research fields; UML; Software design";English;Article;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo tem como objetivo investigar a aplicabilidade da Linguagem de Modelagem Unificada (UML) no projeto de sistemas híbridos que combinam componentes clássicos e quânticos. A proposta busca adaptar e estender os elementos da UML tradicional para representar conceitos fundamentais da computação quântica, permitindo que desenvolvedores utilizem práticas consagradas da engenharia de software no contexto de programas quânticos.

Como contribuição, o estudo introduz um perfil UML preliminar para descrever programas quânticos, incorporando estereótipos e elementos gráficos específicos para representar qubits, portas quânticas, medições e interações entre partes clássicas e quânticas do sistema. O artigo também apresenta estudos de caso que demonstram a modelagem de sistemas híbridos por meio de diagramas de classes e de atividades, destacando a viabilidade e os benefícios da abordagem. Ao promover a reutilização de práticas clássicas de modelagem, o trabalho contribui para a integração da computação quântica ao ecossistema tradicional de desenvolvimento de software, facilitando a adoção e a colaboração entre especialistas de diferentes áreas.";O artigo tem como objetivo investigar a aplicabilidade da Linguagem de Modelagem Unificada (UML) no projeto de sistemas híbridos que combinam componentes clássicos e quânticos;Quantum uml modeling ;
SCP0096;Kim D.-K.;Kim, Dae-Kyoo (56109731300);Oakland University, Rochester, 48309, MI, United States;A Metamodel-Based Approach to Quantum Software Development;2025;Software;Software Engineering;IEEE Software;0;0;0;Quantum computing introduces a significant shift in computation using principles like superposition, entanglement, and quantum interference to tackle problems that were previously unsolvable. Software engineers face challenges in quantum software development due to a limited understanding of quantum concepts and their lack of equivalents in classical computing. This paper introduces a metamodel-based approach that maps quantum concepts onto familiar software constructs. Through a multi-level framework, it connects abstract quantum ideas, represented as metaclasses, with their practical applications in model instances and implementations. The paper uses the Deutsch-Jozsa algorithm to demonstrate how the metamodel makes quantum algorithms accessible to software engineers.  © 1984-2012 IEEE.;;"Application programs; Computer aided software engineering; Quantum electronics; Quantum entanglement; Quantum interference devices; Quantum optics; Software design; Classical computing; Deutsch-Jozsa algorithms; Meta model; Metaclass; Multilevels; Quantum algorithms; Quantum Computing; Quantum interference; Software constructs; Quantum computers";English;Article;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo tem como objetivo apresentar uma abordagem baseada em metamodelos para apoiar o desenvolvimento de software quântico. A proposta visa reduzir a lacuna conceitual enfrentada por engenheiros de software que não têm familiaridade com os princípios da computação quântica, ao mapear conceitos quânticos como superposição, entrelaçamento e interferência para abstrações familiares da engenharia de software. Para isso, o autor define uma estrutura multinível que parte da modelagem abstrata dos conceitos, passa por sua instanciação, implementação e execução prática em ferramentas como o Qiskit.

Como contribuição, o artigo propõe um metamodelo detalhado que representa elementos fundamentais da computação quântica como metaclasses (qubit, estados, portas, medições), permitindo sua visualização e manipulação em um fluxo coerente de desenvolvimento. A abordagem é exemplificada com a implementação do algoritmo Deutsch-Jozsa, demonstrando como os modelos podem ser traduzidos em código executável e visualizações interpretativas (esferas de Bloch, Q-spheres). Além disso, a estrutura é extensível, permitindo incorporar conceitos de execução e análise de resultados, o que potencializa a adoção dessa proposta por engenheiros de software e educadores interessados em integrar práticas clássicas e quânticas de desenvolvimento.";O artigo propõe um metamodelo detalhado que representa elementos fundamentais da computação quântica como metaclasses (qubit, estados, portas, medições), permitindo sua visualização e manipulação em um fluxo coerente de desenvolvimento.;Quantum uml modeling ;
SCP0066;"Feng Y.; Ying M.-S.";"Feng, Yuan (7404543986); Ying, Ming-Sheng (7005164090)";"University of Technology Sydney, Australia; State Key Laboratory of Computer Science, Institute of Software, The Chinese Academy of Sciences, Beijing, 100190, China; Department of Computer Science and Technology, Tsinghua University, Beijing, 100084, China";Verification of Quantum Programs;2018;Journal of Software;Software Engineering;Ruan Jian Xue Bao;1085;1093;0;With the rapid development of quantum hardware, people tend to believe that special-purpose quantum computers with more than 100 qubits will be available in 5 to 10 years. It is conceivable that, once this becomes a reality, the development of quantum software will be crucial in harnessing the power of quantum computers. However, due to the distinguishable features of quantum mechanics, such as the no-cloning of quantum information and the nonlocal effect of entanglement, developing correct and efficient quantum programs and communication protocols is a challenging issue. Formal verification methods, particularly model checking techniques, have proven effective in classical software design and system modelling. Therefore, formal verification of quantum software has received more and more attention recently. This article reviews recent research findings in verification of both sequential quantum programs and quantum communication protocols, with the focus placed on the work of the two authors' research groups. Future directions and challenges in this area are also discussed. © Copyright 2018, Institute of Software, the Chinese Academy of Sciences. All rights reserved.;"Model checking, verification of communication protocol; Program verification; Quantum computing";"Computer software; Formal verification; Model checking; Quantum computers; Quantum entanglement; Quantum optics; Software design; Formal verification methods; Model-checking techniques; Non-local effect; Of quantum-information; Program Verification; Quantum Computing; Recent researches; System modelling; Quantum communication";English;Article;Primary Study;Proposal of solution;Software Quality;"O artigo tem como objetivo identificar os principais desafios e delinear oportunidades de pesquisa no campo da verificação de programas quânticos, enfatizando a complexidade inerente à natureza probabilística e à manipulação de estados quânticos. Os autores argumentam que, para garantir a confiabilidade do software quântico em aplicações reais, é imprescindível desenvolver técnicas formais e ferramentas específicas para análise, teste e verificação, dado que abordagens clássicas não são diretamente aplicáveis ao novo paradigma computacional.

Como contribuição, o estudo categoriza os desafios em três frentes principais: (i) verificação de propriedades funcionais dos programas quânticos, considerando os efeitos probabilísticos e de medição; (ii) análise e depuração de comportamento indesejado em presença de ruído e decoerência; e (iii) desenvolvimento de técnicas formais e linguagens que viabilizem raciocínio preciso sobre o estado e a evolução dos sistemas quânticos. Além de revisar esforços existentes, o artigo propõe uma agenda de pesquisa voltada à criação de linguagens formais, lógicas de verificação e estruturas de modelagem apropriadas para o domínio quântico, sinalizando a verificação como componente central para a maturação da engenharia de software quântica.";O artigo tem como objetivo identificar os principais desafios e delinear oportunidades de pesquisa no campo da verificação de programas quânticos, enfatizando a complexidade inerente à natureza probabilística e à manipulação de estados quânticos.;Quantum verification and validation;
SCP0046;"Haghparast M.; Mikkonen T.; Nurminen J.K.; Stirbu V.";"Haghparast, Majid (23094283500); Mikkonen, Tommi (57220096141); Nurminen, Jukka K. (6603849383); Stirbu, Vlad (57249175700)";"University of Jyväskylä, Jyväskylä, Finland; University of Helsinki, Helsinki, Finland";Quantum Software Engineering Challenges from Developers' Perspective: Mapping Research Challenges to the Proposed Workflow Model;2023;International Conference on Quantum Computing and Engineering;Quantum Computing and/or Information;QCE;173;176;5;Despite the increasing interest in quantum computing, the aspect of development to achieve cost-effective and reliable quantum software applications has been slow. One barrier is the software engineering of quantum programs, which can be approached from two directions. On the one hand, many software engineering practices, debugging in particular, are bound to classical computing. On the other hand, quantum programming is closely associated with the phenomena of quantum physics, and consequently, the way we express programs resembles the early days of programming. Moreover, much of the software engineering research today focuses on agile development, where computing cycles are cheap and new software can be rapidly deployed and tested, whereas in the quantum context, executions may consume lots of energy, and test runs may require lots of work to interpret. In this paper, we aim at bridging this gap by starting with the quantum computing workflow and by mapping existing software engineering research to this workflow. Based on the mapping, we then identify directions for software engineering research for quantum computing.  © 2023 IEEE.;"quantum computing; Quantum software engineering; software development";"Application programs; Cost effectiveness; Engineering research; Program debugging; Quantum computers; Software design; Software testing; Cost effective; Engineering challenges; Perspective mapping; Quantum Computing; Quantum software engineering; Research challenges; Software applications; Software engineering research; Work-flows; Workflow models; Mapping";English;Conference Paper;Primary Study;Opinion papers;Software Engineering Process;"O artigo tem como objetivo analisar os desafios enfrentados por desenvolvedores no contexto da engenharia de software quântica, propondo um modelo de fluxo de trabalho para o desenvolvimento, implantação e interpretação de programas quânticos. A intenção é mapear as lacunas atuais da pesquisa em engenharia de software em relação às necessidades práticas da computação quântica, conciliando práticas tradicionais, como o desenvolvimento iterativo e métodos formais, com as particularidades da computação quântica.

Como contribuição, os autores apresentam um modelo de workflow dividido em três etapas principais: composição, implantação e interpretação de programas quânticos. A partir desse modelo, são discutidas questões como a escassez de algoritmos quânticos reutilizáveis, os desafios na transpiração de circuitos, limitações no uso de métodos formais, e a necessidade de ferramentas específicas para análise de resultados estocásticos. O trabalho propõe uma agenda de pesquisa que inclui a criação de taxonomias para identificação de problemas que se beneficiam da computação quântica, desenvolvimento de ferramentas de verificação, métodos de correção de erros orientados por machine learning, e técnicas de interpretação baseadas em ciência de dados, apontando caminhos para a maturação da engenharia de software quântica com base em desafios reais enfrentados por desenvolvedores.";Os autores analisaram os desafios enfrentados por desenvolvedores no contexto da engenharia de software quântica e proporam um modelo de fluxo de trabalho para o desenvolvimento, implantação e interpretação de programas quânticos.;Quantum workflow;
SCP0062;"Becker C.K.-U.; Gheorghe-Pop I.-D.; Tcholtchev N.";"Becker, Colin Kai-Uwe (57313592200); Gheorghe-Pop, Ilie-Daniel (56960502400); Tcholtchev, Nikolay (35231572100)";Fraunhofer Institute for Open Communication Systems (FOKUS), Germany;A Testing Pipeline for Quantum Computing Applications;2023;International Conference on Quantum Software;Quantum Software Engineering;QSW;54;59;1;As the scientific community is increasing the coverage of the quantum computing domain ranging from theoretical physics to financial applications, so does the number of quantum computing applications being developed for quantum computing hardware that is available today. As this hardware evolves towards increased capacity in terms of qubit number and increased fidelity, so does the complexity of quantum computing applications that implement the state-of-the-art of (hybrid) quantum algorithms. With this comes an increased demand for quantum software engineering practices where testing is a crucial part of the development process. Hence, a robust approach that addresses certain challenges and peculiarities related to the quantum computing domain is needed for the testing process. This paper proposes a standard-ready testing pipeline that covers the requirements of testing in a continuous development cycle as part of a modern quantum software engineering lifecycle. © 2023 IEEE.;"Debugging; NISQ; Quantum computing; Quantum Software Engineering; Testing";"Application programs; Pipelines; Program debugging; Quantum computers; Software testing; Community IS; Computing applications; Computing domain; Debugging; Financial applications; NISQ; Quantum Computing; Quantum software engineering; Scientific community; Theoretical physics; Life cycle";English;Conference Paper;Primary Study;Proposal of solution;Software Testing;Desenvolveu-se um framework de teste que ofereça funcionalidades de debugging e unit testing em Python para simplificar e tornar mais acessível o processo para desenvolvedores com background em computação clássica.;Framework de teste unitário e debugging;Quatum software testing;
SCP0002;"Hevia J.L.; Peterssen G.; Piattini M.";"Hevia, Jose Luis (57215681148); Peterssen, Guido (57215696794); Piattini, Mario (7004203473)";"Quantum Software Technology, Spain; University of Castilla-La Mancha, Spain";QUANTUM SOFTWARE DEVELOPMENT RISKS;2024;Quantum Information and Computation;Quantum Computing and/or Information;Quantum Inf. Comput.;455;467;0;In the last five years we have witnessed the emergence of numerous quantum computers, as well as dozens of quantum programming languages, platforms, etc… But it must be borne in mind that quantum computing is still in a state of technological flux, so it is essential to carry out a good risk assessment. Furthermore, it is necessary to try to mitigate the risks to safeguard the investments that organisations are starting to make in quantum software development. We identify some of the major risks associated with quantum computing, and specially quantum software and we also show a real case of risk mitigation based on technology. © 2024, Rinton Press Inc. All rights reserved.;"Quantum computing; quantum risks; quantum software development; quantum software engineering; quantum software platforms";"Quantum theory; Risk assessment; Software design; Development risk; Quanta computers; Quantum Computing; Quantum programming languages; Quantum risk; Quantum software development; Quantum software engineering; Quantum software platform; Risks assessments; Software platforms; Quantum computers";English;Article;Primary Study;Opinion papers;Software Security;"O artigo tem como objetivo investigar os riscos associados ao desenvolvimento de software quântico, considerando tanto os fatores técnicos quanto os organizacionais que impactam esse processo. A proposta surge da percepção de que o campo da engenharia de software quântica ainda carece de uma compreensão sistemática dos riscos envolvidos, o que dificulta a definição de estratégias eficazes para mitigação e planejamento de projetos.

Como contribuição, os autores conduzem um estudo exploratório baseado em entrevistas com especialistas da área, a partir do qual identificam e classificam uma série de riscos recorrentes. Os resultados são organizados em categorias como riscos relacionados à tecnologia, à formação da equipe, às ferramentas de desenvolvimento e à incerteza quanto à evolução do ecossistema quântico. O estudo também oferece um conjunto inicial de recomendações para lidar com esses riscos e propõe uma agenda de pesquisa voltada ao aprofundamento da gestão de riscos no desenvolvimento de software quântico.";Investiga os riscos associados ao desenvolvimento de software quântico, considerando tanto os fatores técnicos quanto os organizacionais que impactam esse processo.;Risks of quantum software;
SCP0012;"Liimatta P.; Taipale P.; Halunen K.; Heinosaari T.; Mikkonen T.; Stirbu V.";"Liimatta, Petri (59368035300); Taipale, Pauli (59367713000); Halunen, Kimmo (24512014900); Heinosaari, Teiko (24467941500); Mikkonen, Tommi (57220096141); Stirbu, Vlad (57249175700)";"OP Financial Group, Helsinki, 00510, Finland; University of Oulu, Oulu, 90570, Finland; University of Jyväskylä, Jyväskylä, 40014, Finland";Research Versus Practice in Quantum Software Engineering: Experiences From Credit Scoring Use Case;2024;Software;Software Engineering;IEEE Software;9;16;0;The emergence of quantum computing proposes a revolutionary paradigm that can radically transform numerous scientific and industrial application domains. However, realizing this promise in industrial applications is far from being practical today. In this paper, we discuss industry experiences with respect to quantum computing, and the gap between quantum software engineering research and state-of-the-practice in industry-scale quantum computing.  © 2024 IEEE.;;"Application programs; Computer aided software engineering; Engineering research; Industrial research; Quantum efficiency; Quantum electronics; Quantum optics; Applications domains; Credit scoring; Industry experience; Quantum Computing; Software engineering research; State of the practice; Quantum computers";English;Article;Primary Study;Personal experience papers;The Software Engineering in General;"O artigo tem como objetivo investigar a distância entre os avanços teóricos da engenharia de software quântica e sua aplicação prática na indústria. Para isso, os autores realizaram um estudo de caso no setor financeiro, aplicando técnicas de quantum annealing para resolver o problema de seleção de variáveis em modelos de crédito, com o intuito de avaliar a viabilidade e as limitações práticas do uso de computadores quânticos em contextos reais de negócios.

Como contribuição, o estudo apresenta uma análise crítica sobre os principais desafios enfrentados na aplicação prática da computação quântica, como a limitação de conectividade dos qubits, a dificuldade de adaptação de algoritmos clássicos e os elevados custos de pré e pós-processamento. Apesar de constatar que ainda não é possível obter vantagem quântica em comparação com métodos clássicos como o simulated annealing, os autores destacam que a aplicação prática fornece aprendizados importantes para o avanço da engenharia de software quântica, especialmente no que diz respeito à seleção de problemas adequados, ao uso de ferramentas de verificação formal e à necessidade de mais experimentação em cenários reais.";Estudo de caso aplicando métodos e técnicas da engenharia de software no setor financeiro. ;Software Engineering methods and techniques;
SCP0180;"Exman I.; Shmilovich A.T.";"Exman, Iaakov (6602763312); Shmilovich, Alon Tsalik (57222867259)";The Jerusalem College of Engineering-Azrieli, Software Engineering Department, Jerusalem, Israel;Quantum Software Models: The Density Matrix for Classical and Quantum Software Systems Design;2021;International Workshop on Quantum Software Engineering;Quantum Software Engineering;QSE;1;6;5;Linear Software Models enable rigorous linear algebraic procedures for modular design of classical software systems. These procedures apply a spectral approach to matrix representations-e.g. the Laplacian-of the software system. Recent intensive research efforts towards quantum computers have increased expectations that quantum computing could in due time materialize as a practical alternative to classical computing. It is reasonable to inquire about quantum software desirable features and prepare in advance modular design procedures for quantum software systems. However, it does not make sense to have two totally separate procedures for modular design, one for classical software systems and another for quantum software systems. This paper claims that there should be just a single unified and rigorous design procedure for both classical and quantum software systems. Our common design procedure starting point for both classical and quantum software systems is Von Neumann's quantum notion of Density Operator and its Density Matrix representation. This paper formulates and demonstrates modular design in terms of projection operators obtained from a design Density Matrix and shows their equivalence to the Linear Software Models results of the Laplacian matrix spectrum for the classical case. The application in practice of the design procedure for both classical and quantum software is illustrated by case studies.  © 2021 IEEE.;"Density Matrix; Laplacian Matrix; Quantum Software Models; Software Design";"Design; Laplace transforms; Matrix algebra; Quantum computers; Quantum theory; Classical computing; Density operators; Desirable features; Intensive research; Laplacian matrices; Matrix representation; Projection Operator; Software systems designs; Application programs";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"Este artigo propõe um procedimento unificado e rigoroso para o design modular de sistemas de software clássicos e quânticos, baseado em modelos lineares e fundamentado na matriz densidade de von Neumann. O ponto de partida para ambos os paradigmas computacionais é a representação matricial do sistema via Laplaciana, que é reinterpretada como uma matriz densidade de projeto. A partir disso, são definidos módulos por meio de operadores de projeção, permitindo caracterizar componentes estruturais e funcionais tanto em diagramas UML quanto em circuitos quânticos de alto nível.

A principal contribuição do trabalho é a formulação de um modelo matemático comum para o design de software clássico e quântico, demonstrando que sistemas de software podem ser representados por uma única matriz densidade que permite extrair seus módulos. O artigo fornece provas teóricas para o número de módulos e seus componentes e valida o procedimento com estudos de caso aplicados ao padrão de projeto Prototype e ao algoritmo de busca de Grover. Este modelo estabelece uma ponte conceitual entre software clássico e quântico, promovendo integridade conceitual e facilitando o desenvolvimento de sistemas híbridos.";A principal contribuição do trabalho é a formulação de um modelo matemático comum para o design de software clássico e quântico, demonstrando que sistemas de software podem ser representados por uma única matriz densidade que permite extrair seus módulos. ;Software Engineering Models and Methods;
SCP0272;"Korenkov V.V.; Reshetnikov A.G.; Ulyanov S.V.";"Korenkov, V.V. (57193414565); Reshetnikov, A.G. (57200204175); Ulyanov, S.V. (7004263333)";LIT JINR, Dubna, Moscow Region, Russian Federation;Quantum Software Engineering Supremacy in Intelligent Robotics;2020;International Science and Technology Conference “Modern Network Technologies”;Computer Science;"Int. Sci. Technol. Conf. ""Modern Netw. Technol. "", MoNeTeC - Proc.";0;0;1;A new approach to a circuit implementation design of quantum algorithmic gates for the realization of quantum massive parallel computing presented. The main attention focused on the development of design method of fast quantum algorithm operators as superposition, entanglement and interference which are in general time-consuming operations due to the number of products that have to be performed. SW&HW support toolkit of supercomputing accelerator of quantum algorithm simulation on classical computer described. The method for performing Grover's interference without product operations introduced. New quantum genetic and quantum fuzzy inference algorithm gate design for intelligent robotic control considered. Quantum software engineering supremacy on Benchmarks demonstrated. © 2020 IEEE.;"classical efficient simulation; hardware architecture; intelligent robotics; Quantum algorithm gate; reduced quantum operations";"Fuzzy inference; Genetic algorithms; Inference engines; Mathematical operators; Molybdenum compounds; Product design; Quantum entanglement; Robotics; Software engineering; Tellurium compounds; Circuit implementation; Design method; Gate design; Intelligent robotics; New approaches; Product operations; Quantum algorithms; Quantum fuzzy inference; Intelligent robots";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo propõe um novo método de projeto de circuitos para a implementação de portas algorítmicas quânticas, com foco em acelerar operações essenciais como superposição, entrelaçamento e interferência. A proposta busca possibilitar simulações eficientes de algoritmos quânticos clássicos com suporte de hardware e software, voltadas especialmente ao controle inteligente de robôs. Além disso, o estudo pretende demonstrar a supremacia da engenharia de software quântica frente a abordagens clássicas por meio de benchmarks aplicados a sistemas de controle com alta complexidade e imprevisibilidade.

Entre as contribuições estão o desenvolvimento de operadores quânticos otimizados que eliminam operações de produto em algoritmos como o de Grover, a introdução de um algoritmo de inferência fuzzy quântico baseado em algoritmos genéticos quânticos (QGA) e a integração dessas soluções em controladores inteligentes de sistemas robóticos. A abordagem também apresenta um efeito de auto-organização sinergética que, a partir de bases de conhecimento imperfeitas de controladores fuzzy, constrói sistemas de controle robustos utilizando correlações quânticas. Benchmarks como o pêndulo invertido e manipuladores robóticos de sete graus de liberdade evidenciam a superioridade da abordagem quântica em precisão e robustez sob condições imprevistas.";O artigo propõe um novo método de projeto de circuitos para a implementação de portas algorítmicas quânticas, com foco em acelerar operações essenciais como superposição, entrelaçamento e interferência.;Software Engineering Models and Methods;
SCP0357;"Exman I.; Nechaev A.";"Exman, Iaakov (6602763312); Nechaev, Alexey (57218865450)";Software Engineering, The Jerusalem College of Engineering, JCE, Azrieli, Jerusalem, Israel;Quantum Software Models: Software Density Matrix is a Perfect Direct Sum of Module Matrices;2022;International Conference on Software Engineering and Knowledge Engineering  ;Software Engineering;SEKE;434;439;2;Quantum Software Models is a theoretical framework to systematically design and analyze any software system - be it quantum, classical or hybrid - representing it by a design Density Matrix. Recently, we have demonstrated a top-down approach, to decompose a whole software system Density Matrix into modules, using basis vector projectors of the Matrix. However, it would be even more natural to have a systematic bottom-up procedure, to compose a whole software system Density Matrix, given a set of well-designed software module matrices, taken as sub-systems. This is exactly the paper's purpose. The result obtained: the whole software system Density Matrix is a perfect Direct Sum of module density matrices. This result yields clear software design benefits: it is bidirectional, one can traverse the software system hierarchy top-down or bottom-up, in particular, gradually building up the whole system from verified correct modules, assured by spectral decoupling techniques. The claim is formally validated and is illustrated by software system studies. © 2022 Knowledge Systems Institute Graduate School. All rights reserved.;"Direct Sum; Modularity; Module Density Matrix; Quantum Software; Software Density Matrix; Software Design";"Computer software; Knowledge engineering; Density matrix; Direct sum; matrix; Modularity; Module density matrix; Quantum software; Software density matrix; Software modeling; Software-systems; Software design";English;Conference Paper;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O objetivo deste artigo é demonstrar que a matriz densidade de um sistema de software completo pode ser composta, de forma perfeita e sistemática, a partir da soma direta das matrizes densidade de seus módulos individuais. Os autores propõem uma abordagem teórica baseada na álgebra linear e na mecânica quântica para modelar sistemas de software — sejam eles clássicos, quânticos ou híbridos — utilizando o conceito de matriz densidade, e validam formalmente o procedimento de composição proposto.

As contribuições do trabalho incluem a formalização de um procedimento bottom-up para construir a matriz densidade de um sistema a partir de módulos verificados, a comprovação teórica de que essa soma direta preserva todas as propriedades estruturais e conceituais dos módulos, e a demonstração da aplicabilidade da abordagem tanto a sistemas clássicos, como o padrão de projeto Command, quanto a sistemas quânticos, como o algoritmo de busca de Grover. O estudo reforça o valor da modularidade e da integridade conceitual no design de software e oferece benefícios práticos como flexibilidade de composição, independência de representação e uniformidade na modelagem de sistemas complexos.";Os autores propõem uma abordagem teórica baseada na álgebra linear e na mecânica quântica para modelar sistemas de software — sejam eles clássicos, quânticos ou híbridos — utilizando o conceito de matriz densidade, e validam formalmente o procedimento de composição proposto.;Software Engineering Models and Methods;
SCP0485;"Wu N.; Song F.; Li X.";"Wu, Nan (57189058648); Song, Fangmin (7203075717); Li, Xiangdong (24329789000)";"National Key Laboratory for Novel Software Technology, Nanjing University, Jiangsu, 210023, China; Department of Computer Science and Technology, Nanjing University, Jiangsu, 210023, China; Department of Computer System Technology, NYCCT, City University of New York, NY, NY, 11201, United States";Study of a Quantum Framework for Search Based Software Engineering;2013;International Journal of Theoretical Physics;Science;Int. J. Theor. Phys.;2181;2186;2;The Search Based Software Engineering (SBSE) is widely used in the software engineering to identify optimal solutions. The traditional methods and algorithms used in SBSE are criticized due to their high costs. In this paper, we propose a rapid modified-Grover quantum searching method for SBSE, and theoretically this method can be applied to any search-space structure and any type of searching problems. © 2013 Springer Science+Business Media New York.;"Complex structure; Grover algorithm; Quantum algorithm; Searching; Software engineering";;English;Article;Primary Study;Proposal of solution;Software Engineering Models and Methods;O artigo propõe um método de busca quântica de Grover modificado rápido para Search Based Software Engineering (SBSE). Teoricamente, o método pode ser aplicado a qualquer estrutura de espaço de busca e a qualquer tipo de problema de busca.;O artigo propõe um método de busca quântica de Grover modificado rápido para Search Based Software Engineering (SBSE);Software Engineering Models and Methods;
WOS0017;"Ying, MS; Feng, Y";"Ying, Mingsheng; Feng, Yuan";"University of Technology Sydney; Tsinghua University";A Flowchart Language for Quantum Programming;2011;Transactions on Software Engineering;Software Engineering;TOSE;466;485;20;Several high-level quantum programming languages have been proposed in the previous research. In this paper, we define a low-level flowchart language for quantum programming, which can be used in implementation of high-level quantum languages and in design of quantum compilers. The formal semantics of the flowchart language is given, and the notion of correctness for programs written in this language is introduced. A structured quantum programming theorem is presented, which provides a technique of translating quantum flowchart programs into programs written in a high-level language, namely, a quantum extension of the while-language.;"Quantum programming; flowchart language; while-language; structured programming";"ARCHITECTURE; LOGIC";English;Article;Primary Study;Proposal of solution;Software Engineering Models and Methods;"O artigo tem como objetivo apresentar uma linguagem de fluxogramas (flowchart language) para programação quântica, visando facilitar a visualização, entendimento e desenvolvimento de algoritmos quânticos, especialmente para programadores não especialistas. A proposta busca preencher a lacuna entre o alto nível de abstração exigido na programação quântica e as ferramentas tradicionais de representação de lógica de controle.

A principal contribuição consiste no design de uma linguagem de fluxograma que representa conceitos fundamentais da computação quântica, como superposição, emaranhamento e medições, de maneira gráfica e estruturada. O artigo descreve a semântica da linguagem, apresenta exemplos práticos de programas quânticos modelados com ela e discute sua implementação como ferramenta educacional. A proposta contribui para o ensino, compreensão e prototipação de algoritmos quânticos, sendo especialmente útil para iniciantes ou para comunicação entre equipes multidisciplinares.";O artigo tem como objetivo apresentar uma linguagem de fluxogramas (flowchart language) para programação quântica, visando facilitar a visualização, entendimento e desenvolvimento de algoritmos quânticos, especialmente para programadores não especialistas.;Software Engineering Models and Methods;
SCP0094;"Zhao X.; Xu X.; Qi L.; Xia X.; Bilal M.; Gong W.; Kou H.";"Zhao, Xudong (58752833600); Xu, Xiaolong (55706201200); Qi, Lianyong (36519541200); Xia, Xiaoyu (57212269089); Bilal, Muhammad (56562681700); Gong, Wenwen (57191841764); Kou, Huaizhen (57210746632)";"School of Software, Nanjing University of Information Science and Technology, Nanjing, China; College of Computer Science and Technology, China University of Petroleum (East China), Qingdao, China; School of Computing Technologies, RMIT University, Melbourne, VIC, Australia; Division of Computer and Electronic Systems Engineering, Hankuk University of Foreign Studies, Yongin, South Korea; Department of Computer Science and Technology, Tsinghua University, Beijing, China; School of Computer Science and Engineering, Nanjing University of Science and Technology, Nanjing, China";Unraveling quantum computing system architectures: An extensive survey of cutting-edge paradigms;2024;Information and Software Technology;Software Engineering;INFSOF;0;0;4;Context: The convergence of physics and computer science in the realm of quantum computing systems has sparked a profound revolution within the computer industry. However, despite such promise, the existing focus on quantum software systems primarily centers on the generation of quantum source code, inadvertently overlooking the pivotal role of the overall software architecture. Objectives: In order to provide comprehensive guidance to researchers and practitioners engaged in quantum software development, employing an architecture-centered development model, an extensive literature review was conducted pertaining to existing research on quantum software architecture. The analysis encompasses a detailed examination of the characteristics exhibited by these studies and the identification of prospective challenges that lie ahead in the field of quantum software architecture. Methods: We have closely examined instances of quantum software engineering, quantum modeling languages, quantum design patterns, and quantum communication security to gain insights into the distinctive attributes associated with various software architecture approaches. Results: Our findings underscore the critical significance of prioritizing software architecture in the development of robust and efficient quantum software systems. Through the synthesis of these multifaceted aspects, both researchers and practitioners can devise quantum software solutions that are inherently architecture-centric. Conclusion: The software architecture of quantum computing systems plays a pivotal role in determining their ultimate success and usability. Given the ongoing advancements in quantum computing technology, the migration of traditional software architecture development methods to the domain of quantum software development holds significant importance. © 2023 Elsevier B.V.;"Quantum computing; Quantum software architecture; Quantum software engineering";"Computer software; Modeling languages; Quantum communication; Quantum computers; Quantum optics; Software architecture; Computer industry; Cutting edges; Development model; Quantum Computing; Quantum computing systems; Quantum software architecture; Quantum software engineering; Software-systems; Source codes; Systems architecture; Software design";English;Article;Primary Study;Evaluation research;Software Architecture;"O artigo tem como objetivo propor uma taxonomia abrangente para arquiteturas de sistemas híbridos clássicos-quânticos, com o intuito de oferecer uma estrutura conceitual clara para a organização, desenvolvimento e avaliação de tais sistemas. Dada a complexidade e diversidade das arquiteturas existentes, o trabalho busca esclarecer os elementos essenciais envolvidos nas integrações entre componentes clássicos e quânticos, promovendo um entendimento sistemático que auxilie tanto a comunidade acadêmica quanto a indústria.

Como contribuição, os autores apresentam uma taxonomia composta por cinco dimensões: abstrações de software, compiladores e otimizadores, middlewares e orquestração, conectividade e computação distribuída, e sistemas físicos. Essa estrutura permite classificar arquiteturas híbridas segundo características como o nível de acoplamento, mecanismos de comunicação e compartilhamento de tarefas entre os domínios clássico e quântico. Além disso, o artigo oferece exemplos concretos de aplicação da taxonomia em sistemas reais, evidenciando sua utilidade prática para análise e projeto de soluções híbridas. Ao sistematizar o conhecimento sobre arquiteturas híbridas, o trabalho avança na direção de um campo mais padronizado e reprodutível na engenharia de software quântica.";O artigo tem como objetivo propor uma taxonomia abrangente para arquiteturas de sistemas híbridos clássicos-quânticos, com o intuito de oferecer uma estrutura conceitual clara para a organização, desenvolvimento e avaliação de tais sistemas. ;Taxonomy for quantum software architecture;